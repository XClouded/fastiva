#include <precompiled_libcore.h>
#include <kernel/Kernel.h>

#include <java/io/InputStream.inl>
#include <java/io/OutputStream.inl>
#include <java/io/IOException.inl>
#include <java/io/PrintStream.inl>
#include <java/io/UTFDataFormatException.inl>
//#include <java/lang/CharacterData.inl>
#include <java/lang/StringBuffer.inl>

#include <string.h>
#include <math.h>
#include <stdio.h>

#define CHK_PTR(ptr) (ptr->chk$p())



// 한글 관련 부분 
#define UNICODE_HAN_FIRST	0xAC00	//가 
#define UNICODE_HAN_LAST	0xd79d	//횡


#define IS_MBCS_LEADING_CHAR(ch)	((ubyte)ch >= 0xa1 && (ubyte)ch <= 0xfe)
#define IS_MBCS_UNICODE(ch)			(ch >= 0x87)
#define IS_MBCS_BYTES(str) 			(IS_MBCS_LEADING_CHAR(str[0]) \
									&& IS_MBCS_LEADING_CHAR(str[1]))
//unicod kodeToUnicode(ushort ch);
unicod ksbytesToUnicode(const ubyte* str);
ushort unicodeToKode(unicod ch);

/**
 * 로컬 함수.
 *
 * 주어진 유니코드 배열이 바이트배열로 몇 바이트인지를 얻는다.
 *
 * 즉, 유니코드문자열을 한글 문자열로 변환할경우 크기가 변하게 되는데
 * 그 크기를 얻는것이다. 
 */




void TextBuff::append(
	const char* str,
	jint  len
) {
	checkBuffer(len);
	unicod* pUc = m_pItem;
	for (int i = len; i -- > 0; ) {
		*pUc++ = (ubyte)*str ++;
	}
	m_pItem = pUc;
}

void TextBuff::append(
	const unicod* str,
	jint  len
) {
	checkBuffer(len);
	unicod* pUc = m_pItem;
	for (int i = len; i -- > 0; ) {
		*pUc++ = (ubyte)*str ++;
	}
	m_pItem = pUc;
}

void TextBuff::append(
	java_lang_String_p s
) {
	unicod* pUc = fm::getUnsafeStringBuffer(s);
	TextBuff::append(pUc, s->length());
}

java_lang_String_p TextBuff::toString(
) {
	return FASTIVA_NEW(java_lang_String)(0, m_pItem - getBufferPtr(), m_pArray);
}

/**
 * 주어진 바이트 배열이 유니코드배열로 몇개인지를 얻는다.
 *
 * 즉, 한글문자열을 유니코드문자열로 변환할경우 크기가 변하게 되는데
 * 그 크기를 얻는것이다. 
 */

static inline int ucslen(const unicod* puc) {
	int len = 0;
	while (*puc != 0) {
		len ++;
		puc ++;
	}
	return len;
}

int fastiva_Runtime::getUnicodeLengthOfUTF8(const char* utf8, int str_len) {
	if (utf8 == ADDR_ZERO) {
		return 0;
	}
	if (utf8[0] == 0xc2) {
		int a = 3;
	}

	if (str_len < 0) {
		str_len = strlen(utf8);
	}

	int len;
    for (len = 0; str_len > 0; len++) {
		switch ((ubyte)(*utf8) >> 4) {
		default:
			utf8 += 1;
			str_len -= 1;
			continue;
			
		case 12: case 13:
			str_len -= 2;
			if (str_len < 0
			||  (utf8[1] & 0xC0) != 0x80) {
				return -1;
			}
			utf8 += 2;
			continue;
			
		case 14:	
			str_len -= 3;
			if (str_len < 0
			||  (utf8[1] & 0xC0) != 0x80
			||  (utf8[1] & 0xC0) != 0x80) {
				return -1;
			}
			utf8 += 3;
			continue;

		case 8: case 9: case 10: case 11: case 15:
			return -1;
		} 

    }
	return len;
}

int fastiva_Runtime::getUTFLength(
	const unicod* pChar,
	int len
) {
	int count = 0;
	while (len -- > 0) {
		unicod ch = *pChar ++ ;
		if (ch >= 0x0001 && ch <= 0x007F) {
			count += 1;
		}
		else if (ch <= 0x07FF) {
			count += 2;
		}
		else {
			count += 3;
		}
	}
	return count;
}

char* fastiva_Runtime::getUTFChars(
	char* buff,
	const unicod* ucs,
	int ucs_len
) {
	while (ucs_len -- > 0) {
		unicod ch = *ucs ++;
		if (ch >= 0x0001 && ch <= 0x007F) {
			*buff ++ = (char)ch;
		}
		else if (ch <= 0x07FF) {
			*buff ++ = 0xC0 | ((ch >> 6) & 0x1F);
			*buff ++ = 0x80 | (ch & 0x3F);
		}
		else {
			*buff ++ = 0xE0 | ((ch >> 12) & 0x0F);
			*buff ++ = 0x80 | ((ch >> 6) & 0x3F);
			*buff ++ = 0x80 | (ch & 0x3F);
		}
	}
	return buff;
}

java_lang_String_p fastiva_Runtime::createUTFString(const char* str) {
	return fastiva.createUTFStringA(str, strlen(str));
}

java_lang_String_p fastiva_Runtime::createUTFStringA(const char* str, int len) {
	KASSERT(len >= 0);

	int ucs_len = getUnicodeLengthOfUTF8(str, len);
	if (ucs_len < 0) {
		THROW_EX_NEW$(java_io_UTFDataFormatException, ());
	}
	Unicod_ap aChar = Unicod_A::create$(ucs_len);
	java_lang_String_p pString = FASTIVA_ALLOC(java_lang_String);
	pString->m_count = (ucs_len);
	pString->set__value(aChar);

	Unicod_A::Buffer region(aChar, 0, ucs_len);
	unicod* pch = region;

	const ubyte* utf8 = (ubyte*)str;
	while (ucs_len -- > 0) {
		switch ((unsigned char)(*utf8) >> 4) {
		default:
			*pch = utf8[0];
			utf8 += 1;
			break;
			
		case 0xC: case 0xD:
			*pch = ((utf8[0] & 0x1F) << 6) + (utf8[1] & 0x3F);
			utf8 += 2;
			break;
			
		case 0xE:	
			*pch = ((utf8[0] & 0x1F) << 12) + ((utf8[1] & 0x3F) << 6) + (utf8[2] & 0x3F);
			utf8 += 3;
			break;
		} 
		pch++;
	}
	return (java_lang_String_p)(pString);
}

java_lang_String_p fastiva_Runtime::createAsciiString(const char* str) {
	if (str == NULL) {
		return NULL;
	}
	return createAsciiStringA(str, strlen(str));
}
/*
#pragma auto_inline(on)
#pragma inline_depth(4)
//#pragma optimize( "t", on ) 
inline void FASTIVA_SET_SCRATCH_REGISTER2(int r) {
#ifdef _ARM_
	FASTIVA_DBREAK();
#else
#ifdef __GNUC__
	__asm__ __volatile__(
		"movl %0, %%eax \n\t"
		: 
		: "m"(r)
	);
#else
	_asm mov eax, r;
#endif
#endif
}
*/

java_lang_String_p fastiva_Runtime::createAsciiStringA(const char* str, int len) {
	KASSERT(len >= 0);

	Unicod_ap aChar = Unicod_A::create$(len);
	if (len > 0) {
		Unicod_A::Buffer r(aChar);
		unicod* pch = r;
		for (int i = len; i -- > 0; ) {
			*pch++ = *str++;
		}
	}

	//FASTIVA_SET_SCRATCH_REGISTER2((int)&java_lang_String_T$::g_context$);
	//_asm { mov eax, java_lang_String_T$::m_context$ }			
	//	register offset0 = 0;
	//_asm mov eax, 

	//_asm { mov eax, FASTIVA_SLOT_OFFSET(java_lang_String, FASTIVA_NATIVE_SLOT_NAME(toString, 0, ())) }
	void *p = java_lang_String_C$::importClass$();
	java_lang_String_p pString = FASTIVA_ALLOC(java_lang_String);
	pString->m_count = (len);
	pString->set__value(aChar);
//	pString->m_value = (aChar);
	return (java_lang_String_p)(pString);
}
#pragma inline_depth()
#pragma auto_inline()
//#pragma optimize( "", off ) 

extern fastiva_ArrayHeader* fastiva_allocArrayInstance(uint item_siz, java_lang_Class* pClass, int length, void* handle, void* data);

java_lang_String_p fm::createStringConstant(const unicod* str) {
	int len = str[0];
	str ++;
	Unicod_ap txtBuf = (Unicod_ap)fastiva_allocArrayInstance(sizeof(unicod), Unicod_A::importClass$(), len, (void*)1, (void*)str);
	java_lang_String_p pString = FASTIVA_ALLOC(java_lang_String);
	pString->m_count = (len);
	pString->set__value(txtBuf);
	return (java_lang_String_p)(pString);
}

java_lang_String_p fastiva_Runtime::createStringW(const unicod* str, int len) {
	KASSERT(len >= 0);
	Unicod_ap aChar = Unicod_A::create$(len);
	if (len > 0) {
		Unicod_A::Buffer r(aChar);
		unicod* pch = r;
		for (int i = len; i -- > 0; ) {
			*pch++ = *str++;
		}
	}
	java_lang_String_p pString = FASTIVA_ALLOC(java_lang_String);
	pString->m_count = (len);
	pString->set__value(aChar);
	return (java_lang_String_p)(pString);
}


//java_lang_String_p createFastivaStringW(const unicod* str, int len) {
//	return fastiva.createStringW(str, len);
//}


/*unicod* fm::getBuffer(java_lang_String_p pString) {
	Unicod_A::Buffer r(pString->m_value);
	return r;
}*/

java_lang_String_p fastiva_Runtime::createString(const char* str) {
	return fastiva.createStringA(str, -1);
}

java_lang_String_p fastiva_Runtime::createStringA(const char* str, int len) {
	if (str == ADDR_ZERO) {
		return (java_lang_String_p)FASTIVA_NULL;
	}
	if (len < 0) {
		len = strlen(str);
	}
	Unicod_ap aChar = fm::byteToCharArray((ubyte*)str, len);
	java_lang_String_p pString = FASTIVA_ALLOC(java_lang_String);
	//pString->m_count(len);
	//한글이나 2Byte문자에서는 len이 String의 count가 아니다.
	//따라서 aChar->length()가 count
	pString->m_count = (aChar->length());
	pString->set__value(aChar);
	return (java_lang_String_p)(pString);
}


Byte_ap fm::charToByteArray(const unicod* str, int len) {
	KASSERT(len >= 0);
	int wlen = fm::getMBCSLength(str, len);
	Byte_ap aByte = Byte_A::create$(wlen);
	Byte_A::Buffer r(aByte);
	char* pByte = (char *)(jbyte*)r;
	
	for (const unicod* str_end = str + len; str < str_end; ) {
		int ch1 = (unicod)*str++;
		if (IS_MBCS_UNICODE(ch1)) {
			int ch = unicodeToKode(ch1);
			if (ch == 0) {
				*pByte++ = (ubyte)'?';
				*pByte++ = (ubyte)'?';
			}
			else {
				*pByte++ = (ubyte)(ch >> 8);
				*pByte++ = (ubyte)(ch & 0xFF);
			}
		}
		else {
			*pByte++ = ch1;
		}
		KASSERT(pByte - (char*)(jbyte*)r <= aByte->length());
	}
	return aByte;
}

#define ______	'?'
static unicod const symbol[] = {
// a1a1
	0x3000, 0x3001, 0x3002, 0x00b7, 0x2025, 0x2026, 0x00a8, 0x3003, 0x00ad, 0x2015, 
	0x2225, 0xff3c, 0x223c, 0x2018, 0x2019, 0x201c, 0x201d, 0x3014, 0x3015, 0x3008, 
	0x3009, 0x300a, 0x300b, 0x300c, 0x300d, 0x300e, 0x300f, 0x3010, 0x3011, 0x00b1, 
	0x00d7, 0x00f7, 0x2260, 0x2264, 0x2265, 0x221e, 0x2234, 0x00b0, 0x2032, 0x2033, 
	0x2103, 0x212b, 0xffe0, 0xffe1, 0xffe5, 0x2642, 0x2640, 0x2220, 0x22a5, 0x2312, 
	0x2202, 0x2207, 0x2261, 0x2252, 0x00a7, 0x203b, 0x2606, 0x2605, 0x25cb, 0x25cf, 
	0x25ce, 0x25c7, 0x25c6, 0x25a1, 0x25a0, 0x25b3, 0x25b2, 0x25bd, 0x25bc, 0x2192, 
	0x2190, 0x2191, 0x2193, 0x2194, 0x3013, 0x226a, 0x226b, 0x221a, 0x223d, 0x221d, 
	0x2235, 0x222b, 0x222c, 0x2208, 0x220b, 0x2286, 0x2287, 0x2282, 0x2283, 0x222a, 
	0x2229, 0x2227, 0x2228, 0xffe2, 
// a2a1[] = {
	0x21d2, 0x21d4, 0x2200, 0x2203, 0x00b4, 0xff5e, 0x02c7, 0x02d8, 0x02dd, 0x02da, 
	0x02d9, 0x00b8, 0x02db, 0x00a1, 0x00bf, 0x02d0, 0x222e, 0x2211, 0x220f, 0x00a4, 
	0x2109, 0x2030, 0x25c1, 0x25c0, 0x25b7, 0x25b6, 0x2664, 0x2660, 0x2661, 0x2665, 
	0x2667, 0x2663, 0x2299, 0x25c8, 0x25a3, 0x25d0, 0x25d1, 0x2592, 0x25a4, 0x25a5, 
	0x25a8, 0x25a7, 0x25a6, 0x25a9, 0x2668, 0x260f, 0x260e, 0x261c, 0x261e, 0x00b6, 
	0x2020, 0x2021, 0x2195, 0x2197, 0x2199, 0x2196, 0x2198, 0x266d, 0x2669, 0x266a, 
	0x266c, 0x327f, 0x321c, 0x2116, 0x33c7, 0x2122, 0x33c2, 0x33d8, 0x2121, ______, 
	______, ______, ______, ______, ______, ______, ______, ______, ______, ______, 
	______, ______, ______, ______, ______, ______, ______, ______, ______, ______, 
	______, ______, ______, ______, 
// a3a1[] = {
	0xff01, 0xff02, 0xff03, 0xff04, 0xff05, 0xff06, 0xff07, 0xff08, 0xff09, 0xff0a, 
	0xff0b, 0xff0c, 0xff0d, 0xff0e, 0xff0f, 0xff10, 0xff11, 0xff12, 0xff13, 0xff14, 
	0xff15, 0xff16, 0xff17, 0xff18, 0xff19, 0xff1a, 0xff1b, 0xff1c, 0xff1d, 0xff1e, 
	0xff1f, 0xff20, 0xff21, 0xff22, 0xff23, 0xff24, 0xff25, 0xff26, 0xff27, 0xff28, 
	0xff29, 0xff2a, 0xff2b, 0xff2c, 0xff2d, 0xff2e, 0xff2f, 0xff30, 0xff31, 0xff32, 
	0xff33, 0xff34, 0xff35, 0xff36, 0xff37, 0xff38, 0xff39, 0xff3a, 0xff3b, 0xffe6, 
	0xff3d, 0xff3e, 0xff3f, 0xff40, 0xff41, 0xff42, 0xff43, 0xff44, 0xff45, 0xff46, 
	0xff47, 0xff48, 0xff49, 0xff4a, 0xff4b, 0xff4c, 0xff4d, 0xff4e, 0xff4f, 0xff50, 
	0xff51, 0xff52, 0xff53, 0xff54, 0xff55, 0xff56, 0xff57, 0xff58, 0xff59, 0xff5a, 
	0xff5b, 0xff5c, 0xff5d, 0xffe3, 
// a4a1[] = {
	0x3131, 0x3132, 0x3133, 0x3134, 0x3135, 0x3136, 0x3137, 0x3138, 0x3139, 0x313a, 
	0x313b, 0x313c, 0x313d, 0x313e, 0x313f, 0x3140, 0x3141, 0x3142, 0x3143, 0x3144, 
	0x3145, 0x3146, 0x3147, 0x3148, 0x3149, 0x314a, 0x314b, 0x314c, 0x314d, 0x314e, 
	0x314f, 0x3150, 0x3151, 0x3152, 0x3153, 0x3154, 0x3155, 0x3156, 0x3157, 0x3158, 
	0x3159, 0x315a, 0x315b, 0x315c, 0x315d, 0x315e, 0x315f, 0x3160, 0x3161, 0x3162, 
	0x3163, 0x3164, 0x3165, 0x3166, 0x3167, 0x3168, 0x3169, 0x316a, 0x316b, 0x316c, 
	0x316d, 0x316e, 0x316f, 0x3170, 0x3171, 0x3172, 0x3173, 0x3174, 0x3175, 0x3176, 
	0x3177, 0x3178, 0x3179, 0x317a, 0x317b, 0x317c, 0x317d, 0x317e, 0x317f, 0x3180, 
	0x3181, 0x3182, 0x3183, 0x3184, 0x3185, 0x3186, 0x3187, 0x3188, 0x3189, 0x318a, 
	0x318b, 0x318c, 0x318d, 0x318e, 
// a5a1[] = {
	0x2170, 0x2171, 0x2172, 0x2173, 0x2174, 0x2175, 0x2176, 0x2177, 0x2178, 0x2179, 
	______, ______, ______, ______, ______, 0x2160, 0x2161, 0x2162, 0x2163, 0x2164, 
	0x2165, 0x2166, 0x2167, 0x2168, 0x2169, ______, ______, ______, ______, ______, 
	______, ______, 0x0391, 0x0392, 0x0393, 0x0394, 0x0395, 0x0396, 0x0397, 0x0398, 
	0x0399, 0x039a, 0x039b, 0x039c, 0x039d, 0x039e, 0x039f, 0x03a0, 0x03a1, 0x03a3, 
	0x03a4, 0x03a5, 0x03a6, 0x03a7, 0x03a8, 0x03a9, ______, ______, ______, ______, 
	______, ______, ______, ______, 0x03b1, 0x03b2, 0x03b3, 0x03b4, 0x03b5, 0x03b6, 
	0x03b7, 0x03b8, 0x03b9, 0x03ba, 0x03bb, 0x03bc, 0x03bd, 0x03be, 0x03bf, 0x03c0, 
	0x03c1, 0x03c3, 0x03c4, 0x03c5, 0x03c6, 0x03c7, 0x03c8, 0x03c9, ______, ______, 
	______, ______, ______, ______, 
// a6a1[] = {
	0x2500, 0x2502, 0x250c, 0x2510, 0x2518, 0x2514, 0x251c, 0x252c, 0x2524, 0x2534, 
	0x253c, 0x2501, 0x2503, 0x250f, 0x2513, 0x251b, 0x2517, 0x2523, 0x2533, 0x252b, 
	0x253b, 0x254b, 0x2520, 0x252f, 0x2528, 0x2537, 0x253f, 0x251d, 0x2530, 0x2525, 
	0x2538, 0x2542, 0x2512, 0x2511, 0x251a, 0x2519, 0x2516, 0x2515, 0x250e, 0x250d, 
	0x251e, 0x251f, 0x2521, 0x2522, 0x2526, 0x2527, 0x2529, 0x252a, 0x252d, 0x252e, 
	0x2531, 0x2532, 0x2535, 0x2536, 0x2539, 0x253a, 0x253d, 0x253e, 0x2540, 0x2541, 
	0x2543, 0x2544, 0x2545, 0x2546, 0x2547, 0x2548, 0x2549, 0x254a, ______, ______, 
	______, ______, ______, ______, ______, ______, ______, ______, ______, ______, 
	______, ______, ______, ______, ______, ______, ______, ______, ______, ______, 
	______, ______, ______, ______, 
// a7a1[] = {
	0x3395, 0x3396, 0x3397, 0x2113, 0x3398, 0x33c4, 0x33a3, 0x33a4, 0x33a5, 0x33a6, 
	0x3399, 0x339a, 0x339b, 0x339c, 0x339d, 0x339e, 0x339f, 0x33a0, 0x33a1, 0x33a2, 
	0x33ca, 0x338d, 0x338e, 0x338f, 0x33cf, 0x3388, 0x3389, 0x33c8, 0x33a7, 0x33a8, 
	0x33b0, 0x33b1, 0x33b2, 0x33b3, 0x33b4, 0x33b5, 0x33b6, 0x33b7, 0x33b8, 0x33b9, 
	0x3380, 0x3381, 0x3382, 0x3383, 0x3384, 0x33ba, 0x33bb, 0x33bc, 0x33bd, 0x33be, 
	0x33bf, 0x3390, 0x3391, 0x3392, 0x3393, 0x3394, 0x2126, 0x33c0, 0x33c1, 0x338a, 
	0x338b, 0x338c, 0x33d6, 0x33c5, 0x33ad, 0x33ae, 0x33af, 0x33db, 0x33a9, 0x33aa, 
	0x33ab, 0x33ac, 0x33dd, 0x33d0, 0x33d3, 0x33c3, 0x33c9, 0x33dc, 0x33c6, ______, 
	______, ______, ______, ______, ______, ______, ______, ______, ______, ______, 
	______, ______, ______, ______, 
// a8a1[] = {
	0x00c6, 0x00d0, 0x00aa, 0x0126, ______, 0x0132, ______, 0x013f, 0x0141, 0x00d8, 
	0x0152, 0x00ba, 0x00de, 0x0166, 0x014a, ______, 0x3260, 0x3261, 0x3262, 0x3263, 
	0x3264, 0x3265, 0x3266, 0x3267, 0x3268, 0x3269, 0x326a, 0x326b, 0x326c, 0x326d, 
	0x326e, 0x326f, 0x3270, 0x3271, 0x3272, 0x3273, 0x3274, 0x3275, 0x3276, 0x3277, 
	0x3278, 0x3279, 0x327a, 0x327b, 0x24d0, 0x24d1, 0x24d2, 0x24d3, 0x24d4, 0x24d5, 
	0x24d6, 0x24d7, 0x24d8, 0x24d9, 0x24da, 0x24db, 0x24dc, 0x24dd, 0x24de, 0x24df, 
	0x24e0, 0x24e1, 0x24e2, 0x24e3, 0x24e4, 0x24e5, 0x24e6, 0x24e7, 0x24e8, 0x24e9, 
	0x2460, 0x2461, 0x2462, 0x2463, 0x2464, 0x2465, 0x2466, 0x2467, 0x2468, 0x2469, 
	0x246a, 0x246b, 0x246c, 0x246d, 0x246e, 0x00bd, 0x2153, 0x2154, 0x00bc, 0x00be, 
	0x215b, 0x215c, 0x215d, 0x215e, 
// a9a1[] = {
	0x00e6, 0x0111, 0x00f0, 0x0127, 0x0131, 0x0133, 0x0138, 0x0140, 0x0142, 0x00f8, 
	0x0153, 0x00df, 0x00fe, 0x0167, 0x014b, 0x0149, 0x3200, 0x3201, 0x3202, 0x3203, 
	0x3204, 0x3205, 0x3206, 0x3207, 0x3208, 0x3209, 0x320a, 0x320b, 0x320c, 0x320d, 
	0x320e, 0x320f, 0x3210, 0x3211, 0x3212, 0x3213, 0x3214, 0x3215, 0x3216, 0x3217, 
	0x3218, 0x3219, 0x321a, 0x321b, 0x249c, 0x249d, 0x249e, 0x249f, 0x24a0, 0x24a1, 
	0x24a2, 0x24a3, 0x24a4, 0x24a5, 0x24a6, 0x24a7, 0x24a8, 0x24a9, 0x24aa, 0x24ab, 
	0x24ac, 0x24ad, 0x24ae, 0x24af, 0x24b0, 0x24b1, 0x24b2, 0x24b3, 0x24b4, 0x24b5, 
	0x2474, 0x2475, 0x2476, 0x2477, 0x2478, 0x2479, 0x247a, 0x247b, 0x247c, 0x247d, 
	0x247e, 0x247f, 0x2480, 0x2481, 0x2482, 0x00b9, 0x00b2, 0x00b3, 0x2074, 0x207f, 
	0x2081, 0x2082, 0x2083, 0x2084, 
// aaa1[] = {
	0x3041, 0x3042, 0x3043, 0x3044, 0x3045, 0x3046, 0x3047, 0x3048, 0x3049, 0x304a, 
	0x304b, 0x304c, 0x304d, 0x304e, 0x304f, 0x3050, 0x3051, 0x3052, 0x3053, 0x3054, 
	0x3055, 0x3056, 0x3057, 0x3058, 0x3059, 0x305a, 0x305b, 0x305c, 0x305d, 0x305e, 
	0x305f, 0x3060, 0x3061, 0x3062, 0x3063, 0x3064, 0x3065, 0x3066, 0x3067, 0x3068, 
	0x3069, 0x306a, 0x306b, 0x306c, 0x306d, 0x306e, 0x306f, 0x3070, 0x3071, 0x3072, 
	0x3073, 0x3074, 0x3075, 0x3076, 0x3077, 0x3078, 0x3079, 0x307a, 0x307b, 0x307c, 
	0x307d, 0x307e, 0x307f, 0x3080, 0x3081, 0x3082, 0x3083, 0x3084, 0x3085, 0x3086, 
	0x3087, 0x3088, 0x3089, 0x308a, 0x308b, 0x308c, 0x308d, 0x308e, 0x308f, 0x3090, 
	0x3091, 0x3092, 0x3093, ______, ______, ______, ______, ______, ______, ______, 
	______, ______, ______, ______, 
// aba1[] = {
	0x30a1, 0x30a2, 0x30a3, 0x30a4, 0x30a5, 0x30a6, 0x30a7, 0x30a8, 0x30a9, 0x30aa, 
	0x30ab, 0x30ac, 0x30ad, 0x30ae, 0x30af, 0x30b0, 0x30b1, 0x30b2, 0x30b3, 0x30b4, 
	0x30b5, 0x30b6, 0x30b7, 0x30b8, 0x30b9, 0x30ba, 0x30bb, 0x30bc, 0x30bd, 0x30be, 
	0x30bf, 0x30c0, 0x30c1, 0x30c2, 0x30c3, 0x30c4, 0x30c5, 0x30c6, 0x30c7, 0x30c8, 
	0x30c9, 0x30ca, 0x30cb, 0x30cc, 0x30cd, 0x30ce, 0x30cf, 0x30d0, 0x30d1, 0x30d2, 
	0x30d3, 0x30d4, 0x30d5, 0x30d6, 0x30d7, 0x30d8, 0x30d9, 0x30da, 0x30db, 0x30dc, 
	0x30dd, 0x30de, 0x30df, 0x30e0, 0x30e1, 0x30e2, 0x30e3, 0x30e4, 0x30e5, 0x30e6, 
	0x30e7, 0x30e8, 0x30e9, 0x30ea, 0x30eb, 0x30ec, 0x30ed, 0x30ee, 0x30ef, 0x30f0, 
	0x30f1, 0x30f2, 0x30f3, 0x30f4, 0x30f5, 0x30f6, ______, ______, ______, ______, 
	______, ______, ______, ______, 
// aca1[] = {
	0x0410, 0x0411, 0x0412, 0x0413, 0x0414, 0x0415, 0x0401, 0x0416, 0x0417, 0x0418, 
	0x0419, 0x041a, 0x041b, 0x041c, 0x041d, 0x041e, 0x041f, 0x0420, 0x0421, 0x0422, 
	0x0423, 0x0424, 0x0425, 0x0426, 0x0427, 0x0428, 0x0429, 0x042a, 0x042b, 0x042c, 
	0x042d, 0x042e, 0x042f, ______, ______, ______, ______, ______, ______, ______, 
	______, ______, ______, ______, ______, ______, ______, ______, 0x0430, 0x0431, 
	0x0432, 0x0433, 0x0434, 0x0435, 0x0451, 0x0436, 0x0437, 0x0438, 0x0439, 0x043a, 
	0x043b, 0x043c, 0x043d, 0x043e, 0x043f, 0x0440, 0x0441, 0x0442, 0x0443, 0x0444, 
	0x0445, 0x0446, 0x0447, 0x0448, 0x0449, 0x044a, 0x044b, 0x044c, 0x044d, 0x044e, 
	0x044f, ______, ______, ______, ______, ______, ______, ______, ______, ______, 
	______, ______, ______, ______, 
};

unicod const symbolMap[][2] = {
	{  0xB7, 0xA1A4 },
	{ 0x111, 0xa9a2 },{ 0x126, 0xa8a4 },{ 0x127, 0xa9a4 },{ 0x131, 0xa9a5 },
	{ 0x132, 0xa8a6 },{ 0x133, 0xa9a6 },{ 0x138, 0xa9a7 },{ 0x13f, 0xa8a8 },
	{ 0x140, 0xa9a8 },{ 0x141, 0xa8a9 },{ 0x142, 0xa9a9 },{ 0x149, 0xa9b0 },
	{ 0x14a, 0xa8af },{ 0x14b, 0xa9af },{ 0x152, 0xa8ab },{ 0x153, 0xa9ab },
	{ 0x166, 0xa8ae },{ 0x167, 0xa9ae },{ 0x2c7, 0xa2a7 },{ 0x2d0, 0xa2b0 },
	{ 0x2d8, 0xa2a8 },{ 0x2d9, 0xa2ab },{ 0x2da, 0xa2aa },{ 0x2db, 0xa2ad },
	{ 0x2dd, 0xa2a9 },{ 0x391, 0xa5c1 },{ 0x392, 0xa5c2 },{ 0x393, 0xa5c3 },
	{ 0x394, 0xa5c4 },{ 0x395, 0xa5c5 },{ 0x396, 0xa5c6 },{ 0x397, 0xa5c7 },
	{ 0x398, 0xa5c8 },{ 0x399, 0xa5c9 },{ 0x39a, 0xa5ca },{ 0x39b, 0xa5cb },
	{ 0x39c, 0xa5cc },{ 0x39d, 0xa5cd },{ 0x39e, 0xa5ce },{ 0x39f, 0xa5cf },
	{ 0x3a0, 0xa5d0 },{ 0x3a1, 0xa5d1 },{ 0x3a3, 0xa5d2 },{ 0x3a4, 0xa5d3 },
	{ 0x3a5, 0xa5d4 },{ 0x3a6, 0xa5d5 },{ 0x3a7, 0xa5d6 },{ 0x3a8, 0xa5d7 },
	{ 0x3a9, 0xa5d8 },{ 0x3b1, 0xa5e1 },{ 0x3b2, 0xa5e2 },{ 0x3b3, 0xa5e3 },
	{ 0x3b4, 0xa5e4 },{ 0x3b5, 0xa5e5 },{ 0x3b6, 0xa5e6 },{ 0x3b7, 0xa5e7 },
	{ 0x3b8, 0xa5e8 },{ 0x3b9, 0xa5e9 },{ 0x3ba, 0xa5ea },{ 0x3bb, 0xa5eb },
	{ 0x3bc, 0xa5ec },{ 0x3bd, 0xa5ed },{ 0x3be, 0xa5ee },{ 0x3bf, 0xa5ef },
	{ 0x3c0, 0xa5f0 },{ 0x3c1, 0xa5f1 },{ 0x3c3, 0xa5f2 },{ 0x3c4, 0xa5f3 },
	{ 0x3c5, 0xa5f4 },{ 0x3c6, 0xa5f5 },{ 0x3c7, 0xa5f6 },{ 0x3c8, 0xa5f7 },
	{ 0x3c9, 0xa5f8 },{ 0x401, 0xaca7 },{ 0x410, 0xaca1 },{ 0x411, 0xaca2 },
	{ 0x412, 0xaca3 },{ 0x413, 0xaca4 },{ 0x414, 0xaca5 },{ 0x415, 0xaca6 },
	{ 0x416, 0xaca8 },{ 0x417, 0xaca9 },{ 0x418, 0xacaa },{ 0x419, 0xacab },
	{ 0x41a, 0xacac },{ 0x41b, 0xacad },{ 0x41c, 0xacae },{ 0x41d, 0xacaf },
	{ 0x41e, 0xacb0 },{ 0x41f, 0xacb1 },{ 0x420, 0xacb2 },{ 0x421, 0xacb3 },
	{ 0x422, 0xacb4 },{ 0x423, 0xacb5 },{ 0x424, 0xacb6 },{ 0x425, 0xacb7 },
	{ 0x426, 0xacb8 },{ 0x427, 0xacb9 },{ 0x428, 0xacba },{ 0x429, 0xacbb },
	{ 0x42a, 0xacbc },{ 0x42b, 0xacbd },{ 0x42c, 0xacbe },{ 0x42d, 0xacbf },
	{ 0x42e, 0xacc0 },{ 0x42f, 0xacc1 },{ 0x430, 0xacd1 },{ 0x431, 0xacd2 },
	{ 0x432, 0xacd3 },{ 0x433, 0xacd4 },{ 0x434, 0xacd5 },{ 0x435, 0xacd6 },
	{ 0x436, 0xacd8 },{ 0x437, 0xacd9 },{ 0x438, 0xacda },{ 0x439, 0xacdb },
	{ 0x43a, 0xacdc },{ 0x43b, 0xacdd },{ 0x43c, 0xacde },{ 0x43d, 0xacdf },
	{ 0x43e, 0xace0 },{ 0x43f, 0xace1 },{ 0x440, 0xace2 },{ 0x441, 0xace3 },
	{ 0x442, 0xace4 },{ 0x443, 0xace5 },{ 0x444, 0xace6 },{ 0x445, 0xace7 },
	{ 0x446, 0xace8 },{ 0x447, 0xace9 },{ 0x448, 0xacea },{ 0x449, 0xaceb },
	{ 0x44a, 0xacec },{ 0x44b, 0xaced },{ 0x44c, 0xacee },{ 0x44d, 0xacef },
	{ 0x44e, 0xacf0 },{ 0x44f, 0xada1 },{ 0x44f, 0xacf1 },{ 0x451, 0xacd7 },
	{ 0x2015, 0xa1aa },{ 0x2018, 0xa1ae },{ 0x2019, 0xa1af },{ 0x201c, 0xa1b0 },
	{ 0x201d, 0xa1b1 },{ 0x2020, 0xa2d3 },{ 0x2021, 0xa2d4 },{ 0x2025, 0xa1a5 },
	{ 0x2026, 0xa1a6 },{ 0x2030, 0xa2b6 },{ 0x2032, 0xa1c7 },{ 0x2033, 0xa1c8 },
	{ 0x203b, 0xa1d8 },{ 0x2074, 0xa9f9 },{ 0x207f, 0xa9fa },{ 0x2081, 0xa9fb },
	{ 0x2082, 0xa9fc },{ 0x2083, 0xa9fd },{ 0x2084, 0xa9fe },{ 0x2103, 0xa1c9 },
	{ 0x2109, 0xa2b5 },{ 0x2113, 0xa7a4 },{ 0x2116, 0xa2e0 },{ 0x2121, 0xa2e5 },
	{ 0x2122, 0xa2e2 },{ 0x2126, 0xa7d9 },{ 0x212b, 0xa1ca },{ 0x2153, 0xa8f7 },
	{ 0x2154, 0xa8f8 },{ 0x215b, 0xa8fb },{ 0x215c, 0xa8fc },{ 0x215d, 0xa8fd },
	{ 0x215e, 0xa8fe },{ 0x2160, 0xa5b0 },{ 0x2161, 0xa5b1 },{ 0x2162, 0xa5b2 },
	{ 0x2163, 0xa5b3 },{ 0x2164, 0xa5b4 },{ 0x2165, 0xa5b5 },{ 0x2166, 0xa5b6 },
	{ 0x2167, 0xa5b7 },{ 0x2168, 0xa5b8 },{ 0x2169, 0xa5b9 },{ 0x2170, 0xa5a1 },
	{ 0x2171, 0xa5a2 },{ 0x2172, 0xa5a3 },{ 0x2173, 0xa5a4 },{ 0x2174, 0xa5a5 },
	{ 0x2175, 0xa5a6 },{ 0x2176, 0xa5a7 },{ 0x2177, 0xa5a8 },{ 0x2178, 0xa5a9 },
	{ 0x2179, 0xa5aa },{ 0x2190, 0xa1e7 },{ 0x2191, 0xa1e8 },{ 0x2192, 0xa1e6 },
	{ 0x2193, 0xa1e9 },{ 0x2194, 0xa1ea },{ 0x2195, 0xa2d5 },{ 0x2196, 0xa2d8 },
	{ 0x2197, 0xa2d6 },{ 0x2198, 0xa2d9 },{ 0x2199, 0xa2d7 },{ 0x21d2, 0xa2a1 },
	{ 0x21d4, 0xa2a2 },{ 0x2200, 0xa2a3 },{ 0x2202, 0xa1d3 },{ 0x2203, 0xa2a4 },
	{ 0x2207, 0xa1d4 },{ 0x2208, 0xa1f4 },{ 0x220b, 0xa1f5 },{ 0x220f, 0xa2b3 },
	{ 0x2211, 0xa2b2 },{ 0x221a, 0xa1ee },{ 0x221d, 0xa1f0 },{ 0x221e, 0xa1c4 },
	{ 0x2220, 0xa1d0 },{ 0x2225, 0xa1ab },{ 0x2227, 0xa1fc },{ 0x2228, 0xa1fd },
	{ 0x2229, 0xa1fb },{ 0x222a, 0xa1fa },{ 0x222b, 0xa1f2 },{ 0x222c, 0xa1f3 },
	{ 0x222e, 0xa2b1 },{ 0x2234, 0xa1c5 },{ 0x2235, 0xa1f1 },{ 0x223c, 0xa1ad },
	{ 0x223d, 0xa1ef },{ 0x2252, 0xa1d6 },{ 0x2260, 0xa1c1 },{ 0x2261, 0xa1d5 },
	{ 0x2264, 0xa1c2 },{ 0x2265, 0xa1c3 },{ 0x226a, 0xa1ec },{ 0x226b, 0xa1ed },
	{ 0x2282, 0xa1f8 },{ 0x2283, 0xa1f9 },{ 0x2286, 0xa1f6 },{ 0x2287, 0xa1f7 },
	{ 0x2299, 0xa2c1 },{ 0x22a5, 0xa1d1 },{ 0x2312, 0xa1d2 },{ 0x2460, 0xa8e7 },
	{ 0x2461, 0xa8e8 },{ 0x2462, 0xa8e9 },{ 0x2463, 0xa8ea },{ 0x2464, 0xa8eb },
	{ 0x2465, 0xa8ec },{ 0x2466, 0xa8ed },{ 0x2467, 0xa8ee },{ 0x2468, 0xa8ef },
	{ 0x2469, 0xa8f0 },{ 0x246a, 0xa8f1 },{ 0x246b, 0xa8f2 },{ 0x246c, 0xa8f3 },
	{ 0x246d, 0xa8f4 },{ 0x246e, 0xa8f5 },{ 0x2474, 0xa9e7 },{ 0x2475, 0xa9e8 },
	{ 0x2476, 0xa9e9 },{ 0x2477, 0xa9ea },{ 0x2478, 0xa9eb },{ 0x2479, 0xa9ec },
	{ 0x247a, 0xa9ed },{ 0x247b, 0xa9ee },{ 0x247c, 0xa9ef },{ 0x247d, 0xa9f0 },
	{ 0x247e, 0xa9f1 },{ 0x247f, 0xa9f2 },{ 0x2480, 0xa9f3 },{ 0x2481, 0xa9f4 },
	{ 0x2482, 0xa9f5 },{ 0x249c, 0xa9cd },{ 0x249d, 0xa9ce },{ 0x249e, 0xa9cf },
	{ 0x249f, 0xa9d0 },{ 0x24a0, 0xa9d1 },{ 0x24a1, 0xa9d2 },{ 0x24a2, 0xa9d3 },
	{ 0x24a3, 0xa9d4 },{ 0x24a4, 0xa9d5 },{ 0x24a5, 0xa9d6 },{ 0x24a6, 0xa9d7 },
	{ 0x24a7, 0xa9d8 },{ 0x24a8, 0xa9d9 },{ 0x24a9, 0xa9da },{ 0x24aa, 0xa9db },
	{ 0x24ab, 0xa9dc },{ 0x24ac, 0xa9dd },{ 0x24ad, 0xa9de },{ 0x24ae, 0xa9df },
	{ 0x24af, 0xa9e0 },{ 0x24b0, 0xa9e1 },{ 0x24b1, 0xa9e2 },{ 0x24b2, 0xa9e3 },
	{ 0x24b3, 0xa9e4 },{ 0x24b4, 0xa9e5 },{ 0x24b5, 0xa9e6 },{ 0x24d0, 0xa8cd },
	{ 0x24d1, 0xa8ce },{ 0x24d2, 0xa8cf },{ 0x24d3, 0xa8d0 },{ 0x24d4, 0xa8d1 },
	{ 0x24d5, 0xa8d2 },{ 0x24d6, 0xa8d3 },{ 0x24d7, 0xa8d4 },{ 0x24d8, 0xa8d5 },
	{ 0x24d9, 0xa8d6 },{ 0x24da, 0xa8d7 },{ 0x24db, 0xa8d8 },{ 0x24dc, 0xa8d9 },
	{ 0x24dd, 0xa8da },{ 0x24de, 0xa8db },{ 0x24df, 0xa8dc },{ 0x24e0, 0xa8dd },
	{ 0x24e1, 0xa8de },{ 0x24e2, 0xa8df },{ 0x24e3, 0xa8e0 },{ 0x24e4, 0xa8e1 },
	{ 0x24e5, 0xa8e2 },{ 0x24e6, 0xa8e3 },{ 0x24e7, 0xa8e4 },{ 0x24e8, 0xa8e5 },
	{ 0x24e9, 0xa8e6 },{ 0x2500, 0xa6a1 },{ 0x2501, 0xa6ac },{ 0x2502, 0xa6a2 },
	{ 0x2503, 0xa6ad },{ 0x250c, 0xa6a3 },{ 0x250d, 0xa6c8 },{ 0x250e, 0xa6c7 },
	{ 0x250f, 0xa6ae },{ 0x2510, 0xa6a4 },{ 0x2511, 0xa6c2 },{ 0x2512, 0xa6c1 },
	{ 0x2513, 0xa6af },{ 0x2514, 0xa6a6 },{ 0x2515, 0xa6c6 },{ 0x2516, 0xa6c5 },
	{ 0x2517, 0xa6b1 },{ 0x2518, 0xa6a5 },{ 0x2519, 0xa6c4 },{ 0x251a, 0xa6c3 },
	{ 0x251b, 0xa6b0 },{ 0x251c, 0xa6a7 },{ 0x251d, 0xa6bc },{ 0x251e, 0xa6c9 },
	{ 0x251f, 0xa6ca },{ 0x2520, 0xa6b7 },{ 0x2521, 0xa6cb },{ 0x2522, 0xa6cc },
	{ 0x2523, 0xa6b2 },{ 0x2524, 0xa6a9 },{ 0x2525, 0xa6be },{ 0x2526, 0xa6cd },
	{ 0x2527, 0xa6ce },{ 0x2528, 0xa6b9 },{ 0x2529, 0xa6cf },{ 0x252a, 0xa6d0 },
	{ 0x252b, 0xa6b4 },{ 0x252c, 0xa6a8 },{ 0x252d, 0xa6d1 },{ 0x252e, 0xa6d2 },
	{ 0x252f, 0xa6b8 },{ 0x2530, 0xa6bd },{ 0x2531, 0xa6d3 },{ 0x2532, 0xa6d4 },
	{ 0x2533, 0xa6b3 },{ 0x2534, 0xa6aa },{ 0x2535, 0xa6d5 },{ 0x2536, 0xa6d6 },
	{ 0x2537, 0xa6ba },{ 0x2538, 0xa6bf },{ 0x2539, 0xa6d7 },{ 0x253a, 0xa6d8 },
	{ 0x253b, 0xa6b5 },{ 0x253c, 0xa6ab },{ 0x253d, 0xa6d9 },{ 0x253e, 0xa6da },
	{ 0x253f, 0xa6bb },{ 0x2540, 0xa6db },{ 0x2541, 0xa6dc },{ 0x2542, 0xa6c0 },
	{ 0x2543, 0xa6dd },{ 0x2544, 0xa6de },{ 0x2545, 0xa6df },{ 0x2546, 0xa6e0 },
	{ 0x2547, 0xa6e1 },{ 0x2548, 0xa6e2 },{ 0x2549, 0xa6e3 },{ 0x254a, 0xa6e4 },
	{ 0x254b, 0xa6b6 },{ 0x2592, 0xa2c6 },{ 0x25a0, 0xa1e1 },{ 0x25a1, 0xa1e0 },
	{ 0x25a3, 0xa2c3 },{ 0x25a4, 0xa2c7 },{ 0x25a5, 0xa2c8 },{ 0x25a6, 0xa2cb },
	{ 0x25a7, 0xa2ca },{ 0x25a8, 0xa2c9 },{ 0x25a9, 0xa2cc },{ 0x25b2, 0xa1e3 },
	{ 0x25b3, 0xa1e2 },{ 0x25b6, 0xa2ba },{ 0x25b7, 0xa2b9 },{ 0x25bc, 0xa1e5 },
	{ 0x25bd, 0xa1e4 },{ 0x25c0, 0xa2b8 },{ 0x25c1, 0xa2b7 },{ 0x25c6, 0xa1df },
	{ 0x25c7, 0xa1de },{ 0x25c8, 0xa2c2 },{ 0x25cb, 0xa1db },{ 0x25ce, 0xa1dd },
	{ 0x25cf, 0xa1dc },{ 0x25d0, 0xa2c4 },{ 0x25d1, 0xa2c5 },{ 0x2605, 0xa1da },
	{ 0x2606, 0xa1d9 },{ 0x260e, 0xa2cf },{ 0x260f, 0xa2ce },{ 0x261c, 0xa2d0 },
	{ 0x261e, 0xa2d1 },{ 0x2640, 0xa1cf },{ 0x2642, 0xa1ce },{ 0x2660, 0xa2bc },
	{ 0x2661, 0xa2bd },{ 0x2663, 0xa2c0 },{ 0x2664, 0xa2bb },{ 0x2665, 0xa2be },
	{ 0x2667, 0xa2bf },{ 0x2668, 0xa2cd },{ 0x2669, 0xa2db },{ 0x266a, 0xa2dc },
	{ 0x266c, 0xa2dd },{ 0x266d, 0xa2da },{ 0x3000, 0xa1a1 },{ 0x3001, 0xa1a2 },
	{ 0x3002, 0xa1a3 },{ 0x3003, 0xa1a8 },{ 0x3008, 0xa1b4 },{ 0x3009, 0xa1b5 },
	{ 0x300a, 0xa1b6 },{ 0x300b, 0xa1b7 },{ 0x300c, 0xa1b8 },{ 0x300d, 0xa1b9 },
	{ 0x300e, 0xa1ba },{ 0x300f, 0xa1bb },{ 0x3010, 0xa1bc },{ 0x3011, 0xa1bd },
	{ 0x3013, 0xa1eb },{ 0x3014, 0xa1b2 },{ 0x3015, 0xa1b3 },{ 0x3041, 0xaaa1 },
	{ 0x3042, 0xaaa2 },{ 0x3043, 0xaaa3 },{ 0x3044, 0xaaa4 },{ 0x3045, 0xaaa5 },
	{ 0x3046, 0xaaa6 },{ 0x3047, 0xaaa7 },{ 0x3048, 0xaaa8 },{ 0x3049, 0xaaa9 },
	{ 0x304a, 0xaaaa },{ 0x304b, 0xaaab },{ 0x304c, 0xaaac },{ 0x304d, 0xaaad },
	{ 0x304e, 0xaaae },{ 0x304f, 0xaaaf },{ 0x3050, 0xaab0 },{ 0x3051, 0xaab1 },
	{ 0x3052, 0xaab2 },{ 0x3053, 0xaab3 },{ 0x3054, 0xaab4 },{ 0x3055, 0xaab5 },
	{ 0x3056, 0xaab6 },{ 0x3057, 0xaab7 },{ 0x3058, 0xaab8 },{ 0x3059, 0xaab9 },
	{ 0x305a, 0xaaba },{ 0x305b, 0xaabb },{ 0x305c, 0xaabc },{ 0x305d, 0xaabd },
	{ 0x305e, 0xaabe },{ 0x305f, 0xaabf },{ 0x3060, 0xaac0 },{ 0x3061, 0xaac1 },
	{ 0x3062, 0xaac2 },{ 0x3063, 0xaac3 },{ 0x3064, 0xaac4 },{ 0x3065, 0xaac5 },
	{ 0x3066, 0xaac6 },{ 0x3067, 0xaac7 },{ 0x3068, 0xaac8 },{ 0x3069, 0xaac9 },
	{ 0x306a, 0xaaca },{ 0x306b, 0xaacb },{ 0x306c, 0xaacc },{ 0x306d, 0xaacd },
	{ 0x306e, 0xaace },{ 0x306f, 0xaacf },{ 0x3070, 0xaad0 },{ 0x3071, 0xaad1 },
	{ 0x3072, 0xaad2 },{ 0x3073, 0xaad3 },{ 0x3074, 0xaad4 },{ 0x3075, 0xaad5 },
	{ 0x3076, 0xaad6 },{ 0x3077, 0xaad7 },{ 0x3078, 0xaad8 },{ 0x3079, 0xaad9 },
	{ 0x307a, 0xaada },{ 0x307b, 0xaadb },{ 0x307c, 0xaadc },{ 0x307d, 0xaadd },
	{ 0x307e, 0xaade },{ 0x307f, 0xaadf },{ 0x3080, 0xaae0 },{ 0x3081, 0xaae1 },
	{ 0x3082, 0xaae2 },{ 0x3083, 0xaae3 },{ 0x3084, 0xaae4 },{ 0x3085, 0xaae5 },
	{ 0x3086, 0xaae6 },{ 0x3087, 0xaae7 },{ 0x3088, 0xaae8 },{ 0x3089, 0xaae9 },
	{ 0x308a, 0xaaea },{ 0x308b, 0xaaeb },{ 0x308c, 0xaaec },{ 0x308d, 0xaaed },
	{ 0x308e, 0xaaee },{ 0x308f, 0xaaef },{ 0x3090, 0xaaf0 },{ 0x3091, 0xaaf1 },
	{ 0x3092, 0xaaf2 },{ 0x3093, 0xaaf3 },{ 0x30a1, 0xaba1 },{ 0x30a2, 0xaba2 },
	{ 0x30a3, 0xaba3 },{ 0x30a4, 0xaba4 },{ 0x30a5, 0xaba5 },{ 0x30a6, 0xaba6 },
	{ 0x30a7, 0xaba7 },{ 0x30a8, 0xaba8 },{ 0x30a9, 0xaba9 },{ 0x30aa, 0xabaa },
	{ 0x30ab, 0xabab },{ 0x30ac, 0xabac },{ 0x30ad, 0xabad },{ 0x30ae, 0xabae },
	{ 0x30af, 0xabaf },{ 0x30b0, 0xabb0 },{ 0x30b1, 0xabb1 },{ 0x30b2, 0xabb2 },
	{ 0x30b3, 0xabb3 },{ 0x30b4, 0xabb4 },{ 0x30b5, 0xabb5 },{ 0x30b6, 0xabb6 },
	{ 0x30b7, 0xabb7 },{ 0x30b8, 0xabb8 },{ 0x30b9, 0xabb9 },{ 0x30ba, 0xabba },
	{ 0x30bb, 0xabbb },{ 0x30bc, 0xabbc },{ 0x30bd, 0xabbd },{ 0x30be, 0xabbe },
	{ 0x30bf, 0xabbf },{ 0x30c0, 0xabc0 },{ 0x30c1, 0xabc1 },{ 0x30c2, 0xabc2 },
	{ 0x30c3, 0xabc3 },{ 0x30c4, 0xabc4 },{ 0x30c5, 0xabc5 },{ 0x30c6, 0xabc6 },
	{ 0x30c7, 0xabc7 },{ 0x30c8, 0xabc8 },{ 0x30c9, 0xabc9 },{ 0x30ca, 0xabca },
	{ 0x30cb, 0xabcb },{ 0x30cc, 0xabcc },{ 0x30cd, 0xabcd },{ 0x30ce, 0xabce },
	{ 0x30cf, 0xabcf },{ 0x30d0, 0xabd0 },{ 0x30d1, 0xabd1 },{ 0x30d2, 0xabd2 },
	{ 0x30d3, 0xabd3 },{ 0x30d4, 0xabd4 },{ 0x30d5, 0xabd5 },{ 0x30d6, 0xabd6 },
	{ 0x30d7, 0xabd7 },{ 0x30d8, 0xabd8 },{ 0x30d9, 0xabd9 },{ 0x30da, 0xabda },
	{ 0x30db, 0xabdb },{ 0x30dc, 0xabdc },{ 0x30dd, 0xabdd },{ 0x30de, 0xabde },
	{ 0x30df, 0xabdf },{ 0x30e0, 0xabe0 },{ 0x30e1, 0xabe1 },{ 0x30e2, 0xabe2 },
	{ 0x30e3, 0xabe3 },{ 0x30e4, 0xabe4 },{ 0x30e5, 0xabe5 },{ 0x30e6, 0xabe6 },
	{ 0x30e7, 0xabe7 },{ 0x30e8, 0xabe8 },{ 0x30e9, 0xabe9 },{ 0x30ea, 0xabea },
	{ 0x30eb, 0xabeb },{ 0x30ec, 0xabec },{ 0x30ed, 0xabed },{ 0x30ee, 0xabee },
	{ 0x30ef, 0xabef },{ 0x30f0, 0xabf0 },{ 0x30f1, 0xabf1 },{ 0x30f2, 0xabf2 },
	{ 0x30f3, 0xabf3 },{ 0x30f4, 0xabf4 },{ 0x30f5, 0xabf5 },{ 0x30f6, 0xabf6 },
	{ 0x3131, 0xa4a1 },{ 0x3132, 0xa4a2 },{ 0x3133, 0xa4a3 },{ 0x3134, 0xa4a4 },
	{ 0x3135, 0xa4a5 },{ 0x3136, 0xa4a6 },{ 0x3137, 0xa4a7 },{ 0x3138, 0xa4a8 },
	{ 0x3139, 0xa4a9 },{ 0x313a, 0xa4aa },{ 0x313b, 0xa4ab },{ 0x313c, 0xa4ac },
	{ 0x313d, 0xa4ad },{ 0x313e, 0xa4ae },{ 0x313f, 0xa4af },{ 0x3140, 0xa4b0 },
	{ 0x3141, 0xa4b1 },{ 0x3142, 0xa4b2 },{ 0x3143, 0xa4b3 },{ 0x3144, 0xa4b4 },
	{ 0x3145, 0xa4b5 },{ 0x3146, 0xa4b6 },{ 0x3147, 0xa4b7 },{ 0x3148, 0xa4b8 },
	{ 0x3149, 0xa4b9 },{ 0x314a, 0xa4ba },{ 0x314b, 0xa4bb },{ 0x314c, 0xa4bc },
	{ 0x314d, 0xa4bd },{ 0x314e, 0xa4be },{ 0x314f, 0xa4bf },{ 0x3150, 0xa4c0 },
	{ 0x3151, 0xa4c1 },{ 0x3152, 0xa4c2 },{ 0x3153, 0xa4c3 },{ 0x3154, 0xa4c4 },
	{ 0x3155, 0xa4c5 },{ 0x3156, 0xa4c6 },{ 0x3157, 0xa4c7 },{ 0x3158, 0xa4c8 },
	{ 0x3159, 0xa4c9 },{ 0x315a, 0xa4ca },{ 0x315b, 0xa4cb },{ 0x315c, 0xa4cc },
	{ 0x315d, 0xa4cd },{ 0x315e, 0xa4ce },{ 0x315f, 0xa4cf },{ 0x3160, 0xa4d0 },
	{ 0x3161, 0xa4d1 },{ 0x3162, 0xa4d2 },{ 0x3163, 0xa4d3 },{ 0x3164, 0xa4d4 },
	{ 0x3165, 0xa4d5 },{ 0x3166, 0xa4d6 },{ 0x3167, 0xa4d7 },{ 0x3168, 0xa4d8 },
	{ 0x3169, 0xa4d9 },{ 0x316a, 0xa4da },{ 0x316b, 0xa4db },{ 0x316c, 0xa4dc },
	{ 0x316d, 0xa4dd },{ 0x316e, 0xa4de },{ 0x316f, 0xa4df },{ 0x3170, 0xa4e0 },
	{ 0x3171, 0xa4e1 },{ 0x3172, 0xa4e2 },{ 0x3173, 0xa4e3 },{ 0x3174, 0xa4e4 },
	{ 0x3175, 0xa4e5 },{ 0x3176, 0xa4e6 },{ 0x3177, 0xa4e7 },{ 0x3178, 0xa4e8 },
	{ 0x3179, 0xa4e9 },{ 0x317a, 0xa4ea },{ 0x317b, 0xa4eb },{ 0x317c, 0xa4ec },
	{ 0x317d, 0xa4ed },{ 0x317e, 0xa4ee },{ 0x317f, 0xa4ef },{ 0x3180, 0xa4f0 },
	{ 0x3181, 0xa4f1 },{ 0x3182, 0xa4f2 },{ 0x3183, 0xa4f3 },{ 0x3184, 0xa4f4 },
	{ 0x3185, 0xa4f5 },{ 0x3186, 0xa4f6 },{ 0x3187, 0xa4f7 },{ 0x3188, 0xa4f8 },
	{ 0x3189, 0xa4f9 },{ 0x318a, 0xa4fa },{ 0x318b, 0xa4fb },{ 0x318c, 0xa4fc },
	{ 0x318d, 0xa4fd },{ 0x318e, 0xa4fe },{ 0x3200, 0xa9b1 },{ 0x3201, 0xa9b2 },
	{ 0x3202, 0xa9b3 },{ 0x3203, 0xa9b4 },{ 0x3204, 0xa9b5 },{ 0x3205, 0xa9b6 },
	{ 0x3206, 0xa9b7 },{ 0x3207, 0xa9b8 },{ 0x3208, 0xa9b9 },{ 0x3209, 0xa9ba },
	{ 0x320a, 0xa9bb },{ 0x320b, 0xa9bc },{ 0x320c, 0xa9bd },{ 0x320d, 0xa9be },
	{ 0x320e, 0xa9bf },{ 0x320f, 0xa9c0 },{ 0x3210, 0xa9c1 },{ 0x3211, 0xa9c2 },
	{ 0x3212, 0xa9c3 },{ 0x3213, 0xa9c4 },{ 0x3214, 0xa9c5 },{ 0x3215, 0xa9c6 },
	{ 0x3216, 0xa9c7 },{ 0x3217, 0xa9c8 },{ 0x3218, 0xa9c9 },{ 0x3219, 0xa9ca },
	{ 0x321a, 0xa9cb },{ 0x321b, 0xa9cc },{ 0x321c, 0xa2df },{ 0x3260, 0xa8b1 },
	{ 0x3261, 0xa8b2 },{ 0x3262, 0xa8b3 },{ 0x3263, 0xa8b4 },{ 0x3264, 0xa8b5 },
	{ 0x3265, 0xa8b6 },{ 0x3266, 0xa8b7 },{ 0x3267, 0xa8b8 },{ 0x3268, 0xa8b9 },
	{ 0x3269, 0xa8ba },{ 0x326a, 0xa8bb },{ 0x326b, 0xa8bc },{ 0x326c, 0xa8bd },
	{ 0x326d, 0xa8be },{ 0x326e, 0xa8bf },{ 0x326f, 0xa8c0 },{ 0x3270, 0xa8c1 },
	{ 0x3271, 0xa8c2 },{ 0x3272, 0xa8c3 },{ 0x3273, 0xa8c4 },{ 0x3274, 0xa8c5 },
	{ 0x3275, 0xa8c6 },{ 0x3276, 0xa8c7 },{ 0x3277, 0xa8c8 },{ 0x3278, 0xa8c9 },
	{ 0x3279, 0xa8ca },{ 0x327a, 0xa8cb },{ 0x327b, 0xa8cc },{ 0x327f, 0xa2de },
	{ 0x3380, 0xa7c9 },{ 0x3381, 0xa7ca },{ 0x3382, 0xa7cb },{ 0x3383, 0xa7cc },
	{ 0x3384, 0xa7cd },{ 0x3388, 0xa7ba },{ 0x3389, 0xa7bb },{ 0x338a, 0xa7dc },
	{ 0x338b, 0xa7dd },{ 0x338c, 0xa7de },{ 0x338d, 0xa7b6 },{ 0x338e, 0xa7b7 },
	{ 0x338f, 0xa7b8 },{ 0x3390, 0xa7d4 },{ 0x3391, 0xa7d5 },{ 0x3392, 0xa7d6 },
	{ 0x3393, 0xa7d7 },{ 0x3394, 0xa7d8 },{ 0x3395, 0xa7a1 },{ 0x3396, 0xa7a2 },
	{ 0x3397, 0xa7a3 },{ 0x3398, 0xa7a5 },{ 0x3399, 0xa7ab },{ 0x339a, 0xa7ac },
	{ 0x339b, 0xa7ad },{ 0x339c, 0xa7ae },{ 0x339d, 0xa7af },{ 0x339e, 0xa7b0 },
	{ 0x339f, 0xa7b1 },{ 0x33a0, 0xa7b2 },{ 0x33a1, 0xa7b3 },{ 0x33a2, 0xa7b4 },
	{ 0x33a3, 0xa7a7 },{ 0x33a4, 0xa7a8 },{ 0x33a5, 0xa7a9 },{ 0x33a6, 0xa7aa },
	{ 0x33a7, 0xa7bd },{ 0x33a8, 0xa7be },{ 0x33a9, 0xa7e5 },{ 0x33aa, 0xa7e6 },
	{ 0x33ab, 0xa7e7 },{ 0x33ac, 0xa7e8 },{ 0x33ad, 0xa7e1 },{ 0x33ae, 0xa7e2 },
	{ 0x33af, 0xa7e3 },{ 0x33b0, 0xa7bf },{ 0x33b1, 0xa7c0 },{ 0x33b2, 0xa7c1 },
	{ 0x33b3, 0xa7c2 },{ 0x33b4, 0xa7c3 },{ 0x33b5, 0xa7c4 },{ 0x33b6, 0xa7c5 },
	{ 0x33b7, 0xa7c6 },{ 0x33b8, 0xa7c7 },{ 0x33b9, 0xa7c8 },{ 0x33ba, 0xa7ce },
	{ 0x33bb, 0xa7cf },{ 0x33bc, 0xa7d0 },{ 0x33bd, 0xa7d1 },{ 0x33be, 0xa7d2 },
	{ 0x33bf, 0xa7d3 },{ 0x33c0, 0xa7da },{ 0x33c1, 0xa7db },{ 0x33c2, 0xa2e3 },
	{ 0x33c3, 0xa7ec },{ 0x33c4, 0xa7a6 },{ 0x33c5, 0xa7e0 },{ 0x33c6, 0xa7ef },
	{ 0x33c7, 0xa2e1 },{ 0x33c8, 0xa7bc },{ 0x33c9, 0xa7ed },{ 0x33ca, 0xa7b5 },
	{ 0x33cf, 0xa7b9 },{ 0x33d0, 0xa7ea },{ 0x33d3, 0xa7eb },{ 0x33d6, 0xa7df },
	{ 0x33d8, 0xa2e4 },{ 0x33db, 0xa7e4 },{ 0x33dc, 0xa7ee },{ 0x33dd, 0xa7e9 },
	{ 0xff01, 0xa3a1 },{ 0xff02, 0xa3a2 },{ 0xff03, 0xa3a3 },{ 0xff04, 0xa3a4 },
	{ 0xff05, 0xa3a5 },{ 0xff06, 0xa3a6 },{ 0xff07, 0xa3a7 },{ 0xff08, 0xa3a8 },
	{ 0xff09, 0xa3a9 },{ 0xff0a, 0xa3aa },{ 0xff0b, 0xa3ab },{ 0xff0c, 0xa3ac },
	{ 0xff0d, 0xa3ad },{ 0xff0e, 0xa3ae },{ 0xff0f, 0xa3af },{ 0xff10, 0xa3b0 },
	{ 0xff11, 0xa3b1 },{ 0xff12, 0xa3b2 },{ 0xff13, 0xa3b3 },{ 0xff14, 0xa3b4 },
	{ 0xff15, 0xa3b5 },{ 0xff16, 0xa3b6 },{ 0xff17, 0xa3b7 },{ 0xff18, 0xa3b8 },
	{ 0xff19, 0xa3b9 },{ 0xff1a, 0xa3ba },{ 0xff1b, 0xa3bb },{ 0xff1c, 0xa3bc },
	{ 0xff1d, 0xa3bd },{ 0xff1e, 0xa3be },{ 0xff1f, 0xa3bf },{ 0xff20, 0xa3c0 },
	{ 0xff21, 0xa3c1 },{ 0xff22, 0xa3c2 },{ 0xff23, 0xa3c3 },{ 0xff24, 0xa3c4 },
	{ 0xff25, 0xa3c5 },{ 0xff26, 0xa3c6 },{ 0xff27, 0xa3c7 },{ 0xff28, 0xa3c8 },
	{ 0xff29, 0xa3c9 },{ 0xff2a, 0xa3ca },{ 0xff2b, 0xa3cb },{ 0xff2c, 0xa3cc },
	{ 0xff2d, 0xa3cd },{ 0xff2e, 0xa3ce },{ 0xff2f, 0xa3cf },{ 0xff30, 0xa3d0 },
	{ 0xff31, 0xa3d1 },{ 0xff32, 0xa3d2 },{ 0xff33, 0xa3d3 },{ 0xff34, 0xa3d4 },
	{ 0xff35, 0xa3d5 },{ 0xff36, 0xa3d6 },{ 0xff37, 0xa3d7 },{ 0xff38, 0xa3d8 },
	{ 0xff39, 0xa3d9 },{ 0xff3a, 0xa3da },{ 0xff3b, 0xa3db },{ 0xff3c, 0xa1ac },
	{ 0xff3d, 0xa3dd },{ 0xff3e, 0xa3de },{ 0xff3f, 0xa3df },{ 0xff40, 0xa3e0 },
	{ 0xff41, 0xa3e1 },{ 0xff42, 0xa3e2 },{ 0xff43, 0xa3e3 },{ 0xff44, 0xa3e4 },
	{ 0xff45, 0xa3e5 },{ 0xff46, 0xa3e6 },{ 0xff47, 0xa3e7 },{ 0xff48, 0xa3e8 },
	{ 0xff49, 0xa3e9 },{ 0xff4a, 0xa3ea },{ 0xff4b, 0xa3eb },{ 0xff4c, 0xa3ec },
	{ 0xff4d, 0xa3ed },{ 0xff4e, 0xa3ee },{ 0xff4f, 0xa3ef },{ 0xff50, 0xa3f0 },
	{ 0xff51, 0xa3f1 },{ 0xff52, 0xa3f2 },{ 0xff53, 0xa3f3 },{ 0xff54, 0xa3f4 },
	{ 0xff55, 0xa3f5 },{ 0xff56, 0xa3f6 },{ 0xff57, 0xa3f7 },{ 0xff58, 0xa3f8 },
	{ 0xff59, 0xa3f9 },{ 0xff5a, 0xa3fa },{ 0xff5b, 0xa3fb },{ 0xff5c, 0xa3fc },
	{ 0xff5d, 0xa3fd },{ 0xff5e, 0xa2a6 },{ 0xffe0, 0xa1cb },{ 0xffe1, 0xa1cc },
	{ 0xffe2, 0xa1fe },{ 0xffe3, 0xa3fe },{ 0xffe5, 0xa1cd },{ 0xffe6, 0xa3dc },
};

unicod const unicode2350[] = {
	0xac00, 0xac01, 0xac04, 0xac07, 0xac08, 0xac09, 0xac0a, 0xac10, 0xac11, 0xac12, 
	0xac13, 0xac14, 0xac15, 0xac16, 0xac17, 0xac19, 0xac1a, 0xac1b, 0xac1c, 0xac1d, 
	0xac20, 0xac24, 0xac2c, 0xac2d, 0xac2f, 0xac30, 0xac31, 0xac38, 0xac39, 0xac3c, 
	0xac40, 0xac4b, 0xac4d, 0xac54, 0xac58, 0xac5c, 0xac70, 0xac71, 0xac74, 0xac77, 
	0xac78, 0xac7a, 0xac80, 0xac81, 0xac83, 0xac84, 0xac85, 0xac86, 0xac89, 0xac8a, 
	0xac8b, 0xac8c, 0xac90, 0xac94, 0xac9c, 0xac9d, 0xac9f, 0xaca0, 0xaca1, 0xaca8, 
	0xaca9, 0xacaa, 0xacac, 0xacaf, 0xacb0, 0xacb8, 0xacb9, 0xacbb, 0xacbc, 0xacbd, 
	0xacc1, 0xacc4, 0xacc8, 0xaccc, 0xacd5, 0xacd7, 0xace0, 0xace1, 0xace4, 0xace7, 
	0xace8, 0xacea, 0xacec, 0xacef, 0xacf0, 0xacf1, 0xacf3, 0xacf5, 0xacf6, 0xacfc, 
	0xacfd, 0xad00, 0xad04, 0xad06, 0xad0c, 0xad0d, 0xad0f, 0xad11, 0xad18, 0xad1c, 
	0xad20, 0xad29, 0xad2c, 0xad2d, 0xad34, 0xad35, 0xad38, 0xad3c, 0xad44, 0xad45, 
	0xad47, 0xad49, 0xad50, 0xad54, 0xad58, 0xad61, 0xad63, 0xad6c, 0xad6d, 0xad70, 
	0xad73, 0xad74, 0xad75, 0xad76, 0xad7b, 0xad7c, 0xad7d, 0xad7f, 0xad81, 0xad82, 
	0xad88, 0xad89, 0xad8c, 0xad90, 0xad9c, 0xad9d, 0xada4, 0xadb7, 0xadc0, 0xadc1, 
	0xadc4, 0xadc8, 0xadd0, 0xadd1, 0xadd3, 0xaddc, 0xade0, 0xade4, 0xadf8, 0xadf9, 
	0xadfc, 0xadff, 0xae00, 0xae01, 0xae08, 0xae09, 0xae0b, 0xae0d, 0xae14, 0xae30, 
	0xae31, 0xae34, 0xae37, 0xae38, 0xae3a, 0xae40, 0xae41, 0xae43, 0xae45, 0xae46, 
	0xae4a, 0xae4c, 0xae4d, 0xae4e, 0xae50, 0xae54, 0xae56, 0xae5c, 0xae5d, 0xae5f, 
	0xae60, 0xae61, 0xae65, 0xae68, 0xae69, 0xae6c, 0xae70, 0xae78, 0xae79, 0xae7b, 
	0xae7c, 0xae7d, 0xae84, 0xae85, 0xae8c, 0xaebc, 0xaebd, 0xaebe, 0xaec0, 0xaec4, 
	0xaecc, 0xaecd, 0xaecf, 0xaed0, 0xaed1, 0xaed8, 0xaed9, 0xaedc, 0xaee8, 0xaeeb, 
	0xaeed, 0xaef4, 0xaef8, 0xaefc, 0xaf07, 0xaf08, 0xaf0d, 0xaf10, 0xaf2c, 0xaf2d, 
	0xaf30, 0xaf32, 0xaf34, 0xaf3c, 0xaf3d, 0xaf3f, 0xaf41, 0xaf42, 0xaf43, 0xaf48, 
	0xaf49, 0xaf50, 0xaf5c, 0xaf5d, 0xaf64, 0xaf65, 0xaf79, 0xaf80, 0xaf84, 0xaf88, 
	0xaf90, 0xaf91, 0xaf95, 0xaf9c, 0xafb8, 0xafb9, 0xafbc, 0xafc0, 0xafc7, 0xafc8, 
	0xafc9, 0xafcb, 0xafcd, 0xafce, 0xafd4, 0xafdc, 0xafe8, 0xafe9, 0xaff0, 0xaff1, 
	0xaff4, 0xaff8, 0xb000, 0xb001, 0xb004, 0xb00c, 0xb010, 0xb014, 0xb01c, 0xb01d, 
	0xb028, 0xb044, 0xb045, 0xb048, 0xb04a, 0xb04c, 0xb04e, 0xb053, 0xb054, 0xb055, 
	0xb057, 0xb059, 0xb05d, 0xb07c, 0xb07d, 0xb080, 0xb084, 0xb08c, 0xb08d, 0xb08f, 
	0xb091, 0xb098, 0xb099, 0xb09a, 0xb09c, 0xb09f, 0xb0a0, 0xb0a1, 0xb0a2, 0xb0a8, 
	0xb0a9, 0xb0ab, 0xb0ac, 0xb0ad, 0xb0ae, 0xb0af, 0xb0b1, 0xb0b3, 0xb0b4, 0xb0b5, 
	0xb0b8, 0xb0bc, 0xb0c4, 0xb0c5, 0xb0c7, 0xb0c8, 0xb0c9, 0xb0d0, 0xb0d1, 0xb0d4, 
	0xb0d8, 0xb0e0, 0xb0e5, 0xb108, 0xb109, 0xb10b, 0xb10c, 0xb110, 0xb112, 0xb113, 
	0xb118, 0xb119, 0xb11b, 0xb11c, 0xb11d, 0xb123, 0xb124, 0xb125, 0xb128, 0xb12c, 
	0xb134, 0xb135, 0xb137, 0xb138, 0xb139, 0xb140, 0xb141, 0xb144, 0xb148, 0xb150, 
	0xb151, 0xb154, 0xb155, 0xb158, 0xb15c, 0xb160, 0xb178, 0xb179, 0xb17c, 0xb180, 
	0xb182, 0xb188, 0xb189, 0xb18b, 0xb18d, 0xb192, 0xb193, 0xb194, 0xb198, 0xb19c, 
	0xb1a8, 0xb1cc, 0xb1d0, 0xb1d4, 0xb1dc, 0xb1dd, 0xb1df, 0xb1e8, 0xb1e9, 0xb1ec, 
	0xb1f0, 0xb1f9, 0xb1fb, 0xb1fd, 0xb204, 0xb205, 0xb208, 0xb20b, 0xb20c, 0xb214, 
	0xb215, 0xb217, 0xb219, 0xb220, 0xb234, 0xb23c, 0xb258, 0xb25c, 0xb260, 0xb268, 
	0xb269, 0xb274, 0xb275, 0xb27c, 0xb284, 0xb285, 0xb289, 0xb290, 0xb291, 0xb294, 
	0xb298, 0xb299, 0xb29a, 0xb2a0, 0xb2a1, 0xb2a3, 0xb2a5, 0xb2a6, 0xb2aa, 0xb2ac, 
	0xb2b0, 0xb2b4, 0xb2c8, 0xb2c9, 0xb2cc, 0xb2d0, 0xb2d2, 0xb2d8, 0xb2d9, 0xb2db, 
	0xb2dd, 0xb2e2, 0xb2e4, 0xb2e5, 0xb2e6, 0xb2e8, 0xb2eb, 0xb2ec, 0xb2ed, 0xb2ee, 
	0xb2ef, 0xb2f3, 0xb2f4, 0xb2f5, 0xb2f7, 0xb2f8, 0xb2f9, 0xb2fa, 0xb2fb, 0xb2ff, 
	0xb300, 0xb301, 0xb304, 0xb308, 0xb310, 0xb311, 0xb313, 0xb314, 0xb315, 0xb31c, 
	0xb354, 0xb355, 0xb356, 0xb358, 0xb35b, 0xb35c, 0xb35e, 0xb35f, 0xb364, 0xb365, 
	0xb367, 0xb369, 0xb36b, 0xb36e, 0xb370, 0xb371, 0xb374, 0xb378, 0xb380, 0xb381, 
	0xb383, 0xb384, 0xb385, 0xb38c, 0xb390, 0xb394, 0xb3a0, 0xb3a1, 0xb3a8, 0xb3ac, 
	0xb3c4, 0xb3c5, 0xb3c8, 0xb3cb, 0xb3cc, 0xb3ce, 0xb3d0, 0xb3d4, 0xb3d5, 0xb3d7, 
	0xb3d9, 0xb3db, 0xb3dd, 0xb3e0, 0xb3e4, 0xb3e8, 0xb3fc, 0xb410, 0xb418, 0xb41c, 
	0xb420, 0xb428, 0xb429, 0xb42b, 0xb434, 0xb450, 0xb451, 0xb454, 0xb458, 0xb460, 
	0xb461, 0xb463, 0xb465, 0xb46c, 0xb480, 0xb488, 0xb49d, 0xb4a4, 0xb4a8, 0xb4ac, 
	0xb4b5, 0xb4b7, 0xb4b9, 0xb4c0, 0xb4c4, 0xb4c8, 0xb4d0, 0xb4d5, 0xb4dc, 0xb4dd, 
	0xb4e0, 0xb4e3, 0xb4e4, 0xb4e6, 0xb4ec, 0xb4ed, 0xb4ef, 0xb4f1, 0xb4f8, 0xb514, 
	0xb515, 0xb518, 0xb51b, 0xb51c, 0xb524, 0xb525, 0xb527, 0xb528, 0xb529, 0xb52a, 
	0xb530, 0xb531, 0xb534, 0xb538, 0xb540, 0xb541, 0xb543, 0xb544, 0xb545, 0xb54b, 
	0xb54c, 0xb54d, 0xb550, 0xb554, 0xb55c, 0xb55d, 0xb55f, 0xb560, 0xb561, 0xb5a0, 
	0xb5a1, 0xb5a4, 0xb5a8, 0xb5aa, 0xb5ab, 0xb5b0, 0xb5b1, 0xb5b3, 0xb5b4, 0xb5b5, 
	0xb5bb, 0xb5bc, 0xb5bd, 0xb5c0, 0xb5c4, 0xb5cc, 0xb5cd, 0xb5cf, 0xb5d0, 0xb5d1, 
	0xb5d8, 0xb5ec, 0xb610, 0xb611, 0xb614, 0xb618, 0xb625, 0xb62c, 0xb634, 0xb648, 
	0xb664, 0xb668, 0xb69c, 0xb69d, 0xb6a0, 0xb6a4, 0xb6ab, 0xb6ac, 0xb6b1, 0xb6d4, 
	0xb6f0, 0xb6f4, 0xb6f8, 0xb700, 0xb701, 0xb705, 0xb728, 0xb729, 0xb72c, 0xb72f, 
	0xb730, 0xb738, 0xb739, 0xb73b, 0xb744, 0xb748, 0xb74c, 0xb754, 0xb755, 0xb760, 
	0xb764, 0xb768, 0xb770, 0xb771, 0xb773, 0xb775, 0xb77c, 0xb77d, 0xb780, 0xb784, 
	0xb78c, 0xb78d, 0xb78f, 0xb790, 0xb791, 0xb792, 0xb796, 0xb797, 0xb798, 0xb799, 
	0xb79c, 0xb7a0, 0xb7a8, 0xb7a9, 0xb7ab, 0xb7ac, 0xb7ad, 0xb7b4, 0xb7b5, 0xb7b8, 
	0xb7c7, 0xb7c9, 0xb7ec, 0xb7ed, 0xb7f0, 0xb7f4, 0xb7fc, 0xb7fd, 0xb7ff, 0xb800, 
	0xb801, 0xb807, 0xb808, 0xb809, 0xb80c, 0xb810, 0xb818, 0xb819, 0xb81b, 0xb81d, 
	0xb824, 0xb825, 0xb828, 0xb82c, 0xb834, 0xb835, 0xb837, 0xb838, 0xb839, 0xb840, 
	0xb844, 0xb851, 0xb853, 0xb85c, 0xb85d, 0xb860, 0xb864, 0xb86c, 0xb86d, 0xb86f, 
	0xb871, 0xb878, 0xb87c, 0xb88d, 0xb8a8, 0xb8b0, 0xb8b4, 0xb8b8, 0xb8c0, 0xb8c1, 
	0xb8c3, 0xb8c5, 0xb8cc, 0xb8d0, 0xb8d4, 0xb8dd, 0xb8df, 0xb8e1, 0xb8e8, 0xb8e9, 
	0xb8ec, 0xb8f0, 0xb8f8, 0xb8f9, 0xb8fb, 0xb8fd, 0xb904, 0xb918, 0xb920, 0xb93c, 
	0xb93d, 0xb940, 0xb944, 0xb94c, 0xb94f, 0xb951, 0xb958, 0xb959, 0xb95c, 0xb960, 
	0xb968, 0xb969, 0xb96b, 0xb96d, 0xb974, 0xb975, 0xb978, 0xb97c, 0xb984, 0xb985, 
	0xb987, 0xb989, 0xb98a, 0xb98d, 0xb98e, 0xb9ac, 0xb9ad, 0xb9b0, 0xb9b4, 0xb9bc, 
	0xb9bd, 0xb9bf, 0xb9c1, 0xb9c8, 0xb9c9, 0xb9cc, 0xb9ce, 0xb9cf, 0xb9d0, 0xb9d1, 
	0xb9d2, 0xb9d8, 0xb9d9, 0xb9db, 0xb9dd, 0xb9de, 0xb9e1, 0xb9e3, 0xb9e4, 0xb9e5, 
	0xb9e8, 0xb9ec, 0xb9f4, 0xb9f5, 0xb9f7, 0xb9f8, 0xb9f9, 0xb9fa, 0xba00, 0xba01, 
	0xba08, 0xba15, 0xba38, 0xba39, 0xba3c, 0xba40, 0xba42, 0xba48, 0xba49, 0xba4b, 
	0xba4d, 0xba4e, 0xba53, 0xba54, 0xba55, 0xba58, 0xba5c, 0xba64, 0xba65, 0xba67, 
	0xba68, 0xba69, 0xba70, 0xba71, 0xba74, 0xba78, 0xba83, 0xba84, 0xba85, 0xba87, 
	0xba8c, 0xbaa8, 0xbaa9, 0xbaab, 0xbaac, 0xbab0, 0xbab2, 0xbab8, 0xbab9, 0xbabb, 
	0xbabd, 0xbac4, 0xbac8, 0xbad8, 0xbad9, 0xbafc, 0xbb00, 0xbb04, 0xbb0d, 0xbb0f, 
	0xbb11, 0xbb18, 0xbb1c, 0xbb20, 0xbb29, 0xbb2b, 0xbb34, 0xbb35, 0xbb36, 0xbb38, 
	0xbb3b, 0xbb3c, 0xbb3d, 0xbb3e, 0xbb44, 0xbb45, 0xbb47, 0xbb49, 0xbb4d, 0xbb4f, 
	0xbb50, 0xbb54, 0xbb58, 0xbb61, 0xbb63, 0xbb6c, 0xbb88, 0xbb8c, 0xbb90, 0xbba4, 
	0xbba8, 0xbbac, 0xbbb4, 0xbbb7, 0xbbc0, 0xbbc4, 0xbbc8, 0xbbd0, 0xbbd3, 0xbbf8, 
	0xbbf9, 0xbbfc, 0xbbff, 0xbc00, 0xbc02, 0xbc08, 0xbc09, 0xbc0b, 0xbc0c, 0xbc0d, 
	0xbc0f, 0xbc11, 0xbc14, 0xbc15, 0xbc16, 0xbc17, 0xbc18, 0xbc1b, 0xbc1c, 0xbc1d, 
	0xbc1e, 0xbc1f, 0xbc24, 0xbc25, 0xbc27, 0xbc29, 0xbc2d, 0xbc30, 0xbc31, 0xbc34, 
	0xbc38, 0xbc40, 0xbc41, 0xbc43, 0xbc44, 0xbc45, 0xbc49, 0xbc4c, 0xbc4d, 0xbc50, 
	0xbc5d, 0xbc84, 0xbc85, 0xbc88, 0xbc8b, 0xbc8c, 0xbc8e, 0xbc94, 0xbc95, 0xbc97, 
	0xbc99, 0xbc9a, 0xbca0, 0xbca1, 0xbca4, 0xbca7, 0xbca8, 0xbcb0, 0xbcb1, 0xbcb3, 
	0xbcb4, 0xbcb5, 0xbcbc, 0xbcbd, 0xbcc0, 0xbcc4, 0xbccd, 0xbccf, 0xbcd0, 0xbcd1, 
	0xbcd5, 0xbcd8, 0xbcdc, 0xbcf4, 0xbcf5, 0xbcf6, 0xbcf8, 0xbcfc, 0xbd04, 0xbd05, 
	0xbd07, 0xbd09, 0xbd10, 0xbd14, 0xbd24, 0xbd2c, 0xbd40, 0xbd48, 0xbd49, 0xbd4c, 
	0xbd50, 0xbd58, 0xbd59, 0xbd64, 0xbd68, 0xbd80, 0xbd81, 0xbd84, 0xbd87, 0xbd88, 
	0xbd89, 0xbd8a, 0xbd90, 0xbd91, 0xbd93, 0xbd95, 0xbd99, 0xbd9a, 0xbd9c, 0xbda4, 
	0xbdb0, 0xbdb8, 0xbdd4, 0xbdd5, 0xbdd8, 0xbddc, 0xbde9, 0xbdf0, 0xbdf4, 0xbdf8, 
	0xbe00, 0xbe03, 0xbe05, 0xbe0c, 0xbe0d, 0xbe10, 0xbe14, 0xbe1c, 0xbe1d, 0xbe1f, 
	0xbe44, 0xbe45, 0xbe48, 0xbe4c, 0xbe4e, 0xbe54, 0xbe55, 0xbe57, 0xbe59, 0xbe5a, 
	0xbe5b, 0xbe60, 0xbe61, 0xbe64, 0xbe68, 0xbe6a, 0xbe70, 0xbe71, 0xbe73, 0xbe74, 
	0xbe75, 0xbe7b, 0xbe7c, 0xbe7d, 0xbe80, 0xbe84, 0xbe8c, 0xbe8d, 0xbe8f, 0xbe90, 
	0xbe91, 0xbe98, 0xbe99, 0xbea8, 0xbed0, 0xbed1, 0xbed4, 0xbed7, 0xbed8, 0xbee0, 
	0xbee3, 0xbee4, 0xbee5, 0xbeec, 0xbf01, 0xbf08, 0xbf09, 0xbf18, 0xbf19, 0xbf1b, 
	0xbf1c, 0xbf1d, 0xbf40, 0xbf41, 0xbf44, 0xbf48, 0xbf50, 0xbf51, 0xbf55, 0xbf94, 
	0xbfb0, 0xbfc5, 0xbfcc, 0xbfcd, 0xbfd0, 0xbfd4, 0xbfdc, 0xbfdf, 0xbfe1, 0xc03c, 
	0xc051, 0xc058, 0xc05c, 0xc060, 0xc068, 0xc069, 0xc090, 0xc091, 0xc094, 0xc098, 
	0xc0a0, 0xc0a1, 0xc0a3, 0xc0a5, 0xc0ac, 0xc0ad, 0xc0af, 0xc0b0, 0xc0b3, 0xc0b4, 
	0xc0b5, 0xc0b6, 0xc0bc, 0xc0bd, 0xc0bf, 0xc0c0, 0xc0c1, 0xc0c5, 0xc0c8, 0xc0c9, 
	0xc0cc, 0xc0d0, 0xc0d8, 0xc0d9, 0xc0db, 0xc0dc, 0xc0dd, 0xc0e4, 0xc0e5, 0xc0e8, 
	0xc0ec, 0xc0f4, 0xc0f5, 0xc0f7, 0xc0f9, 0xc100, 0xc104, 0xc108, 0xc110, 0xc115, 
	0xc11c, 0xc11d, 0xc11e, 0xc11f, 0xc120, 0xc123, 0xc124, 0xc126, 0xc127, 0xc12c, 
	0xc12d, 0xc12f, 0xc130, 0xc131, 0xc136, 0xc138, 0xc139, 0xc13c, 0xc140, 0xc148, 
	0xc149, 0xc14b, 0xc14c, 0xc14d, 0xc154, 0xc155, 0xc158, 0xc15c, 0xc164, 0xc165, 
	0xc167, 0xc168, 0xc169, 0xc170, 0xc174, 0xc178, 0xc185, 0xc18c, 0xc18d, 0xc18e, 
	0xc190, 0xc194, 0xc196, 0xc19c, 0xc19d, 0xc19f, 0xc1a1, 0xc1a5, 0xc1a8, 0xc1a9, 
	0xc1ac, 0xc1b0, 0xc1bd, 0xc1c4, 0xc1c8, 0xc1cc, 0xc1d4, 0xc1d7, 0xc1d8, 0xc1e0, 
	0xc1e4, 0xc1e8, 0xc1f0, 0xc1f1, 0xc1f3, 0xc1fc, 0xc1fd, 0xc200, 0xc204, 0xc20c, 
	0xc20d, 0xc20f, 0xc211, 0xc218, 0xc219, 0xc21c, 0xc21f, 0xc220, 0xc228, 0xc229, 
	0xc22b, 0xc22d, 0xc22f, 0xc231, 0xc232, 0xc234, 0xc248, 0xc250, 0xc251, 0xc254, 
	0xc258, 0xc260, 0xc265, 0xc26c, 0xc26d, 0xc270, 0xc274, 0xc27c, 0xc27d, 0xc27f, 
	0xc281, 0xc288, 0xc289, 0xc290, 0xc298, 0xc29b, 0xc29d, 0xc2a4, 0xc2a5, 0xc2a8, 
	0xc2ac, 0xc2ad, 0xc2b4, 0xc2b5, 0xc2b7, 0xc2b9, 0xc2dc, 0xc2dd, 0xc2e0, 0xc2e3, 
	0xc2e4, 0xc2eb, 0xc2ec, 0xc2ed, 0xc2ef, 0xc2f1, 0xc2f6, 0xc2f8, 0xc2f9, 0xc2fb, 
	0xc2fc, 0xc300, 0xc308, 0xc309, 0xc30c, 0xc30d, 0xc313, 0xc314, 0xc315, 0xc318, 
	0xc31c, 0xc324, 0xc325, 0xc328, 0xc329, 0xc345, 0xc368, 0xc369, 0xc36c, 0xc370, 
	0xc372, 0xc378, 0xc379, 0xc37c, 0xc37d, 0xc384, 0xc388, 0xc38c, 0xc3c0, 0xc3d8, 
	0xc3d9, 0xc3dc, 0xc3df, 0xc3e0, 0xc3e2, 0xc3e8, 0xc3e9, 0xc3ed, 0xc3f4, 0xc3f5, 
	0xc3f8, 0xc408, 0xc410, 0xc424, 0xc42c, 0xc430, 0xc434, 0xc43c, 0xc43d, 0xc448, 
	0xc464, 0xc465, 0xc468, 0xc46c, 0xc474, 0xc475, 0xc479, 0xc480, 0xc494, 0xc49c, 
	0xc4b8, 0xc4bc, 0xc4e9, 0xc4f0, 0xc4f1, 0xc4f4, 0xc4f8, 0xc4fa, 0xc4ff, 0xc500, 
	0xc501, 0xc50c, 0xc510, 0xc514, 0xc51c, 0xc528, 0xc529, 0xc52c, 0xc530, 0xc538, 
	0xc539, 0xc53b, 0xc53d, 0xc544, 0xc545, 0xc548, 0xc549, 0xc54a, 0xc54c, 0xc54d, 
	0xc54e, 0xc553, 0xc554, 0xc555, 0xc557, 0xc558, 0xc559, 0xc55d, 0xc55e, 0xc560, 
	0xc561, 0xc564, 0xc568, 0xc570, 0xc571, 0xc573, 0xc574, 0xc575, 0xc57c, 0xc57d, 
	0xc580, 0xc584, 0xc587, 0xc58c, 0xc58d, 0xc58f, 0xc591, 0xc595, 0xc597, 0xc598, 
	0xc59c, 0xc5a0, 0xc5a9, 0xc5b4, 0xc5b5, 0xc5b8, 0xc5b9, 0xc5bb, 0xc5bc, 0xc5bd, 
	0xc5be, 0xc5c4, 0xc5c5, 0xc5c6, 0xc5c7, 0xc5c8, 0xc5c9, 0xc5ca, 0xc5cc, 0xc5ce, 
	0xc5d0, 0xc5d1, 0xc5d4, 0xc5d8, 0xc5e0, 0xc5e1, 0xc5e3, 0xc5e5, 0xc5ec, 0xc5ed, 
	0xc5ee, 0xc5f0, 0xc5f4, 0xc5f6, 0xc5f7, 0xc5fc, 0xc5fd, 0xc5fe, 0xc5ff, 0xc600, 
	0xc601, 0xc605, 0xc606, 0xc607, 0xc608, 0xc60c, 0xc610, 0xc618, 0xc619, 0xc61b, 
	0xc61c, 0xc624, 0xc625, 0xc628, 0xc62c, 0xc62d, 0xc62e, 0xc630, 0xc633, 0xc634, 
	0xc635, 0xc637, 0xc639, 0xc63b, 0xc640, 0xc641, 0xc644, 0xc648, 0xc650, 0xc651, 
	0xc653, 0xc654, 0xc655, 0xc65c, 0xc65d, 0xc660, 0xc66c, 0xc66f, 0xc671, 0xc678, 
	0xc679, 0xc67c, 0xc680, 0xc688, 0xc689, 0xc68b, 0xc68d, 0xc694, 0xc695, 0xc698, 
	0xc69c, 0xc6a4, 0xc6a5, 0xc6a7, 0xc6a9, 0xc6b0, 0xc6b1, 0xc6b4, 0xc6b8, 0xc6b9, 
	0xc6ba, 0xc6c0, 0xc6c1, 0xc6c3, 0xc6c5, 0xc6cc, 0xc6cd, 0xc6d0, 0xc6d4, 0xc6dc, 
	0xc6dd, 0xc6e0, 0xc6e1, 0xc6e8, 0xc6e9, 0xc6ec, 0xc6f0, 0xc6f8, 0xc6f9, 0xc6fd, 
	0xc704, 0xc705, 0xc708, 0xc70c, 0xc714, 0xc715, 0xc717, 0xc719, 0xc720, 0xc721, 
	0xc724, 0xc728, 0xc730, 0xc731, 0xc733, 0xc735, 0xc737, 0xc73c, 0xc73d, 0xc740, 
	0xc744, 0xc74a, 0xc74c, 0xc74d, 0xc74f, 0xc751, 0xc752, 0xc753, 0xc754, 0xc755, 
	0xc756, 0xc757, 0xc758, 0xc75c, 0xc760, 0xc768, 0xc76b, 0xc774, 0xc775, 0xc778, 
	0xc77c, 0xc77d, 0xc77e, 0xc783, 0xc784, 0xc785, 0xc787, 0xc788, 0xc789, 0xc78a, 
	0xc78e, 0xc790, 0xc791, 0xc794, 0xc796, 0xc797, 0xc798, 0xc79a, 0xc7a0, 0xc7a1, 
	0xc7a3, 0xc7a4, 0xc7a5, 0xc7a6, 0xc7ac, 0xc7ad, 0xc7b0, 0xc7b4, 0xc7bc, 0xc7bd, 
	0xc7bf, 0xc7c0, 0xc7c1, 0xc7c8, 0xc7c9, 0xc7cc, 0xc7ce, 0xc7d0, 0xc7d8, 0xc7dd, 
	0xc7e4, 0xc7e8, 0xc7ec, 0xc800, 0xc801, 0xc804, 0xc808, 0xc80a, 0xc810, 0xc811, 
	0xc813, 0xc815, 0xc816, 0xc81c, 0xc81d, 0xc820, 0xc824, 0xc82c, 0xc82d, 0xc82f, 
	0xc831, 0xc838, 0xc83c, 0xc840, 0xc848, 0xc849, 0xc84c, 0xc84d, 0xc854, 0xc870, 
	0xc871, 0xc874, 0xc878, 0xc87a, 0xc880, 0xc881, 0xc883, 0xc885, 0xc886, 0xc887, 
	0xc88b, 0xc88c, 0xc88d, 0xc894, 0xc89d, 0xc89f, 0xc8a1, 0xc8a8, 0xc8bc, 0xc8bd, 
	0xc8c4, 0xc8c8, 0xc8cc, 0xc8d4, 0xc8d5, 0xc8d7, 0xc8d9, 0xc8e0, 0xc8e1, 0xc8e4, 
	0xc8f5, 0xc8fc, 0xc8fd, 0xc900, 0xc904, 0xc905, 0xc906, 0xc90c, 0xc90d, 0xc90f, 
	0xc911, 0xc918, 0xc92c, 0xc934, 0xc950, 0xc951, 0xc954, 0xc958, 0xc960, 0xc961, 
	0xc963, 0xc96c, 0xc970, 0xc974, 0xc97c, 0xc988, 0xc989, 0xc98c, 0xc990, 0xc998, 
	0xc999, 0xc99b, 0xc99d, 0xc9c0, 0xc9c1, 0xc9c4, 0xc9c7, 0xc9c8, 0xc9ca, 0xc9d0, 
	0xc9d1, 0xc9d3, 0xc9d5, 0xc9d6, 0xc9d9, 0xc9da, 0xc9dc, 0xc9dd, 0xc9e0, 0xc9e2, 
	0xc9e4, 0xc9e7, 0xc9ec, 0xc9ed, 0xc9ef, 0xc9f0, 0xc9f1, 0xc9f8, 0xc9f9, 0xc9fc, 
	0xca00, 0xca08, 0xca09, 0xca0b, 0xca0c, 0xca0d, 0xca14, 0xca18, 0xca29, 0xca4c, 
	0xca4d, 0xca50, 0xca54, 0xca5c, 0xca5d, 0xca5f, 0xca60, 0xca61, 0xca68, 0xca7d, 
	0xca84, 0xca98, 0xcabc, 0xcabd, 0xcac0, 0xcac4, 0xcacc, 0xcacd, 0xcacf, 0xcad1, 
	0xcad3, 0xcad8, 0xcad9, 0xcae0, 0xcaec, 0xcaf4, 0xcb08, 0xcb10, 0xcb14, 0xcb18, 
	0xcb20, 0xcb21, 0xcb41, 0xcb48, 0xcb49, 0xcb4c, 0xcb50, 0xcb58, 0xcb59, 0xcb5d, 
	0xcb64, 0xcb78, 0xcb79, 0xcb9c, 0xcbb8, 0xcbd4, 0xcbe4, 0xcbe7, 0xcbe9, 0xcc0c, 
	0xcc0d, 0xcc10, 0xcc14, 0xcc1c, 0xcc1d, 0xcc21, 0xcc22, 0xcc27, 0xcc28, 0xcc29, 
	0xcc2c, 0xcc2e, 0xcc30, 0xcc38, 0xcc39, 0xcc3b, 0xcc3c, 0xcc3d, 0xcc3e, 0xcc44, 
	0xcc45, 0xcc48, 0xcc4c, 0xcc54, 0xcc55, 0xcc57, 0xcc58, 0xcc59, 0xcc60, 0xcc64, 
	0xcc66, 0xcc68, 0xcc70, 0xcc75, 0xcc98, 0xcc99, 0xcc9c, 0xcca0, 0xcca8, 0xcca9, 
	0xccab, 0xccac, 0xccad, 0xccb4, 0xccb5, 0xccb8, 0xccbc, 0xccc4, 0xccc5, 0xccc7, 
	0xccc9, 0xccd0, 0xccd4, 0xcce4, 0xccec, 0xccf0, 0xcd01, 0xcd08, 0xcd09, 0xcd0c, 
	0xcd10, 0xcd18, 0xcd19, 0xcd1b, 0xcd1d, 0xcd24, 0xcd28, 0xcd2c, 0xcd39, 0xcd5c, 
	0xcd60, 0xcd64, 0xcd6c, 0xcd6d, 0xcd6f, 0xcd71, 0xcd78, 0xcd88, 0xcd94, 0xcd95, 
	0xcd98, 0xcd9c, 0xcda4, 0xcda5, 0xcda7, 0xcda9, 0xcdb0, 0xcdc4, 0xcdcc, 0xcdd0, 
	0xcde8, 0xcdec, 0xcdf0, 0xcdf8, 0xcdf9, 0xcdfb, 0xcdfd, 0xce04, 0xce08, 0xce0c, 
	0xce14, 0xce19, 0xce20, 0xce21, 0xce24, 0xce28, 0xce30, 0xce31, 0xce33, 0xce35, 
	0xce58, 0xce59, 0xce5c, 0xce5f, 0xce60, 0xce61, 0xce68, 0xce69, 0xce6b, 0xce6d, 
	0xce74, 0xce75, 0xce78, 0xce7c, 0xce84, 0xce85, 0xce87, 0xce89, 0xce90, 0xce91, 
	0xce94, 0xce98, 0xcea0, 0xcea1, 0xcea3, 0xcea4, 0xcea5, 0xceac, 0xcead, 0xcec1, 
	0xcee4, 0xcee5, 0xcee8, 0xceeb, 0xceec, 0xcef4, 0xcef5, 0xcef7, 0xcef8, 0xcef9, 
	0xcf00, 0xcf01, 0xcf04, 0xcf08, 0xcf10, 0xcf11, 0xcf13, 0xcf15, 0xcf1c, 0xcf20, 
	0xcf24, 0xcf2c, 0xcf2d, 0xcf2f, 0xcf30, 0xcf31, 0xcf38, 0xcf54, 0xcf55, 0xcf58, 
	0xcf5c, 0xcf64, 0xcf65, 0xcf67, 0xcf69, 0xcf70, 0xcf71, 0xcf74, 0xcf78, 0xcf80, 
	0xcf85, 0xcf8c, 0xcfa1, 0xcfa8, 0xcfb0, 0xcfc4, 0xcfe0, 0xcfe1, 0xcfe4, 0xcfe8, 
	0xcff0, 0xcff1, 0xcff3, 0xcff5, 0xcffc, 0xd000, 0xd004, 0xd011, 0xd018, 0xd02d, 
	0xd034, 0xd035, 0xd038, 0xd03c, 0xd044, 0xd045, 0xd047, 0xd049, 0xd050, 0xd054, 
	0xd058, 0xd060, 0xd06c, 0xd06d, 0xd070, 0xd074, 0xd07c, 0xd07d, 0xd081, 0xd0a4, 
	0xd0a5, 0xd0a8, 0xd0ac, 0xd0b4, 0xd0b5, 0xd0b7, 0xd0b9, 0xd0c0, 0xd0c1, 0xd0c4, 
	0xd0c8, 0xd0c9, 0xd0d0, 0xd0d1, 0xd0d3, 0xd0d4, 0xd0d5, 0xd0dc, 0xd0dd, 0xd0e0, 
	0xd0e4, 0xd0ec, 0xd0ed, 0xd0ef, 0xd0f0, 0xd0f1, 0xd0f8, 0xd10d, 0xd130, 0xd131, 
	0xd134, 0xd138, 0xd13a, 0xd140, 0xd141, 0xd143, 0xd144, 0xd145, 0xd14c, 0xd14d, 
	0xd150, 0xd154, 0xd15c, 0xd15d, 0xd15f, 0xd161, 0xd168, 0xd16c, 0xd17c, 0xd184, 
	0xd188, 0xd1a0, 0xd1a1, 0xd1a4, 0xd1a8, 0xd1b0, 0xd1b1, 0xd1b3, 0xd1b5, 0xd1ba, 
	0xd1bc, 0xd1c0, 0xd1d8, 0xd1f4, 0xd1f8, 0xd207, 0xd209, 0xd210, 0xd22c, 0xd22d, 
	0xd230, 0xd234, 0xd23c, 0xd23d, 0xd23f, 0xd241, 0xd248, 0xd25c, 0xd264, 0xd280, 
	0xd281, 0xd284, 0xd288, 0xd290, 0xd291, 0xd295, 0xd29c, 0xd2a0, 0xd2a4, 0xd2ac, 
	0xd2b1, 0xd2b8, 0xd2b9, 0xd2bc, 0xd2bf, 0xd2c0, 0xd2c2, 0xd2c8, 0xd2c9, 0xd2cb, 
	0xd2d4, 0xd2d8, 0xd2dc, 0xd2e4, 0xd2e5, 0xd2f0, 0xd2f1, 0xd2f4, 0xd2f8, 0xd300, 
	0xd301, 0xd303, 0xd305, 0xd30c, 0xd30d, 0xd30e, 0xd310, 0xd314, 0xd316, 0xd31c, 
	0xd31d, 0xd31f, 0xd320, 0xd321, 0xd325, 0xd328, 0xd329, 0xd32c, 0xd330, 0xd338, 
	0xd339, 0xd33b, 0xd33c, 0xd33d, 0xd344, 0xd345, 0xd37c, 0xd37d, 0xd380, 0xd384, 
	0xd38c, 0xd38d, 0xd38f, 0xd390, 0xd391, 0xd398, 0xd399, 0xd39c, 0xd3a0, 0xd3a8, 
	0xd3a9, 0xd3ab, 0xd3ad, 0xd3b4, 0xd3b8, 0xd3bc, 0xd3c4, 0xd3c5, 0xd3c8, 0xd3c9, 
	0xd3d0, 0xd3d8, 0xd3e1, 0xd3e3, 0xd3ec, 0xd3ed, 0xd3f0, 0xd3f4, 0xd3fc, 0xd3fd, 
	0xd3ff, 0xd401, 0xd408, 0xd41d, 0xd440, 0xd444, 0xd45c, 0xd460, 0xd464, 0xd46d, 
	0xd46f, 0xd478, 0xd479, 0xd47c, 0xd47f, 0xd480, 0xd482, 0xd488, 0xd489, 0xd48b, 
	0xd48d, 0xd494, 0xd4a9, 0xd4cc, 0xd4d0, 0xd4d4, 0xd4dc, 0xd4df, 0xd4e8, 0xd4ec, 
	0xd4f0, 0xd4f8, 0xd4fb, 0xd4fd, 0xd504, 0xd508, 0xd50c, 0xd514, 0xd515, 0xd517, 
	0xd53c, 0xd53d, 0xd540, 0xd544, 0xd54c, 0xd54d, 0xd54f, 0xd551, 0xd558, 0xd559, 
	0xd55c, 0xd560, 0xd565, 0xd568, 0xd569, 0xd56b, 0xd56d, 0xd574, 0xd575, 0xd578, 
	0xd57c, 0xd584, 0xd585, 0xd587, 0xd588, 0xd589, 0xd590, 0xd5a5, 0xd5c8, 0xd5c9, 
	0xd5cc, 0xd5d0, 0xd5d2, 0xd5d8, 0xd5d9, 0xd5db, 0xd5dd, 0xd5e4, 0xd5e5, 0xd5e8, 
	0xd5ec, 0xd5f4, 0xd5f5, 0xd5f7, 0xd5f9, 0xd600, 0xd601, 0xd604, 0xd608, 0xd610, 
	0xd611, 0xd613, 0xd614, 0xd615, 0xd61c, 0xd620, 0xd624, 0xd62d, 0xd638, 0xd639, 
	0xd63c, 0xd640, 0xd645, 0xd648, 0xd649, 0xd64b, 0xd64d, 0xd651, 0xd654, 0xd655, 
	0xd658, 0xd65c, 0xd667, 0xd669, 0xd670, 0xd671, 0xd674, 0xd683, 0xd685, 0xd68c, 
	0xd68d, 0xd690, 0xd694, 0xd69d, 0xd69f, 0xd6a1, 0xd6a8, 0xd6ac, 0xd6b0, 0xd6b9, 
	0xd6bb, 0xd6c4, 0xd6c5, 0xd6c8, 0xd6cc, 0xd6d1, 0xd6d4, 0xd6d7, 0xd6d9, 0xd6e0, 
	0xd6e4, 0xd6e8, 0xd6f0, 0xd6f5, 0xd6fc, 0xd6fd, 0xd700, 0xd704, 0xd711, 0xd718, 
	0xd719, 0xd71c, 0xd720, 0xd728, 0xd729, 0xd72b, 0xd72d, 0xd734, 0xd735, 0xd738, 
	0xd73c, 0xd744, 0xd747, 0xd749, 0xd750, 0xd751, 0xd754, 0xd756, 0xd757, 0xd758, 
	0xd759, 0xd760, 0xd761, 0xd763, 0xd765, 0xd769, 0xd76c, 0xd770, 0xd774, 0xd77c, 
	0xd77d, 0xd781, 0xd788, 0xd789, 0xd78c, 0xd790, 0xd798, 0xd799, 0xd79b, 0xd79d, 
};



unicod ksc16ToUnicode(ushort kch) {
	int first = (kch >> 8);

	if (first < 0xA1 || first > 0xC8) {
		return '?';
	}
	if (first >= 0xAD && first < 0xB0) {
		return '?';
	}

	uint second = (kch & 0xFF) - 0xA1;
	if (second > 0xFE - 0xA1) {
		return '?';
	}

	int idx;
	if (first >= 0xB0) {
		idx = (first-0xB0) * 94 + second;
		return unicode2350[idx];
	}
	else { // symbol
		idx = (first-0xA1) * 94 + second;
		return symbol[idx];
	}
}

unicod ksbytesToUnicode(const ubyte* str) {
	ushort kch = (str[0] << 8) + str[1];
	return ksc16ToUnicode(kch);
}

ushort unicodeToKode(unicod unicode) {
    int low = 0;
    int high = 2350;
    while (low <= high) {
        int mid = (low + high) / 2;
        int cmp = unicode - ((ushort const *)unicode2350)[mid];
        if (cmp == 0) {
            int hch = (mid / 94) + 0xB0;
            int lch = (mid % 94) + 0xA1;
            return (hch << 8) + lch;
        }
        if (cmp > 0) {
            low = mid + 1;
        }
        else {
            high = mid - 1;
        }
    }

	low = 0; 
	high = sizeof(symbolMap) / sizeof(symbolMap[0]);
    while (low <= high) {
        int mid = (low + high) / 2;
        int cmp = unicode - symbolMap[mid][0];
        if (cmp == 0) {
			return symbolMap[mid][1];
        }
        if (cmp > 0) {
            low = mid + 1;
        }
        else {
            high = mid - 1;
        }
    }
    return 0;
}



// Const Array의 사용은 불가능하다.
// Package Unload시 해당 constant를 더 이상 참조할 수 없다.
//#define ConstString(str)	fastiva.createStringW(L##str, sizeof(L##str)/2-1)

Unicod_ap fm::byteToCharArray(const ubyte* str, int len) {
	KASSERT(len >= 0);
	int wlen = fm::getUnicodeLength(str, len);
	Unicod_ap aUnicod = Unicod_A::create$(wlen);
	if (wlen == 0) {
		return aUnicod;
	}
	Unicod_A::Buffer r(aUnicod);
	unicod* pUnicod = r;
	
	for (const ubyte* str_end = str + len; str < str_end;) {
		if (IS_MBCS_BYTES(str)) {
			*pUnicod++ = ksbytesToUnicode(str);
			str += 2;
			/*/
			int len = bytesToUnicode(pUnicod, str);
			pUnicod += len;
			str = getNextMBCS(str);
			//*/
		}
		else {
			*pUnicod++ = *str++;
		}
		KASSERT(pUnicod - r <= aUnicod->length());
	}
	return aUnicod;

}



/**
 * 주어진 유니코드 배열이 바이트배열로 몇 바이트인지를 얻는다.
 *
 * 즉, 유니코드문자열을 한글 문자열로 변환할경우 크기가 줄어들게 되는데
 * 그 크기를 얻는것이다. 
 */
int fm::getMBCSLength(const unicod* str, int len) {
	for (const unicod* str_end = str + len; str < str_end; ) {
		int ch1 = (unicod)*str++;
		if (IS_MBCS_UNICODE(ch1)) {
			len ++; // 2 byte -> 1 unicod.
		}
	}
	return len;
}

/**
 * 주어진 바이트 배열이 유니코드배열로 몇개인지를 얻는다.
 *
 * 즉, 한글문자열을 유니코드문자열로 변환할경우 크기가 변하게 되는데
 * 그 크기를 얻는것이다. 
 */
int fm::getUnicodeLength(const ubyte* str, int len) {
	for (const ubyte* str_end = str + len; str < str_end; str++) {
		if (IS_MBCS_BYTES(str)) {
			str++;
			len --; // 2 byte -> 1 unicod.
		}
	}
	return len;
}



void fm::writeUnicod(java_io_OutputStream_p out, int ch1) {
	ushort ks_code = unicodeToKode(ch1);
	if (ks_code != 0) {
		out->write(ks_code >> 8);
		out->write(ks_code);
	}
	else {
		out->write(ch1);
	}
}

int fm::readUnicod(java_io_InputStream_p in) {
	ubyte hch[2];
	int ch = in->read();
	if (IS_MBCS_LEADING_CHAR(ch)) {
		hch[0] = (ubyte)ch;
		hch[1] = in->read();
		return ksbytesToUnicode(hch);
	}
	return ch;
}

/*#if !defined(FASTIVA_CLDC) || defined(FASTIVA_MIDP)
java_lang_String_p java_lang_String::intern() {
	return fm::internString(this);
}
//#endif*/


#ifdef before_2011_0720
static const jint Latin1Data[] = {
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x5800400F,
            (jint)0x5000400F,
            (jint)0x5800400F,
            (jint)0x6000400F,
            (jint)0x5000400F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x5000400F,
            (jint)0x5000400F,
            (jint)0x5000400F,
            (jint)0x5800400F,
            (jint)0x6000400C,
            (jint)0x68000018,
            (jint)0x68000018,
            (jint)0x28000018,
            (jint)0x2800601A,
            (jint)0x28000018,
            (jint)0x68000018,
            (jint)0x68000018,
            (jint)-0x17FFFFEB,
            (jint)-0x17FFFFEA,
            (jint)0x68000018,
            (jint)0x28000019,
            (jint)0x38000018,
            (jint)0x28000014,
            (jint)0x38000018,
            (jint)0x20000018,
            (jint)0x18003609,
            (jint)0x18003609,
            (jint)0x18003609,
            (jint)0x18003609,
            (jint)0x18003609,
            (jint)0x18003609,
            (jint)0x18003609,
            (jint)0x18003609,
            (jint)0x18003609,
            (jint)0x18003609,
            (jint)0x38000018,
            (jint)0x68000018,
            (jint)-0x17FFFFE7,
            (jint)0x68000019,
            (jint)-0x17FFFFE7,
            (jint)0x68000018,
            (jint)0x68000018,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)0x00827FE1,
            (jint)-0x17FFFFEB,
            (jint)0x68000018,
            (jint)-0x17FFFFEA,
            (jint)0x6800001B,
            (jint)0x68005017,
            (jint)0x6800001B,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)0x00817FE2,
            (jint)-0x17FFFFEB,
            (jint)0x68000019,
            (jint)-0x17FFFFEA,
            (jint)0x68000019,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x5000100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x4800100F,
            (jint)0x3800000C,
            (jint)0x68000018,
            (jint)0x2800601A,
            (jint)0x2800601A,
            (jint)0x2800601A,
            (jint)0x2800601A,
            (jint)0x6800001C,
            (jint)0x6800001C,
            (jint)0x6800001B,
            (jint)0x6800001C,
            (jint)0x00007002,
            (jint)-0x17FFFFE3,
            (jint)0x68000019,
            (jint)0x68000014,
            (jint)0x6800001C,
            (jint)0x6800001B,
            (jint)0x2800001C,
            (jint)0x28000019,
            (jint)0x1800060B,
            (jint)0x1800060B,
            (jint)0x6800001B,
            (jint)0x07FD7002,
            (jint)0x6800001C,
            (jint)0x68000018,
            (jint)0x6800001B,
            (jint)0x1800050B,
            (jint)0x00007002,
            (jint)-0x17FFFFE2,
            (jint)0x6800080B,
            (jint)0x6800080B,
            (jint)0x6800080B,
            (jint)0x68000018,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x68000019,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x00827001,
            (jint)0x07FD7002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x68000019,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x00817002,
            (jint)0x061D7002
 };
/*
		0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800
, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x5800, 0x400F, 0x5000, 0x400F, 0x5800, 0x400F, 0x6000, 0x400F
, 0x5000, 0x400F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800
, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F
, 0x4800, 0x100F, 0x4800, 0x100F, 0x5000, 0x400F, 0x5000, 0x400F, 0x5000, 0x400F, 0x5800, 0x400F, 0x6000
, 0x400C, 0x6800,    030, 0x6800,    030, 0x2800,    030, 0x2800, 0x601A, 0x2800,    030, 0x6800,    030, 0x6800
,    030, 0xE800,    025, 0xE800,    026, 0x6800,    030, 0x2800,    031, 0x3800,    030, 0x2800,    024, 0x3800,    030
, 0x2000,    030, 0x1800, 0x3609, 0x1800, 0x3609, 0x1800, 0x3609, 0x1800, 0x3609, 0x1800, 0x3609, 0x1800
, 0x3609, 0x1800, 0x3609, 0x1800, 0x3609, 0x1800, 0x3609, 0x1800, 0x3609, 0x3800,    030, 0x6800,    030
, 0xE800,    031, 0x6800,    031, 0xE800,    031, 0x6800,    030, 0x6800,    030,    202, 0x7FE1,    202, 0x7FE1,    202
, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1
,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202
, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1,    202, 0x7FE1
,    202, 0x7FE1, 0xE800,    025, 0x6800,    030, 0xE800,    026, 0x6800,    033, 0x6800, 0x5017, 0x6800,    033,    201
, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2
,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201
, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2
,    201, 0x7FE2,    201, 0x7FE2,    201, 0x7FE2, 0xE800,    025, 0x6800,    031, 0xE800,    026, 0x6800,    031, 0x4800
, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x5000, 0x100F
, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800
, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F
, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800
, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F
, 0x3800,    014, 0x6800,    030, 0x2800, 0x601A, 0x2800, 0x601A, 0x2800, 0x601A, 0x2800, 0x601A, 0x6800
,    034, 0x6800,    034, 0x6800,    033, 0x6800,    034,    000, 0x7002, 0xE800,    035, 0x6800,    031, 0x6800,    024
, 0x6800,    034, 0x6800,    033, 0x2800,    034, 0x2800,    031, 0x1800, 0x060B, 0x1800, 0x060B, 0x6800,    033
, 0x07FD, 0x7002, 0x6800,    034, 0x6800,    030, 0x6800,    033, 0x1800, 0x050B,    000, 0x7002, 0xE800,    036
, 0x6800, 0x080B, 0x6800, 0x080B, 0x6800, 0x080B, 0x6800,    030,    202, 0x7001,    202, 0x7001,    202, 0x7001
,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202
, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001
,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001, 0x6800,    031,    202, 0x7001,    202
, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001,    202, 0x7001, 0x07FD, 0x7002,    201, 0x7002
,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201
, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002
,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002, 0x6800
,    031,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002,    201, 0x7002
, 0x061D, 0x7002
};
*/

static const ushort X[] = {
	0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 
	0x0008, 0x0009, 0x000a, 0x000b, 0x000c, 0x000d, 0x000e, 0x000f, 
	0x0008, 0x0010, 0x0011, 0x0012, 0x0013, 0x0014, 0x0015, 0x0016, 
	0x0017, 0x0017, 0x0018, 0x0019, 0x001a, 0x001b, 0x001c, 0x001d, 
	0x001e, 0x001f, 0x0020, 0x0008, 0x0021, 0x0008, 0x0022, 0x0023, 
	0x0024, 0x0025, 0x0026, 0x0027, 0x0028, 0x0029, 0x002a, 0x002b, 
	0x002c, 0x002d, 0x002e, 0x002f, 0x0030, 0x0030, 0x0031, 0x0032, 
	0x0033, 0x0034, 0x0035, 0x0024, 0x0030, 0x0036, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0037, 0x0038, 0x0039, 0x003a, 0x003b, 0x003c, 0x003d, 0x003e, 
	0x003f, 0x0040, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 
	0x003b, 0x0047, 0x0048, 0x0049, 0x004a, 0x004b, 0x004c, 0x004d, 
	0x004e, 0x004f, 0x0050, 0x0051, 0x0052, 0x0053, 0x0054, 0x0051, 
	0x0052, 0x0055, 0x0056, 0x0051, 0x0057, 0x0058, 0x0059, 0x005a, 
	0x005b, 0x005c, 0x005d, 0x0024, 0x005e, 0x005f, 0x0060, 0x0024, 
	0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 0x0024, 
	0x0068, 0x0069, 0x006a, 0x0024, 0x0024, 0x006b, 0x006c, 0x006d, 
	0x0068, 0x0068, 0x006e, 0x0068, 0x0068, 0x006f, 0x0068, 0x0070, 
	0x0071, 0x0068, 0x0072, 0x0068, 0x0073, 0x0074, 0x0075, 0x0076, 
	0x0074, 0x0068, 0x0077, 0x0078, 0x0024, 0x0068, 0x0068, 0x0079, 
	0x005b, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x007a, 0x007b, 0x0068, 0x0068, 0x007c, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0068, 0x007d, 0x007e, 0x007f, 
	0x0080, 0x0068, 0x0081, 0x0082, 0x0068, 0x0083, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0008, 0x0008, 0x0008, 0x0008, 0x0084, 0x0008, 0x0008, 0x0085, 
	0x0086, 0x0087, 0x0088, 0x0089, 0x008a, 0x008b, 0x008c, 0x008d, 
	0x008e, 0x008f, 0x0090, 0x0091, 0x0092, 0x0093, 0x0094, 0x0095, 
	0x0096, 0x0097, 0x0098, 0x0099, 0x009a, 0x009b, 0x009c, 0x009d, 
	0x009e, 0x009f, 0x00a0, 0x00a1, 0x00a2, 0x00a3, 0x00a4, 0x00a5, 
	0x00a6, 0x00a7, 0x00a8, 0x00a9, 0x00aa, 0x0024, 0x0024, 0x0024, 
	0x00ab, 0x00ac, 0x00ad, 0x00ae, 0x00af, 0x00b0, 0x00b1, 0x00b2, 
	0x00ab, 0x00ab, 0x00ab, 0x00ab, 0x00b3, 0x00b4, 0x00b5, 0x00b6, 
	0x00b7, 0x00ab, 0x00ab, 0x00b8, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x00b9, 0x00ba, 0x00bb, 0x00bc, 0x00bd, 0x00be, 0x0024, 0x0024, 
	0x00ab, 0x00ab, 0x00ab, 0x00ab, 0x00ab, 0x00ab, 0x00ab, 0x00ab, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x00bf, 0x00ab, 0x00ab, 0x009d, 
	0x00ab, 0x00ab, 0x00ab, 0x00ab, 0x00ab, 0x00ab, 0x00b3, 0x00c0, 
	0x00c1, 0x00c2, 0x005b, 0x0068, 0x00c3, 0x005b, 0x0068, 0x00c4, 
	0x00c5, 0x00c6, 0x0068, 0x0068, 0x00c7, 0x0082, 0x0024, 0x0024, 
	0x00c8, 0x00c9, 0x00ca, 0x00cb, 0x00cc, 0x00cd, 0x00ce, 0x00cf, 
	0x00a8, 0x00a8, 0x00a8, 0x00d0, 0x00a8, 0x00a8, 0x00d1, 0x00cf, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x00d2, 0x0024, 0x0024, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x00d3, 0x0024, 0x0024, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x00d4, 0x00d5, 0x00d6, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x00d7, 0x0024, 0x0024, 
	0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 
	0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 
	0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 
	0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 
	0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 
	0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 
	0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 
	0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 0x00d8, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 0x00d9, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x00da, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x00db, 0x00dc, 0x00dd, 0x0030, 0x0030, 0x00de, 0x00df, 0x0030, 
	0x0030, 0x0030, 0x0030, 0x0030, 0x0030, 0x0030, 0x0030, 0x0030, 
	0x0030, 0x00e0, 0x00e1, 0x0030, 0x00e2, 0x0030, 0x00e3, 0x00e4, 
	0x0024, 0x00e5, 0x00e6, 0x00e7, 0x0030, 0x0030, 0x0030, 0x00e8, 
	0x00e9, 0x00ea, 0x00eb, 0x00ec, 0x00ed, 0x00ee, 0x00ef, 0x00f0, 
};


static const ushort Y[] = {
	0x0000, 0x0000, 0x0000, 0x0000, 0x0002, 0x0004, 0x0006, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0008, 0x0004, 
	0x000a, 0x000c, 0x000e, 0x0010, 0x0012, 0x0014, 0x0016, 0x0018, 
	0x001a, 0x001a, 0x001a, 0x001a, 0x001a, 0x001c, 0x001e, 0x0020, 
	0x0022, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0026, 0x0028, 0x002a, 
	0x002c, 0x002e, 0x002e, 0x002e, 0x002e, 0x002e, 0x002e, 0x002e, 
	0x002e, 0x002e, 0x002e, 0x002e, 0x002e, 0x0030, 0x0032, 0x0034, 
	0x0000, 0x0000, 0x0036, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0038, 0x003a, 0x003a, 0x003c, 0x003e, 0x0040, 0x0042, 0x0044, 
	0x0046, 0x0048, 0x004a, 0x004c, 0x004e, 0x0050, 0x0052, 0x0054, 
	0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 
	0x0056, 0x0056, 0x0056, 0x0058, 0x0056, 0x0056, 0x0056, 0x005a, 
	0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 
	0x005c, 0x005c, 0x005c, 0x005e, 0x005c, 0x005c, 0x005c, 0x0060, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x0064, 0x0062, 0x0062, 0x0062, 0x0066, 0x0068, 0x0068, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x006a, 0x0062, 0x0062, 0x0062, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x006c, 0x0068, 0x0068, 0x006a, 
	0x006e, 0x0062, 0x0062, 0x0070, 0x0072, 0x0074, 0x0076, 0x0078, 
	0x007a, 0x0072, 0x007c, 0x007e, 0x0062, 0x0080, 0x0082, 0x0084, 
	0x0062, 0x0062, 0x0062, 0x0086, 0x0088, 0x0080, 0x0062, 0x0086, 
	0x008a, 0x008c, 0x0068, 0x008e, 0x0062, 0x0090, 0x0062, 0x0092, 
	0x0094, 0x0094, 0x0096, 0x0098, 0x009a, 0x0096, 0x009c, 0x0068, 
	0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x0068, 0x009e, 0x0062, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x00a0, 0x009a, 0x0062, 0x00a2, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x00a4, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x0062, 0x0062, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0080, 0x00a6, 0x00a8, 0x00aa, 0x00ac, 0x00ae, 0x0080, 0x0080, 
	0x00b0, 0x00b2, 0x0080, 0x0080, 0x00b4, 0x0080, 0x0080, 0x00b6, 
	0x0080, 0x00b8, 0x00ba, 0x0080, 0x0080, 0x0080, 0x0080, 0x0080, 
	0x00bc, 0x00be, 0x0080, 0x0080, 0x00bc, 0x00c0, 0x0080, 0x0080, 
	0x0080, 0x00c2, 0x0080, 0x0080, 0x0080, 0x0080, 0x0080, 0x0080, 
	0x0080, 0x0080, 0x0080, 0x0080, 0x0080, 0x0080, 0x0080, 0x00a4, 
	0x00c4, 0x00c4, 0x00c4, 0x00c4, 0x00c6, 0x00c8, 0x00c4, 0x00c4, 
	0x00c4, 0x00ca, 0x00ca, 0x00ca, 0x00ca, 0x00ca, 0x00ca, 0x00ca, 
	0x00c4, 0x00ca, 0x00ca, 0x00ca, 0x00ca, 0x00ca, 0x00ca, 0x00ca, 
	0x00c4, 0x00c4, 0x00c6, 0x00ca, 0x00ca, 0x00ca, 0x00ca, 0x00cc, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 
	0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 
	0x00ce, 0x00ce, 0x00d0, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00d2, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00ce, 0x00d2, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00ca, 0x00a4, 0x00a4, 0x00cc, 0x00a4, 0x00d4, 
	0x00a4, 0x00a4, 0x00ca, 0x00d6, 0x00d8, 0x00da, 0x00dc, 0x00de, 
	0x00e0, 0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 
	0x0056, 0x00e2, 0x0056, 0x0056, 0x0056, 0x0056, 0x00e4, 0x00e6, 
	0x00e8, 0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 
	0x005c, 0x00ea, 0x005c, 0x005c, 0x005c, 0x005c, 0x00ec, 0x00ee, 
	0x00f0, 0x00f2, 0x00f4, 0x00f6, 0x00a4, 0x0062, 0x0062, 0x0062, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x00f8, 0x00fa, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00fc, 0x00fc, 0x00fc, 0x00fc, 0x00fc, 0x00fc, 0x00fc, 0x00fc, 
	0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 
	0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 0x0056, 
	0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 
	0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 0x005c, 
	0x00fe, 0x00fe, 0x00fe, 0x00fe, 0x00fe, 0x00fe, 0x00fe, 0x00fe, 
	0x0062, 0x0100, 0x00ce, 0x00d2, 0x0102, 0x00a4, 0x0062, 0x0062, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x0104, 0x0068, 0x0106, 0x0108, 0x0106, 0x0108, 0x0106, 0x00a4, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x0062, 0x0062, 0x0062, 0x00a4, 0x0062, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x010a, 0x010c, 0x010c, 0x010c, 0x010c, 0x010c, 0x010c, 0x010c, 
	0x010c, 0x010c, 0x010c, 0x010c, 0x010c, 0x010c, 0x010c, 0x010c, 
	0x010c, 0x010c, 0x010c, 0x010e, 0x0110, 0x0112, 0x0112, 0x0112, 
	0x0114, 0x0116, 0x0116, 0x0116, 0x0116, 0x0116, 0x0116, 0x0116, 
	0x0116, 0x0116, 0x0116, 0x0116, 0x0116, 0x0116, 0x0116, 0x0116, 
	0x0116, 0x0116, 0x0116, 0x0118, 0x011a, 0x011c, 0x00a4, 0x00a4, 
	0x011e, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 
	0x00ce, 0x011e, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 
	0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x011e, 0x00ce, 0x0120, 
	0x0120, 0x0122, 0x00d2, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0124, 0x0124, 0x0124, 0x0124, 0x0124, 0x0124, 0x0124, 0x0124, 
	0x0124, 0x0124, 0x0124, 0x0124, 0x0124, 0x0126, 0x00a4, 0x00a4, 
	0x0124, 0x0128, 0x012a, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x012c, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x012e, 0x00a4, 0x012e, 
	0x0130, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0134, 0x00a4, 0x00a4, 
	0x0136, 0x0132, 0x0132, 0x0132, 0x0132, 0x0138, 0x00ce, 0x00ce, 
	0x00ce, 0x00ce, 0x00ce, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x013a, 0x013a, 0x013a, 0x013a, 0x013a, 0x013c, 0x013e, 0x00a4, 
	0x0140, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0142, 0x00ce, 0x00ce, 0x00ce, 0x0144, 0x0146, 
	0x00ce, 0x00ce, 0x0148, 0x014a, 0x014c, 0x00ce, 0x00ce, 0x00a4, 
	0x001a, 0x001a, 0x001a, 0x001a, 0x001a, 0x0132, 0x014e, 0x0150, 
	0x0152, 0x0152, 0x0152, 0x0152, 0x0152, 0x0152, 0x0152, 0x0154, 
	0x0138, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0134, 0x00a4, 
	0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 
	0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00d2, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0132, 0x0132, 0x0132, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 
	0x00d2, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x011e, 0x0156, 0x0158, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x00a4, 0x015a, 0x015c, 
	0x015e, 0x00ce, 0x00ce, 0x00ce, 0x0156, 0x015c, 0x015e, 0x00a4, 
	0x0160, 0x00ce, 0x00d2, 0x00a4, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x00ce, 0x0112, 0x0162, 0x0162, 0x0162, 0x0162, 0x0162, 
	0x0164, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x011e, 0x015c, 0x0158, 0x0094, 0x0094, 0x0094, 0x0166, 0x0158, 
	0x0166, 0x0158, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 0x0094, 0x0094, 0x0094, 
	0x0166, 0x0166, 0x00a4, 0x0094, 0x0094, 0x00a4, 0x00d2, 0x015c, 
	0x015e, 0x00ce, 0x00d2, 0x0168, 0x016a, 0x0168, 0x015e, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x0168, 0x00a4, 0x00a4, 0x0094, 0x0158, 
	0x0094, 0x00ce, 0x00a4, 0x0162, 0x0162, 0x0162, 0x0162, 0x0162, 
	0x0094, 0x003a, 0x016c, 0x016c, 0x016e, 0x0170, 0x00a4, 0x00a4, 
	0x00a4, 0x00d2, 0x0158, 0x0094, 0x0094, 0x0166, 0x00a4, 0x0158, 
	0x0166, 0x0158, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 0x0094, 0x0094, 0x0094, 
	0x0166, 0x0094, 0x0158, 0x0166, 0x0094, 0x00a4, 0x00d2, 0x015c, 
	0x015e, 0x00d2, 0x00a4, 0x011e, 0x00d2, 0x011e, 0x00ce, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x0158, 0x0094, 0x0166, 0x0166, 
	0x00a4, 0x00a4, 0x00a4, 0x0162, 0x0162, 0x0162, 0x0162, 0x0162, 
	0x00ce, 0x0094, 0x0166, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x011e, 0x0156, 0x0158, 0x0094, 0x0094, 0x0094, 0x0158, 0x0158, 
	0x0094, 0x0158, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 0x0094, 0x0094, 0x0094, 
	0x0166, 0x0094, 0x0158, 0x0094, 0x0094, 0x00a4, 0x015a, 0x015c, 
	0x015e, 0x00ce, 0x00ce, 0x011e, 0x0156, 0x0168, 0x015e, 0x00a4, 
	0x0166, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0166, 0x00a4, 0x00a4, 0x0162, 0x0162, 0x0162, 0x0162, 0x0162, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 0x0094, 0x0094, 0x0094, 
	0x0166, 0x0094, 0x00a4, 0x0094, 0x0094, 0x00a4, 0x015a, 0x015e, 
	0x015e, 0x00ce, 0x00a4, 0x0168, 0x016a, 0x0168, 0x015e, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x0156, 0x00a4, 0x00a4, 0x0094, 0x0158, 
	0x0094, 0x00a4, 0x00a4, 0x0162, 0x0162, 0x0162, 0x0162, 0x0162, 
	0x0170, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x0156, 0x0158, 0x0094, 0x0094, 0x0166, 0x00a4, 0x0094, 
	0x0166, 0x0094, 0x0094, 0x00a4, 0x0158, 0x0166, 0x0166, 0x0094, 
	0x00a4, 0x0158, 0x0166, 0x00a4, 0x0094, 0x0166, 0x00a4, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0158, 0x0094, 0x00a4, 0x00a4, 0x015c, 
	0x0156, 0x016a, 0x00a4, 0x015c, 0x016a, 0x015c, 0x015e, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x0168, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x0172, 0x0162, 0x0162, 0x0162, 0x0162, 
	0x0174, 0x0176, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0168, 0x015c, 0x0158, 0x0094, 0x0094, 0x0094, 0x0166, 0x0094, 
	0x0166, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0158, 0x0094, 0x0094, 0x00a4, 0x00a4, 0x00ce, 
	0x0156, 0x015c, 0x016a, 0x00ce, 0x00d2, 0x00ce, 0x00ce, 0x00a4, 
	0x00a4, 0x00a4, 0x011e, 0x00d2, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0094, 0x00a4, 0x00a4, 0x0162, 0x0162, 0x0162, 0x0162, 0x0162, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x015c, 0x0158, 0x0094, 0x0094, 0x0094, 0x0166, 0x0094, 
	0x0166, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0158, 0x0094, 0x0094, 0x00a4, 0x00a4, 0x015e, 
	0x015c, 0x015c, 0x016a, 0x0156, 0x016a, 0x015c, 0x00ce, 0x00a4, 
	0x00a4, 0x00a4, 0x0168, 0x016a, 0x00a4, 0x00a4, 0x00a4, 0x0166, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x00a4, 0x00a4, 0x015c, 
	0x015e, 0x00ce, 0x00a4, 0x015c, 0x016a, 0x015c, 0x015e, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x0168, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x015c, 0x0158, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0166, 0x00a4, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0158, 0x0094, 0x0094, 0x0094, 0x0094, 0x0158, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0166, 0x00a4, 0x00d2, 0x00a4, 0x0168, 
	0x015c, 0x00ce, 0x00d2, 0x00d2, 0x015c, 0x015c, 0x015c, 0x015c, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x015c, 0x0164, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0158, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0160, 0x0094, 0x00ce, 0x00ce, 0x00ce, 0x00d2, 0x00a4, 0x0178, 
	0x0094, 0x0094, 0x0094, 0x017a, 0x00ce, 0x00ce, 0x00ce, 0x017c, 
	0x017e, 0x017e, 0x017e, 0x017e, 0x017e, 0x0112, 0x00a4, 0x00a4, 
	0x0158, 0x0166, 0x0166, 0x0158, 0x0166, 0x0166, 0x0158, 0x00a4, 
	0x00a4, 0x00a4, 0x0094, 0x0094, 0x0158, 0x0094, 0x0094, 0x0094, 
	0x0158, 0x0094, 0x0158, 0x0158, 0x00a4, 0x0094, 0x0158, 0x0094, 
	0x0160, 0x0094, 0x00ce, 0x00ce, 0x00ce, 0x011e, 0x015a, 0x00a4, 
	0x0094, 0x0094, 0x0166, 0x00cc, 0x00ce, 0x00ce, 0x00ce, 0x00a4, 
	0x017e, 0x017e, 0x017e, 0x017e, 0x017e, 0x00a4, 0x0094, 0x00a4, 
	0x0180, 0x0182, 0x0112, 0x0112, 0x0112, 0x0112, 0x0112, 0x0112, 
	0x0112, 0x0184, 0x0182, 0x0182, 0x00ce, 0x0182, 0x0182, 0x0182, 
	0x0186, 0x0186, 0x0186, 0x0186, 0x0186, 0x0188, 0x0188, 0x0188, 
	0x0188, 0x0188, 0x0100, 0x0100, 0x0100, 0x018a, 0x018a, 0x015c, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0158, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 0x00a4, 0x00a4, 
	0x011e, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x0156, 
	0x00ce, 0x00ce, 0x017c, 0x00ce, 0x0094, 0x0094, 0x00a4, 0x00a4, 
	0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x011e, 0x00ce, 0x00ce, 0x00ce, 
	0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 
	0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00d2, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x018c, 0x0182, 0x0182, 0x0170, 0x018e, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0158, 0x0094, 0x0094, 0x0158, 0x0166, 0x015e, 0x00ce, 
	0x0156, 0x00d2, 0x00a4, 0x00ce, 0x015e, 0x00a4, 0x00a4, 0x00a4, 
	0x0186, 0x0186, 0x0186, 0x0186, 0x0186, 0x0112, 0x0112, 0x0112, 
	0x0094, 0x0094, 0x0094, 0x015c, 0x00ce, 0x00a4, 0x00a4, 0x00a4, 
	0x00f2, 0x00f2, 0x00f2, 0x00f2, 0x00f2, 0x00f2, 0x00f2, 0x00f2, 
	0x00f2, 0x00f2, 0x00f2, 0x00f2, 0x00f2, 0x00f2, 0x00f2, 0x00f2, 
	0x00f2, 0x00f2, 0x00f2, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0166, 0x00a4, 0x011a, 0x00a4, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x00a4, 0x00a4, 0x0158, 
	0x0094, 0x0166, 0x00a4, 0x00a4, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x00a4, 0x00a4, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0166, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0166, 0x0166, 0x0094, 0x0094, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0166, 0x0166, 0x0094, 0x0094, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0166, 0x0166, 0x0094, 0x0094, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 
	0x0166, 0x0094, 0x0094, 0x00a4, 0x0094, 0x0094, 0x0094, 0x0166, 
	0x0166, 0x0094, 0x0094, 0x00a4, 0x0094, 0x0094, 0x0094, 0x0166, 
	0x0094, 0x0094, 0x0094, 0x0166, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0166, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 0x00a4, 0x00a4, 
	0x011a, 0x0112, 0x0112, 0x0112, 0x0190, 0x0192, 0x0192, 0x0192, 
	0x0192, 0x0194, 0x0196, 0x0198, 0x0198, 0x0198, 0x0176, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0166, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x019a, 0x019c, 
	0x0094, 0x0094, 0x0094, 0x0166, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x019e, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x01a0, 0x01a2, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x019a, 0x0112, 0x01a4, 
	0x01a6, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x015c, 0x015e, 0x00ce, 0x00ce, 0x00ce, 0x015c, 
	0x015c, 0x015c, 0x015c, 0x0156, 0x015e, 0x00ce, 0x00ce, 0x00ce, 
	0x00ce, 0x00ce, 0x0112, 0x0112, 0x0112, 0x01a8, 0x0164, 0x00a4, 
	0x0186, 0x0186, 0x0186, 0x0186, 0x0186, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0010, 0x0010, 0x0010, 0x01aa, 0x0010, 0x01ac, 0x01ae, 0x01b0, 
	0x017e, 0x017e, 0x017e, 0x017e, 0x017e, 0x00a4, 0x00a4, 0x00a4, 
	0x0094, 0x01b2, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0160, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x0062, 0x0062, 0x0062, 0x01b4, 0x01b4, 0x01b6, 0x00a4, 0x00a4, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 
	0x0062, 0x0062, 0x0062, 0x0062, 0x0062, 0x00a4, 0x00a4, 0x00a4, 
	0x01b8, 0x01b8, 0x01b8, 0x01b8, 0x01ba, 0x01ba, 0x01ba, 0x01ba, 
	0x01b8, 0x01b8, 0x01b8, 0x00a4, 0x01ba, 0x01ba, 0x01ba, 0x00a4, 
	0x01b8, 0x01b8, 0x01b8, 0x01b8, 0x01ba, 0x01ba, 0x01ba, 0x01ba, 
	0x01b8, 0x01b8, 0x01b8, 0x01b8, 0x01ba, 0x01ba, 0x01ba, 0x01ba, 
	0x01b8, 0x01b8, 0x01b8, 0x00a4, 0x01ba, 0x01ba, 0x01ba, 0x00a4, 
	0x01bc, 0x01bc, 0x01bc, 0x01bc, 0x01be, 0x01be, 0x01be, 0x01be, 
	0x01b8, 0x01b8, 0x01b8, 0x01b8, 0x01ba, 0x01ba, 0x01ba, 0x01ba, 
	0x01c0, 0x01c2, 0x01c2, 0x01c4, 0x01c6, 0x01c8, 0x01ca, 0x00a4, 
	0x01b4, 0x01b4, 0x01b4, 0x01b4, 0x01cc, 0x01cc, 0x01cc, 0x01cc, 
	0x01b4, 0x01b4, 0x01b4, 0x01b4, 0x01cc, 0x01cc, 0x01cc, 0x01cc, 
	0x01b4, 0x01b4, 0x01b4, 0x01b4, 0x01cc, 0x01cc, 0x01cc, 0x01cc, 
	0x01b8, 0x01b4, 0x01ce, 0x01b4, 0x01ba, 0x01d0, 0x01d2, 0x01d4, 
	0x00ca, 0x01b4, 0x01ce, 0x01b4, 0x01d6, 0x01d6, 0x01d2, 0x00ca, 
	0x01b8, 0x01b4, 0x00a4, 0x01b4, 0x01ba, 0x01d8, 0x01da, 0x00ca, 
	0x01b8, 0x01b4, 0x01dc, 0x01b4, 0x01ba, 0x01de, 0x01e0, 0x00ca, 
	0x00a4, 0x01b4, 0x01ce, 0x01b4, 0x01e2, 0x01e4, 0x01d2, 0x01e6, 
	0x01e8, 0x01e8, 0x01e8, 0x01ea, 0x01e8, 0x01ec, 0x01ae, 0x01ee, 
	0x01f0, 0x01f0, 0x01f0, 0x0010, 0x01f2, 0x01f4, 0x01f2, 0x01f4, 
	0x0010, 0x0010, 0x0010, 0x0010, 0x01f6, 0x01f8, 0x01f8, 0x01fa, 
	0x01fc, 0x01fc, 0x01fe, 0x0010, 0x0200, 0x0202, 0x0010, 0x0204, 
	0x0206, 0x0010, 0x0208, 0x020a, 0x0010, 0x0010, 0x0010, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x01ae, 0x01ae, 0x01ae, 
	0x020c, 0x00a4, 0x0048, 0x0048, 0x0048, 0x020e, 0x0208, 0x0210, 
	0x0212, 0x0212, 0x0212, 0x0212, 0x0212, 0x020e, 0x0208, 0x020a, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x003a, 0x003a, 0x003a, 0x003a, 0x003a, 0x003a, 0x003a, 0x003a, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x00ce, 0x0144, 0x0102, 
	0x0146, 0x0102, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x003c, 0x0214, 0x003c, 0x0216, 0x003c, 0x0218, 0x00f2, 0x0080, 
	0x00f2, 0x021a, 0x0216, 0x003c, 0x0216, 0x00f2, 0x00f2, 0x003c, 
	0x003c, 0x003c, 0x0214, 0x021c, 0x0214, 0x021e, 0x00f2, 0x0220, 
	0x00f2, 0x0216, 0x0090, 0x0094, 0x0222, 0x0224, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x0226, 0x0052, 0x0052, 0x0052, 0x0052, 0x0052, 0x0052, 
	0x0228, 0x0228, 0x0228, 0x0228, 0x0228, 0x0228, 0x022a, 0x022a, 
	0x022c, 0x022c, 0x022c, 0x022c, 0x022c, 0x022c, 0x022e, 0x022e, 
	0x0230, 0x0232, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0234, 0x0234, 0x0236, 0x003c, 0x003c, 0x0234, 0x003c, 0x003c, 
	0x0236, 0x0238, 0x003c, 0x0236, 0x003c, 0x003c, 0x003c, 0x0236, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x0234, 
	0x003c, 0x0236, 0x0236, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x023a, 0x023c, 0x001e, 0x0234, 0x023c, 0x023c, 0x023c, 0x0234, 
	0x023a, 0x020e, 0x023a, 0x001e, 0x0234, 0x023c, 0x023c, 0x023a, 
	0x023c, 0x001e, 0x001e, 0x001e, 0x0234, 0x023a, 0x023c, 0x023c, 
	0x023c, 0x023c, 0x0234, 0x0234, 0x023a, 0x023a, 0x023c, 0x023c, 
	0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 0x001e, 0x0234, 
	0x0234, 0x023c, 0x023c, 0x0234, 0x0234, 0x0234, 0x0234, 0x023a, 
	0x001e, 0x001e, 0x023c, 0x023c, 0x023c, 0x023c, 0x0234, 0x023c, 
	0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 
	0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 0x001e, 0x023a, 
	0x023c, 0x001e, 0x0234, 0x0234, 0x001e, 0x0234, 0x0234, 0x0234, 
	0x0234, 0x023c, 0x0234, 0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 
	0x023c, 0x023c, 0x023c, 0x023c, 0x001e, 0x0234, 0x0234, 0x023c, 
	0x0234, 0x0234, 0x0234, 0x0234, 0x023a, 0x023c, 0x023c, 0x0234, 
	0x023c, 0x0234, 0x0234, 0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 
	0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 0x023c, 0x0234, 
	0x023c, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x023c, 0x023c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x023c, 0x003c, 0x003c, 0x003c, 0x023e, 0x0240, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0242, 0x0244, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x0246, 0x003c, 0x003c, 0x0224, 0x00a4, 0x00a4, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x0224, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x0224, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0248, 0x0248, 0x0248, 0x0248, 0x0248, 0x0248, 0x0248, 0x0248, 
	0x0248, 0x0248, 0x024a, 0x024a, 0x024a, 0x024a, 0x024a, 0x024a, 
	0x024a, 0x024a, 0x024a, 0x024a, 0x024c, 0x024c, 0x024c, 0x024c, 
	0x024c, 0x024c, 0x024c, 0x024c, 0x024c, 0x024c, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x024e, 0x024e, 0x024e, 0x024e, 0x024e, 
	0x024e, 0x024e, 0x024e, 0x024e, 0x024e, 0x024e, 0x024e, 0x024e, 
	0x0250, 0x0250, 0x0250, 0x0250, 0x0250, 0x0250, 0x0250, 0x0250, 
	0x0250, 0x0250, 0x0250, 0x0250, 0x0250, 0x0252, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x0238, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x0238, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x00a4, 0x00a4, 0x0244, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x0238, 
	0x003c, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0244, 0x003c, 0x0224, 0x003c, 0x003c, 0x00a4, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x0244, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x0244, 0x0244, 
	0x003c, 0x0224, 0x00a4, 0x0224, 0x003c, 0x003c, 0x003c, 0x0224, 
	0x0244, 0x003c, 0x003c, 0x003c, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x0254, 0x0254, 0x0254, 0x0254, 0x0254, 
	0x0256, 0x0256, 0x0256, 0x0256, 0x0256, 0x0258, 0x0258, 0x0258, 
	0x0258, 0x0258, 0x0224, 0x00a4, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x0244, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x0224, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x0244, 0x003c, 0x003c, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x00a4, 0x00a4, 
	0x000a, 0x0010, 0x025a, 0x025c, 0x0012, 0x0012, 0x0012, 0x0012, 
	0x0012, 0x003c, 0x0012, 0x0012, 0x0012, 0x0012, 0x025e, 0x0260, 
	0x0262, 0x0264, 0x0264, 0x0264, 0x0264, 0x00ce, 0x00ce, 0x00ce, 
	0x0266, 0x00c4, 0x00c4, 0x003c, 0x0268, 0x026a, 0x00a4, 0x003c, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0166, 0x00a4, 0x011e, 0x026c, 0x00c8, 0x00cc, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x026e, 0x00c4, 0x00cc, 
	0x00a4, 0x00a4, 0x0158, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 0x00a4, 
	0x0158, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 
	0x0182, 0x0188, 0x0188, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0170, 0x00a4, 
	0x0188, 0x0188, 0x0188, 0x0188, 0x0188, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x00a4, 0x018e, 
	0x0270, 0x0270, 0x0270, 0x0270, 0x0270, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0170, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x00a4, 0x00a4, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0170, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0170, 0x00a4, 0x018e, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 
	0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x0182, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 0x00a4, 
	0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x00a4, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x003c, 0x003c, 0x0244, 0x003c, 0x003c, 0x003c, 0x003c, 0x003c, 
	0x0224, 0x003c, 0x0224, 0x0224, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0094, 0x0094, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0272, 0x0272, 0x0272, 0x0272, 0x0272, 0x0272, 0x0272, 0x0272, 
	0x0272, 0x0272, 0x0272, 0x0272, 0x0272, 0x0272, 0x0272, 0x0272, 
	0x0274, 0x0274, 0x0274, 0x0274, 0x0274, 0x0274, 0x0274, 0x0274, 
	0x0274, 0x0274, 0x0274, 0x0274, 0x0274, 0x0274, 0x0274, 0x0274, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x01b4, 0x01b4, 0x01b4, 0x01ce, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x0276, 0x01b4, 0x01b4, 0x00a4, 0x00a4, 0x0278, 0x027a, 
	0x0124, 0x0124, 0x0124, 0x0124, 0x027c, 0x0124, 0x0124, 0x0124, 
	0x0124, 0x0124, 0x0124, 0x0126, 0x0124, 0x0124, 0x0126, 0x0126, 
	0x0124, 0x0278, 0x0126, 0x0124, 0x0124, 0x0124, 0x0124, 0x0124, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x0130, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x018a, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x00a4, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x00a4, 0x00a4, 
	0x00ce, 0x00ce, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x00a4, 
	0x027e, 0x0280, 0x0282, 0x0284, 0x0284, 0x0284, 0x0284, 0x0284, 
	0x0284, 0x0284, 0x01a2, 0x00a4, 0x0286, 0x0010, 0x0204, 0x0288, 
	0x001c, 0x012c, 0x028a, 0x0010, 0x025e, 0x0284, 0x0284, 0x028c, 
	0x0010, 0x028e, 0x0234, 0x0290, 0x0292, 0x01fe, 0x00a4, 0x00a4, 
	0x0132, 0x0134, 0x0134, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 
	0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0132, 0x0134, 0x0154, 
	0x0286, 0x000c, 0x000e, 0x0010, 0x018a, 0x0014, 0x0016, 0x0018, 
	0x001a, 0x001a, 0x001a, 0x001a, 0x001a, 0x001c, 0x0234, 0x0294, 
	0x0022, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 
	0x0024, 0x0024, 0x0024, 0x0024, 0x0024, 0x0296, 0x0298, 0x002a, 
	0x002c, 0x002e, 0x002e, 0x002e, 0x002e, 0x002e, 0x002e, 0x002e, 
	0x002e, 0x002e, 0x002e, 0x002e, 0x002e, 0x029a, 0x029c, 0x0290, 
	0x0286, 0x018a, 0x0204, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x029e, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x00c4, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 
	0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0094, 0x0166, 
	0x00a4, 0x0094, 0x0094, 0x0094, 0x00a4, 0x0094, 0x0094, 0x0094, 
	0x00a4, 0x0094, 0x0094, 0x0094, 0x00a4, 0x0094, 0x0166, 0x00a4, 
	0x003a, 0x02a0, 0x02a2, 0x02a4, 0x0238, 0x0234, 0x0236, 0x0224, 
	0x00a4, 0x00a4, 0x00a4, 0x00a4, 0x0154, 0x01ae, 0x003c, 0x00a4, 
};


static const uint A[] = {
	0x4800100f, 0x4800100f, 0x4800100f, 0x5800400f, 
	0x5000400f, 0x5800400f, 0x6000400f, 0x5000400f, 
	0x5000400f, 0x5000400f, 0x6000400c, 0x68000018, 
	0x68000018, 0x28000018, 0x2800601a, 0x28000018, 
	0x68000018, 0x68000018, 0xe8000015, 0xe8000016, 
	0x68000018, 0x28000019, 0x38000018, 0x28000014, 
	0x38000018, 0x20000018, 0x18003609, 0x18003609, 
	0x38000018, 0x68000018, 0xe8000019, 0x68000019, 
	0xe8000019, 0x68000018, 0x68000018, 0x00827fe1, 
	0x00827fe1, 0x00827fe1, 0x00827fe1, 0xe8000015, 
	0x68000018, 0xe8000016, 0x6800001b, 0x68005017, 
	0x6800001b, 0x00817fe2, 0x00817fe2, 0x00817fe2, 
	0x00817fe2, 0xe8000015, 0x68000019, 0xe8000016, 
	0x68000019, 0x4800100f, 0x4800100f, 0x5000100f, 
	0x3800000c, 0x68000018, 0x2800601a, 0x2800601a, 
	0x6800001c, 0x6800001c, 0x6800001b, 0x6800001c, 
	0x00007002, 0xe800001d, 0x68000019, 0x68000014, 
	0x6800001c, 0x6800001b, 0x2800001c, 0x28000019, 
	0x1800060b, 0x1800060b, 0x6800001b, 0x07fd7002, 
	0x6800001c, 0x68000018, 0x6800001b, 0x1800050b, 
	0x00007002, 0xe800001e, 0x6800080b, 0x6800080b, 
	0x6800080b, 0x68000018, 0x00827001, 0x00827001, 
	0x00827001, 0x68000019, 0x00827001, 0x07fd7002, 
	0x00817002, 0x00817002, 0x00817002, 0x68000019, 
	0x00817002, 0x061d7002, 0x00067001, 0x00057002, 
	0x04e67001, 0x03a17002, 0x00007002, 0x00067001, 
	0x00057002, 0x00067001, 0x00057002, 0x07fd7002, 
	0x061e7001, 0x00067001, 0x00007002, 0x034a7001, 
	0x033a7001, 0x00067001, 0x00057002, 0x03367001, 
	0x03367001, 0x00067001, 0x00057002, 0x00007002, 
	0x013e7001, 0x032a7001, 0x032e7001, 0x00067001, 
	0x033e7001, 0x067d7002, 0x034e7001, 0x03467001, 
	0x00007002, 0x00007002, 0x034e7001, 0x03567001, 
	0x00007002, 0x035a7001, 0x036a7001, 0x00067001, 
	0x00057002, 0x036a7001, 0x00057002, 0x03667001, 
	0x03667001, 0x00067001, 0x00057002, 0x036e7001, 
	0x00007002, 0x00007005, 0x00007002, 0x07217002, 
	0x00007005, 0x00007005, 0x000af001, 0x0007f003, 
	0x0009f002, 0x000af001, 0x0007f003, 0x0009f002, 
	0x0009f002, 0x00067001, 0x00057002, 0x013d7002, 
	0x07fd7002, 0x000af001, 0x067e7001, 0x07227001, 
	0x78000000, 0x78000000, 0x00007002, 0x03497002, 
	0x03397002, 0x00007002, 0x03357002, 0x03357002, 
	0x00007002, 0x03297002, 0x00007002, 0x032d7002, 
	0x03357002, 0x00007002, 0x00007002, 0x033d7002, 
	0x03457002, 0x034d7002, 0x00007002, 0x034d7002, 
	0x03557002, 0x00007002, 0x00007002, 0x03597002, 
	0x03697002, 0x00007002, 0x00007002, 0x03697002, 
	0x03657002, 0x03657002, 0x036d7002, 0x00007002, 
	0x00007004, 0x00007004, 0x00007004, 0x6800001b, 
	0x6800001b, 0x00007004, 0x6800001b, 0x6800001b, 
	0x00007004, 0x78000000, 0x40003006, 0x40003006, 
	0x40003006, 0x46b13006, 0x40003006, 0x78000000, 
	0x68000018, 0x78000000, 0x009a7001, 0x68000018, 
	0x00967001, 0x00967001, 0x00967001, 0x78000000, 
	0x01027001, 0x78000000, 0x00fe7001, 0x00fe7001, 
	0x07fd7002, 0x00827001, 0x78000000, 0x00827001, 
	0x00997002, 0x00957002, 0x00957002, 0x00957002, 
	0x07fd7002, 0x00817002, 0x007d7002, 0x00817002, 
	0x01017002, 0x00fd7002, 0x00fd7002, 0x78000000, 
	0x00f97002, 0x00e57002, 0x00007001, 0x00007001, 
	0x00007001, 0x00bd7002, 0x00d97002, 0x00007002, 
	0x01597002, 0x01417002, 0x013d7002, 0x00007002, 
	0x01427001, 0x01427001, 0x01417002, 0x01417002, 
	0x0000001c, 0x40003006, 0x40000007, 0x40000007, 
	0x00007001, 0x00067001, 0x00057002, 0x78000000, 
	0x78000000, 0x00067001, 0x78000000, 0x00c27001, 
	0x00c27001, 0x00c27001, 0x00c27001, 0x78000000, 
	0x78000000, 0x00007004, 0x00000018, 0x00000018, 
	0x78000000, 0x00c17002, 0x00c17002, 0x00c17002, 
	0x00c17002, 0x07fd7002, 0x78000000, 0x00000018, 
	0x68000014, 0x78000000, 0x78000000, 0x40003006, 
	0x08000018, 0x40003006, 0x40003006, 0x08000018, 
	0x08007005, 0x08007005, 0x08007005, 0x78000000, 
	0x08007005, 0x08000018, 0x08000018, 0x78000000, 
	0x38000018, 0x78000000, 0x78000000, 0x10000018, 
	0x78000000, 0x10007005, 0x10007005, 0x10007005, 
	0x10007005, 0x78000000, 0x10007004, 0x10007005, 
	0x10007005, 0x40003006, 0x30003409, 0x30003409, 
	0x28000018, 0x30000018, 0x30000018, 0x10000018, 
	0x40003006, 0x10007005, 0x10000018, 0x10007005, 
	0x40003006, 0x40000007, 0x40000007, 0x40003006, 
	0x40003006, 0x10007004, 0x10007004, 0x40003006, 
	0x40003006, 0x6800001c, 0x10007005, 0x1000001c, 
	0x1000001c, 0x78000000, 0x10000018, 0x10000018, 
	0x78000000, 0x48001010, 0x40003006, 0x00003008, 
	0x78000000, 0x00007005, 0x40003006, 0x00007005, 
	0x00003008, 0x00003008, 0x00003008, 0x40003006, 
	0x00007005, 0x40003006, 0x00003749, 0x00003749, 
	0x00000018, 0x78000000, 0x00007005, 0x78000000, 
	0x78000000, 0x00003008, 0x00003008, 0x78000000, 
	0x000005ab, 0x000005ab, 0x0000000b, 0x000006eb, 
	0x0000001c, 0x78000000, 0x78000000, 0x00003749, 
	0x0000074b, 0x0000080b, 0x0000080b, 0x78000000, 
	0x78000000, 0x2800601a, 0x00007004, 0x40003006, 
	0x40003006, 0x00000018, 0x00003609, 0x00003609, 
	0x00007005, 0x0000001c, 0x0000001c, 0x0000001c, 
	0x00000018, 0x0000001c, 0x00003409, 0x00003409, 
	0x0000000b, 0x0000000b, 0x68000015, 0x68000016, 
	0x40003006, 0x0000001c, 0x78000000, 0x0000001c, 
	0x00000018, 0x00003709, 0x00003709, 0x00003709, 
	0x0000070b, 0x0000042b, 0x0000054b, 0x0000080b, 
	0x0000080b, 0x0000080b, 0x00007005, 0x00000018, 
	0x00000018, 0x00007005, 0x6000400c, 0x00007005, 
	0x00007005, 0x68000015, 0x68000016, 0x78000000, 
	0x0000046b, 0x0000046b, 0x0000046b, 0x78000000, 
	0x00000018, 0x2800601a, 0x68000014, 0x68000018, 
	0x68000018, 0x48001010, 0x48001010, 0x48001010, 
	0x48001010, 0x78000000, 0x00007005, 0x00007004, 
	0x07fd7002, 0x07fd7002, 0x07fd7002, 0x00ed7002, 
	0x07e17002, 0x07e17002, 0x07e27001, 0x07e27001, 
	0x07fd7002, 0x07e17002, 0x78000000, 0x07e27001, 
	0x06d97002, 0x06d97002, 0x06a97002, 0x06a97002, 
	0x06717002, 0x06717002, 0x06017002, 0x06017002, 
	0x06417002, 0x06417002, 0x06097002, 0x06097002, 
	0x07fff003, 0x07fff003, 0x07fd7002, 0x78000000, 
	0x06da7001, 0x06da7001, 0x07fff003, 0x6800001b, 
	0x07fd7002, 0x6800001b, 0x06aa7001, 0x06aa7001, 
	0x06727001, 0x06727001, 0x78000000, 0x6800001b, 
	0x07fd7002, 0x07e57002, 0x06427001, 0x06427001, 
	0x07e67001, 0x6800001b, 0x06027001, 0x06027001, 
	0x060a7001, 0x060a7001, 0x6800001b, 0x78000000, 
	0x6000400c, 0x6000400c, 0x6000400c, 0x6000000c, 
	0x6000400c, 0x4800400c, 0x00001010, 0x08001010, 
	0x68000014, 0x68000014, 0x6800001d, 0x6800001e, 
	0x68000015, 0x6800001d, 0x6000400d, 0x5000400e, 
	0x78001010, 0x78001010, 0x78001010, 0x6000000c, 
	0x28000018, 0x28000018, 0x28000018, 0x68000018, 
	0x68000018, 0xe800001d, 0xe800001e, 0x68000018, 
	0x68000018, 0x68005017, 0x68005017, 0x68000018, 
	0x68000019, 0xe8000015, 0xe8000016, 0x78000000, 
	0x1800060b, 0x78000000, 0x28000019, 0x28000019, 
	0xe8000016, 0x00007002, 0x1800040b, 0x1800040b, 
	0x00007001, 0x6800001c, 0x6800001c, 0x00007001, 
	0x00007002, 0x00007001, 0x00007001, 0x00007002, 
	0x07fe7001, 0x6800001c, 0x07fe7001, 0x07fe7001, 
	0x2800001c, 0x00007002, 0x00007005, 0x00007002, 
	0x6800001c, 0x78000000, 0x78000000, 0x6800080b, 
	0x0042742a, 0x0042742a, 0x0042780a, 0x0042780a, 
	0x0041762a, 0x0041762a, 0x0041780a, 0x0041780a, 
	0x0000780a, 0x0000780a, 0x0000780a, 0x0000700a, 
	0x68000019, 0x68000019, 0x68000019, 0x6800001c, 
	0x6800001c, 0x68000019, 0x68000019, 0xe8000019, 
	0xe8000019, 0xe8000019, 0x6800001c, 0xe8000015, 
	0xe8000016, 0x6800001c, 0x0000001c, 0x6800001c, 
	0x78000000, 0x6800001c, 0x6800001c, 0x0000001c, 
	0x1800042b, 0x1800042b, 0x180005ab, 0x180005ab, 
	0x1800072b, 0x1800072b, 0x006a001c, 0x006a001c, 
	0x0069001c, 0x0069001c, 0x180006cb, 0x78000000, 
	0x6800056b, 0x6800056b, 0x6800042b, 0x6800042b, 
	0x680006eb, 0x680006eb, 0x6800001c, 0x00007004, 
	0x00007005, 0x0000772a, 0x68000014, 0x68000015, 
	0x68000016, 0x68000016, 0x6800001c, 0x0000740a, 
	0x0000740a, 0x0000740a, 0x68000014, 0x00007004, 
	0x0000764a, 0x0000776a, 0x0000748a, 0x78000000, 
	0x40003006, 0x6800001b, 0x00007005, 0x68005017, 
	0x0000042b, 0x0000042b, 0x00000013, 0x00000013, 
	0x00000012, 0x00000012, 0x78000000, 0x07fd7002, 
	0x78000000, 0x08007005, 0x40003006, 0x08007005, 
	0x08007005, 0x28000019, 0x68000018, 0x68000014, 
	0x68000014, 0x68005017, 0x68005017, 0x68000015, 
	0x68000016, 0x68000015, 0x78000000, 0x68000018, 
	0x68005017, 0x68005017, 0x68000018, 0x38000018, 
	0x68000016, 0x28000018, 0x28000019, 0x28000014, 
	0x68000019, 0x78000000, 0x68000018, 0x2800601a, 
	0x68000019, 0x68000018, 0x00827fe1, 0x68000015, 
	0x68000018, 0x68000016, 0x00817fe2, 0x68000015, 
	0x68000019, 0x68000016, 0x00007004, 0x00007005, 
	0x68000019, 0x6800001b, 0x6800001c, 0x2800601a, 
	0x2800601a, 0x78000000, 
};

void java_lang_CharacterData_C$::setArrays(
) {
#if JPP_JDK_VERSION >= JPP_JDK_CDC
	_asm int 3;
#endif
	return;
}


jint java_lang_CharacterData_C$::getProperties(
	unicod ch
) {
    if (ch < 255) {
        return Latin1Data[ch];
    }
    return A[Y[(X[ch>>5]<<4)|((ch>>1)&0xF)]|(ch&0x1)];
}



/**====================== end ========================**/

#if CHARACTER_DATA_GENERATION
    static char X[] = (
        "\000\001\002\003\004\005\006\007\010\011\012\013\014\015\016\017\010\020\021"+
        "\022\023\024\025\026\027\027\030\031\032\033\034\035\036\037\040\010\041\010"+
        "\042\043\044\045\046\047\050\051\052\053\054\055\056\057\060\060\061\062\063"+
        "\064\065\044\060\066\044\044\044\044\044\044\044\044\044\044\067\070\071\072"+
        "\073\074\075\076\077\100\101\102\103\104\105\106\073\107\110\111\112\113\114"+
        "\115\116\117\120\121\122\123\124\121\122\125\126\121\127\130\131\132\133\134"+
        "\135\044\136\137\140\044\141\142\143\144\145\146\147\044\150\151\152\044\044"+
        "\153\154\155\150\150\156\150\150\157\150\160\161\150\162\150\163\164\165\166"+
        "\164\150\167\170\044\150\150\171\133\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\172\173\150\150\174\044\044\044\044\150\175"+
        "\176\177\200\150\201\202\150\203\044\044\044\044\044\044\044\044\044\044\044"+
        "\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044"+
        "\044\044\044\044\044\044\044\044\044\044\044\044\010\010\010\010\204\010\010"+
        "\205\206\207\210\211\212\213\214\215\216\217\220\221\222\223\224\225\226\227"+
        "\230\231\232\233\234\235\236\237\240\241\242\243\244\245\246\247\250\251\252"+
        "\044\044\044\253\254\255\256\257\260\261\262\253\253\253\253\263\264\265\266"+
        "\267\253\253\270\044\044\044\044\271\272\273\274\275\276\044\044\253\253\253"+
        "\253\253\253\253\253\044\044\044\044\044\044\044\044\044\044\044\044\044\044"+
        "\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044"+
        "\044\044\044\044\044\044\044\044\044\044\044\277\253\253\235\253\253\253\253"+
        "\253\253\263\300\301\302\133\150\303\133\150\304\305\306\150\150\307\202\044"+
        "\044\310\311\312\313\314\315\316\317\250\250\250\320\250\250\321\317\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\322\044\044\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\323\044\044\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\324\325\326\044\044\044\044\044\044\044\044\044\044\044"+
        "\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044"+
        "\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044\044"+
        "\044\044\044\044\044\044\044\044\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150"+
        "\150\150\150\150\150\150\150\150\150\150\150\150\150\150\150\327\044\044\330"+
        "\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330"+
        "\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330"+
        "\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330\330"+
        "\330\330\330\330\330\330\331\331\331\331\331\331\331\331\331\331\331\331\331"+
        "\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331"+
        "\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331"+
        "\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331"+
        "\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331"+
        "\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331"+
        "\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331"+
        "\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331"+
        "\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331"+
        "\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331"+
        "\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\331\150\150\150"+
        "\150\150\150\150\150\150\332\044\044\044\044\044\044\333\334\335\060\060\336"+
        "\337\060\060\060\060\060\060\060\060\060\060\340\341\060\342\060\343\344\044"+
    "\345\346\347\060\060\060\350\351\352\353\354\355\356\357\360").toCharArray();


  static char Y[] = (
    "\000\000\000\000\002\004\006\000\000\000\000\000\000\000\010\004\012\014\016"+
    "\020\022\024\026\030\032\032\032\032\032\034\036\040\042\044\044\044\044\044"+
    "\044\044\044\044\044\044\044\046\050\052\054\056\056\056\056\056\056\056\056"+
    "\056\056\056\056\060\062\064\000\000\066\000\000\000\000\000\000\000\000\000"+
    "\000\000\000\000\070\072\072\074\076\100\102\104\106\110\112\114\116\120\122"+
    "\124\126\126\126\126\126\126\126\126\126\126\126\130\126\126\126\132\134\134"+
    "\134\134\134\134\134\134\134\134\134\136\134\134\134\140\142\142\142\142\142"+
    "\142\142\142\142\142\142\142\142\142\142\142\142\142\142\142\142\142\142\142"+
    "\144\142\142\142\146\150\150\150\150\150\150\150\152\142\142\142\142\142\142"+
    "\142\142\142\142\142\142\142\142\142\142\142\142\142\142\142\142\142\154\150"+
    "\150\152\156\142\142\160\162\164\166\170\172\162\174\176\142\200\202\204\142"+
    "\142\142\206\210\200\142\206\212\214\150\216\142\220\142\222\224\224\226\230"+
    "\232\226\234\150\150\150\150\150\150\150\236\142\142\142\142\142\142\142\142"+
    "\142\240\232\142\242\142\142\142\142\244\142\142\142\142\142\142\142\142\142"+
    "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\200\246\250\252\254"+
    "\256\200\200\260\262\200\200\264\200\200\266\200\270\272\200\200\200\200\200"+
    "\274\276\200\200\274\300\200\200\200\302\200\200\200\200\200\200\200\200\200"+
    "\200\200\200\200\244\304\304\304\304\306\310\304\304\304\312\312\312\312\312"+
    "\312\312\304\312\312\312\312\312\312\312\304\304\306\312\312\312\312\314\244"+
    "\244\244\244\244\244\244\244\316\316\316\316\316\316\316\316\316\316\316\316"+
    "\316\316\316\316\316\316\320\316\316\316\316\322\244\244\244\244\244\244\244"+
    "\244\316\322\244\244\244\244\244\244\244\244\312\244\244\314\244\324\244\244"+
    "\312\326\330\332\334\336\340\126\126\126\126\126\126\126\126\342\126\126\126"+
    "\126\344\346\350\134\134\134\134\134\134\134\134\352\134\134\134\134\354\356"+
    "\360\362\364\366\244\142\142\142\142\142\142\142\142\142\142\142\370\372\244"+
    "\244\244\244\244\244\374\374\374\374\374\374\374\374\126\126\126\126\126\126"+
    "\126\126\126\126\126\126\126\126\126\126\134\134\134\134\134\134\134\134\134"+
    "\134\134\134\134\134\134\134\376\376\376\376\376\376\376\376\142\u0100\316"+
    "\322\u0102\244\142\142\142\142\142\142\142\142\142\142\u0104\150\u0106\u0108"+
    "\u0106\u0108\u0106\244\142\142\142\142\142\142\142\142\142\142\142\142\142"+
    "\142\142\142\142\142\142\244\142\244\244\244\244\244\244\244\244\244\244\244"+
    "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\u010A\u010C"+
    "\u010C\u010C\u010C\u010C\u010C\u010C\u010C\u010C\u010C\u010C\u010C\u010C\u010C"+
    "\u010C\u010C\u010C\u010C\u010E\u0110\u0112\u0112\u0112\u0114\u0116\u0116\u0116"+
    "\u0116\u0116\u0116\u0116\u0116\u0116\u0116\u0116\u0116\u0116\u0116\u0116\u0116"+
    "\u0116\u0116\u0118\u011A\u011C\244\244\u011E\316\316\316\316\316\316\316\316"+
    "\u011E\316\316\316\316\316\316\316\316\316\316\316\u011E\316\u0120\u0120\u0122"+
    "\322\244\244\244\244\244\u0124\u0124\u0124\u0124\u0124\u0124\u0124\u0124\u0124"+
    "\u0124\u0124\u0124\u0124\u0126\244\244\u0124\u0128\u012A\244\244\244\244\244"+
    "\244\244\244\244\244\244\u012C\244\244\244\244\244\244\u012E\244\u012E\u0130"+
    "\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0134"+
    "\244\244\u0136\u0132\u0132\u0132\u0132\u0138\316\316\316\316\316\244\244\244"+
    "\244\244\u013A\u013A\u013A\u013A\u013A\u013C\u013E\244\u0140\u0132\u0132\u0132"+
    "\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132"+
    "\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132"+
    "\u0132\u0132\u0132\u0132\u0142\316\316\316\u0144\u0146\316\316\u0148\u014A"+
    "\u014C\316\316\244\032\032\032\032\032\u0132\u014E\u0150\u0152\u0152\u0152"+
    "\u0152\u0152\u0152\u0152\u0154\u0138\u0132\u0132\u0132\u0132\u0132\u0132\u0132"+
    "\u0132\u0132\u0132\u0132\u0132\u0132\u0134\244\316\316\316\316\316\316\316"+
    "\316\316\316\316\316\316\322\244\244\244\244\244\244\244\244\244\244\u0132"+
    "\u0132\u0132\316\316\316\316\316\322\244\244\244\244\244\244\244\u011E\u0156"+
    "\u0158\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224"+
    "\224\224\224\224\224\224\224\224\224\244\u015A\u015C\u015E\316\316\316\u0156"+
    "\u015C\u015E\244\u0160\316\322\244\224\224\224\224\224\316\u0112\u0162\u0162"+
    "\u0162\u0162\u0162\u0164\244\244\244\244\244\244\244\u011E\u015C\u0158\224"+
    "\224\224\u0166\u0158\u0166\u0158\224\224\224\224\224\224\224\224\224\224\u0166"+
    "\224\224\224\u0166\u0166\244\224\224\244\322\u015C\u015E\316\322\u0168\u016A"+
    "\u0168\u015E\244\244\244\244\u0168\244\244\224\u0158\224\316\244\u0162\u0162"+
    "\u0162\u0162\u0162\224\072\u016C\u016C\u016E\u0170\244\244\244\322\u0158\224"+
    "\224\u0166\244\u0158\u0166\u0158\224\224\224\224\224\224\224\224\224\224\u0166"+
    "\224\224\224\u0166\224\u0158\u0166\224\244\322\u015C\u015E\322\244\u011E\322"+
    "\u011E\316\244\244\244\244\244\u0158\224\u0166\u0166\244\244\244\u0162\u0162"+
    "\u0162\u0162\u0162\316\224\u0166\244\244\244\244\244\u011E\u0156\u0158\224"+
    "\224\224\u0158\u0158\224\u0158\224\224\224\224\224\224\224\224\224\224\u0166"+
    "\224\224\224\u0166\224\u0158\224\224\244\u015A\u015C\u015E\316\316\u011E\u0156"+
    "\u0168\u015E\244\u0166\244\244\244\244\244\244\244\u0166\244\244\u0162\u0162"+
    "\u0162\u0162\u0162\244\244\244\244\244\244\244\244\224\224\224\224\u0166\224"+
    "\224\224\u0166\224\244\224\224\244\u015A\u015E\u015E\316\244\u0168\u016A\u0168"+
    "\u015E\244\244\244\244\u0156\244\244\224\u0158\224\244\244\u0162\u0162\u0162"+
    "\u0162\u0162\u0170\244\244\244\244\244\244\244\244\u0156\u0158\224\224\u0166"+
    "\244\224\u0166\224\224\244\u0158\u0166\u0166\224\244\u0158\u0166\244\224\u0166"+
    "\244\224\224\224\224\u0158\224\244\244\u015C\u0156\u016A\244\u015C\u016A\u015C"+
    "\u015E\244\244\244\244\u0168\244\244\244\244\244\244\244\u0172\u0162\u0162"+
    "\u0162\u0162\u0174\u0176\244\244\244\244\244\244\u0168\u015C\u0158\224\224"+
    "\224\u0166\224\u0166\224\224\224\224\224\224\224\224\224\224\224\u0166\224"+
    "\224\224\224\224\u0158\224\224\244\244\316\u0156\u015C\u016A\316\322\316\316"+
    "\244\244\244\u011E\322\244\244\244\244\224\244\244\u0162\u0162\u0162\u0162"+
    "\u0162\244\244\244\244\244\244\244\244\244\u015C\u0158\224\224\224\u0166\224"+
    "\u0166\224\224\224\224\224\224\224\224\224\224\224\u0166\224\224\224\224\224"+
    "\u0158\224\224\244\244\u015E\u015C\u015C\u016A\u0156\u016A\u015C\316\244\244"+
    "\244\u0168\u016A\244\244\244\u0166\224\224\224\224\u0166\224\224\224\224\224"+
    "\224\224\224\244\244\u015C\u015E\316\244\u015C\u016A\u015C\u015E\244\244\244"+
    "\244\u0168\244\244\244\244\244\u015C\u0158\224\224\224\224\224\224\224\224"+
    "\u0166\244\224\224\224\224\224\224\224\224\224\224\224\224\u0158\224\224\224"+
    "\224\u0158\244\224\224\224\u0166\244\322\244\u0168\u015C\316\322\322\u015C"+
    "\u015C\u015C\u015C\244\244\244\244\244\244\244\244\244\u015C\u0164\244\244"+
    "\244\244\244\u0158\224\224\224\224\224\224\224\224\224\224\224\224\224\224"+
    "\224\224\224\224\224\224\224\224\224\u0160\224\316\316\316\322\244\u0178\224"+
    "\224\224\u017A\316\316\316\u017C\u017E\u017E\u017E\u017E\u017E\u0112\244\244"+
    "\u0158\u0166\u0166\u0158\u0166\u0166\u0158\244\244\244\224\224\u0158\224\224"+
    "\224\u0158\224\u0158\u0158\244\224\u0158\224\u0160\224\316\316\316\u011E\u015A"+
    "\244\224\224\u0166\314\316\316\316\244\u017E\u017E\u017E\u017E\u017E\244\224"+
    "\244\u0180\u0182\u0112\u0112\u0112\u0112\u0112\u0112\u0112\u0184\u0182\u0182"+
    "\316\u0182\u0182\u0182\u0186\u0186\u0186\u0186\u0186\u0188\u0188\u0188\u0188"+
    "\u0188\u0100\u0100\u0100\u018A\u018A\u015C\224\224\224\224\u0158\224\224\224"+
    "\224\224\224\224\224\224\224\224\224\224\224\224\224\u0166\244\244\u011E\316"+
    "\316\316\316\316\316\u0156\316\316\u017C\316\224\224\244\244\316\316\316\316"+
    "\u011E\316\316\316\316\316\316\316\316\316\316\316\316\316\316\316\316\316"+
    "\322\u0182\u0182\u0182\u0182\u018C\u0182\u0182\u0170\u018E\244\244\244\244"+
    "\244\244\244\244\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224"+
    "\224\224\u0158\224\224\u0158\u0166\u015E\316\u0156\322\244\316\u015E\244\244"+
    "\244\u0186\u0186\u0186\u0186\u0186\u0112\u0112\u0112\224\224\224\u015C\316"+
    "\244\244\244\362\362\362\362\362\362\362\362\362\362\362\362\362\362\362\362"+
    "\362\362\362\244\244\244\244\244\224\224\224\224\224\224\224\224\224\224\224"+
    "\224\224\224\224\224\224\224\224\u0166\244\u011A\244\244\224\224\224\224\224"+
    "\224\224\224\224\224\224\224\224\244\244\u0158\224\u0166\244\244\224\224\224"+
    "\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224"+
    "\224\224\224\244\244\244\224\224\224\u0166\224\224\224\224\224\224\224\224"+
    "\224\224\224\224\224\224\224\u0166\u0166\224\224\244\224\224\224\u0166\u0166"+
    "\224\224\244\224\224\224\u0166\u0166\224\224\244\224\224\224\224\224\224\224"+
    "\224\224\224\224\224\224\224\224\u0166\u0166\224\224\244\224\224\224\u0166"+
    "\u0166\224\224\244\224\224\224\u0166\224\224\224\u0166\224\224\224\224\224"+
    "\224\224\224\224\224\224\u0166\224\224\224\224\224\224\224\224\224\224\224"+
    "\u0166\224\224\224\224\224\224\224\224\224\u0166\244\244\u011A\u0112\u0112"+
    "\u0112\u0190\u0192\u0192\u0192\u0192\u0194\u0196\u0198\u0198\u0198\u0176\244"+
    "\224\224\224\224\224\224\224\224\224\224\u0166\244\244\244\244\244\224\224"+
    "\224\224\224\224\u019A\u019C\224\224\224\u0166\244\244\244\244\u019E\224\224"+
    "\224\224\224\224\224\224\224\224\224\224\u01A0\u01A2\244\224\224\224\224\224"+
    "\u019A\u0112\u01A4\u01A6\244\244\244\244\244\244\244\224\224\224\224\224\224"+
    "\224\224\224\224\u015C\u015E\316\316\316\u015C\u015C\u015C\u015C\u0156\u015E"+
    "\316\316\316\316\316\u0112\u0112\u0112\u01A8\u0164\244\u0186\u0186\u0186\u0186"+
    "\u0186\244\244\244\244\244\244\244\244\244\244\244\020\020\020\u01AA\020\u01AC"+
    "\u01AE\u01B0\u017E\u017E\u017E\u017E\u017E\244\244\244\224\u01B2\224\224\224"+
    "\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224"+
    "\224\224\224\224\244\244\244\244\224\224\224\224\u0160\244\244\244\244\244"+
    "\244\244\244\244\244\244\142\142\142\142\142\142\142\142\142\142\142\u01B4"+
    "\u01B4\u01B6\244\244\142\142\142\142\142\142\142\142\142\142\142\142\142\244"+
    "\244\244\u01B8\u01B8\u01B8\u01B8\u01BA\u01BA\u01BA\u01BA\u01B8\u01B8\u01B8"+
    "\244\u01BA\u01BA\u01BA\244\u01B8\u01B8\u01B8\u01B8\u01BA\u01BA\u01BA\u01BA"+
    "\u01B8\u01B8\u01B8\u01B8\u01BA\u01BA\u01BA\u01BA\u01B8\u01B8\u01B8\244\u01BA"+
    "\u01BA\u01BA\244\u01BC\u01BC\u01BC\u01BC\u01BE\u01BE\u01BE\u01BE\u01B8\u01B8"+
    "\u01B8\u01B8\u01BA\u01BA\u01BA\u01BA\u01C0\u01C2\u01C2\u01C4\u01C6\u01C8\u01CA"+
    "\244\u01B4\u01B4\u01B4\u01B4\u01CC\u01CC\u01CC\u01CC\u01B4\u01B4\u01B4\u01B4"+
    "\u01CC\u01CC\u01CC\u01CC\u01B4\u01B4\u01B4\u01B4\u01CC\u01CC\u01CC\u01CC\u01B8"+
    "\u01B4\u01CE\u01B4\u01BA\u01D0\u01D2\u01D4\312\u01B4\u01CE\u01B4\u01D6\u01D6"+
    "\u01D2\312\u01B8\u01B4\244\u01B4\u01BA\u01D8\u01DA\312\u01B8\u01B4\u01DC\u01B4"+
    "\u01BA\u01DE\u01E0\312\244\u01B4\u01CE\u01B4\u01E2\u01E4\u01D2\u01E6\u01E8"+
    "\u01E8\u01E8\u01EA\u01E8\u01EC\u01AE\u01EE\u01F0\u01F0\u01F0\020\u01F2\u01F4"+
    "\u01F2\u01F4\020\020\020\020\u01F6\u01F8\u01F8\u01FA\u01FC\u01FC\u01FE\020"+
    "\u0200\u0202\020\u0204\u0206\020\u0208\u020A\020\020\020\244\244\244\244\244"+
    "\244\244\244\244\244\244\244\244\244\u01AE\u01AE\u01AE\u020C\244\110\110\110"+
    "\u020E\u0208\u0210\u0212\u0212\u0212\u0212\u0212\u020E\u0208\u020A\244\244"+
    "\244\244\244\244\244\244\072\072\072\072\072\072\072\072\244\244\244\244\244"+
    "\244\244\244\244\244\244\244\244\244\244\244\316\316\316\316\316\316\u0144"+
    "\u0102\u0146\u0102\244\244\244\244\244\244\244\244\244\244\244\244\244\244"+
    "\074\u0214\074\u0216\074\u0218\362\200\362\u021A\u0216\074\u0216\362\362\074"+
    "\074\074\u0214\u021C\u0214\u021E\362\u0220\362\u0216\220\224\u0222\u0224\244"+
    "\244\244\244\244\244\244\244\244\244\244\u0226\122\122\122\122\122\122\u0228"+
    "\u0228\u0228\u0228\u0228\u0228\u022A\u022A\u022C\u022C\u022C\u022C\u022C\u022C"+
    "\u022E\u022E\u0230\u0232\244\244\244\244\244\244\u0234\u0234\u0236\074\074"+
    "\u0234\074\074\u0236\u0238\074\u0236\074\074\074\u0236\074\074\074\074\074"+
    "\074\074\074\074\074\074\074\074\074\074\u0234\074\u0236\u0236\074\074\074"+
    "\074\074\074\074\074\074\074\074\074\074\074\074\244\244\244\244\244\244\u023A"+
    "\u023C\036\u0234\u023C\u023C\u023C\u0234\u023A\u020E\u023A\036\u0234\u023C"+
    "\u023C\u023A\u023C\036\036\036\u0234\u023A\u023C\u023C\u023C\u023C\u0234\u0234"+
    "\u023A\u023A\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C\036\u0234\u0234"+
    "\u023C\u023C\u0234\u0234\u0234\u0234\u023A\036\036\u023C\u023C\u023C\u023C"+
    "\u0234\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C"+
    "\u023C\u023C\u023C\036\u023A\u023C\036\u0234\u0234\036\u0234\u0234\u0234\u0234"+
    "\u023C\u0234\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C\036\u0234"+
    "\u0234\u023C\u0234\u0234\u0234\u0234\u023A\u023C\u023C\u0234\u023C\u0234\u0234"+
    "\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u023C\u0234"+
    "\u023C\244\244\244\244\244\244\244\074\074\074\074\u023C\u023C\074\074\074"+
    "\074\074\074\074\074\074\074\u023C\074\074\074\u023E\u0240\074\074\074\074"+
    "\074\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182"+
    "\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182"+
    "\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0242\u0244\074\074"+
    "\074\074\074\074\074\074\074\074\074\u0246\074\074\u0224\244\244\074\074\074"+
    "\074\074\074\074\074\074\074\074\074\074\074\074\074\074\074\074\u0224\244"+
    "\244\244\244\244\244\244\244\244\244\244\244\074\074\074\074\074\u0224\244"+
    "\244\244\244\244\244\244\244\244\244\u0248\u0248\u0248\u0248\u0248\u0248\u0248"+
    "\u0248\u0248\u0248\u024A\u024A\u024A\u024A\u024A\u024A\u024A\u024A\u024A\u024A"+
    "\u024C\u024C\u024C\u024C\u024C\u024C\u024C\u024C\u024C\u024C\u0182\u0182\u0182"+
    "\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u024E\u024E\u024E"+
    "\u024E\u024E\u024E\u024E\u024E\u024E\u024E\u024E\u024E\u024E\u0250\u0250\u0250"+
    "\u0250\u0250\u0250\u0250\u0250\u0250\u0250\u0250\u0250\u0250\u0252\244\244"+
    "\244\244\244\244\244\244\244\244\074\074\074\074\074\074\074\074\074\074\074"+
    "\244\244\244\244\244\074\074\074\074\074\074\074\074\074\074\074\u0238\074"+
    "\074\074\074\u0238\074\074\074\074\074\074\074\074\074\074\074\074\074\074"+
    "\074\074\074\074\074\074\074\074\074\074\074\074\074\244\244\244\244\074\074"+
    "\074\074\074\074\074\074\074\074\244\244\u0244\074\074\074\074\074\074\074"+
    "\074\074\074\u0238\074\244\244\244\244\244\244\244\u0244\074\u0224\074\074"+
    "\244\074\074\074\074\074\074\074\074\074\074\074\074\074\074\u0244\074\074"+
    "\074\074\074\074\074\074\074\074\074\074\074\074\074\074\074\u0244\u0244\074"+
    "\u0224\244\u0224\074\074\074\u0224\u0244\074\074\074\244\244\244\244\244\244"+
    "\244\u0254\u0254\u0254\u0254\u0254\u0256\u0256\u0256\u0256\u0256\u0258\u0258"+
    "\u0258\u0258\u0258\u0224\244\074\074\074\074\074\074\074\074\074\074\074\074"+
    "\u0244\074\074\074\074\074\074\u0224\074\074\074\074\074\074\074\074\074\074"+
    "\074\074\074\u0244\074\074\244\244\244\244\244\244\244\244\074\074\074\074"+
    "\074\074\244\244\012\020\u025A\u025C\022\022\022\022\022\074\022\022\022\022"+
    "\u025E\u0260\u0262\u0264\u0264\u0264\u0264\316\316\316\u0266\304\304\074\u0268"+
    "\u026A\244\074\224\224\224\224\224\224\224\224\224\224\u0166\244\u011E\u026C"+
    "\310\314\224\224\224\224\224\224\224\224\224\224\224\224\224\u026E\304\314"+
    "\244\244\u0158\224\224\224\224\224\224\224\224\224\224\224\224\224\224\224"+
    "\224\224\224\224\u0166\244\u0158\224\224\224\224\224\224\224\224\224\224\224"+
    "\224\224\224\u0166\u0182\u0188\u0188\u0182\u0182\u0182\u0182\u0182\u0182\u0182"+
    "\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0170"+
    "\244\u0188\u0188\u0188\u0188\u0188\u0182\u0182\u0182\u0182\u0182\u0182\u0182"+
    "\u0182\u0182\u0182\u0182\u0182\u0182\244\244\244\244\244\244\244\244\244\244"+
    "\244\244\244\244\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182"+
    "\u0182\u0182\u0182\u0182\244\u018E\u0270\u0270\u0270\u0270\u0270\u0182\u0182"+
    "\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182"+
    "\u0182\u0182\u0182\u0182\u0170\244\244\244\244\244\244\244\u0182\u0182\u0182"+
    "\u0182\u0182\u0182\244\244\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182"+
    "\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182"+
    "\u0182\u0182\u0170\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182"+
    "\u0182\u0170\244\u018E\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182"+
    "\u0182\u0182\u0182\u0182\u0182\u0182\u0182\u0182\244\224\224\224\224\224\224"+
    "\224\224\224\224\224\244\244\244\244\244\224\224\224\244\244\244\244\244\244"+
    "\244\244\244\244\244\244\244\224\224\224\224\224\224\u0166\244\074\074\074"+
    "\074\074\074\074\074\074\244\074\074\074\074\074\074\074\074\u0244\074\074"+
    "\074\074\074\u0224\074\u0224\u0224\244\244\244\244\244\244\244\244\244\244"+
    "\244\244\224\224\244\244\244\244\244\244\244\244\244\244\244\244\244\244\u0272"+
    "\u0272\u0272\u0272\u0272\u0272\u0272\u0272\u0272\u0272\u0272\u0272\u0272\u0272"+
    "\u0272\u0272\u0274\u0274\u0274\u0274\u0274\u0274\u0274\u0274\u0274\u0274\u0274"+
    "\u0274\u0274\u0274\u0274\u0274\224\224\224\224\224\224\224\244\244\244\244"+
    "\244\244\244\244\244\u01B4\u01B4\u01B4\u01CE\244\244\244\244\244\u0276\u01B4"+
    "\u01B4\244\244\u0278\u027A\u0124\u0124\u0124\u0124\u027C\u0124\u0124\u0124"+
    "\u0124\u0124\u0124\u0126\u0124\u0124\u0126\u0126\u0124\u0278\u0126\u0124\u0124"+
    "\u0124\u0124\u0124\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132"+
    "\u0132\u0132\u0132\u0132\u0132\u0132\u0132\244\244\244\244\244\244\244\244"+
    "\244\244\244\244\244\244\244\244\u0130\u0132\u0132\u0132\u0132\u0132\u0132"+
    "\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132"+
    "\u0132\u0132\u018A\244\244\244\244\244\244\244\244\u0132\u0132\u0132\u0132"+
    "\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\244"+
    "\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\244\244"+
    "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\u0132"+
    "\u0132\u0132\u0132\u0132\u0132\244\244\316\316\244\244\244\244\244\244\u027E"+
    "\u0280\u0282\u0284\u0284\u0284\u0284\u0284\u0284\u0284\u01A2\244\u0286\020"+
    "\u0204\u0288\034\u012C\u028A\020\u025E\u0284\u0284\u028C\020\u028E\u0234\u0290"+
    "\u0292\u01FE\244\244\u0132\u0134\u0134\u0132\u0132\u0132\u0132\u0132\u0132"+
    "\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132\u0132"+
    "\u0134\u0154\u0286\014\016\020\u018A\024\026\030\032\032\032\032\032\034\u0234"+
    "\u0294\042\044\044\044\044\044\044\044\044\044\044\044\044\u0296\u0298\052"+
    "\054\056\056\056\056\056\056\056\056\056\056\056\056\u029A\u029C\u0290\u0286"+
    "\u018A\u0204\224\224\224\224\224\u029E\224\224\224\224\224\224\224\224\224"+
    "\224\224\224\224\224\224\224\224\224\224\224\224\224\304\224\224\224\224\224"+
    "\224\224\224\224\224\224\224\224\224\224\u0166\244\224\224\224\244\224\224"+
    "\224\244\224\224\224\244\224\u0166\244\072\u02A0\u02A2\u02A4\u0238\u0234\u0236"+
    "\u0224\244\244\244\244\u0154\u01AE\074\244").toCharArray();


// The A table has 678 entries for a total of 2712 bytes.

static final char A[] = (
    "\u4800\u100F\u4800\u100F\u4800\u100F\u5800\u400F\u5000\u400F\u5800\u400F\u6000"+
    "\u400F\u5000\u400F\u5000\u400F\u5000\u400F\u6000\u400C\u6800\030\u6800\030"+
    "\u2800\030\u2800\u601A\u2800\030\u6800\030\u6800\030\uE800\025\uE800\026\u6800"+
    "\030\u2800\031\u3800\030\u2800\024\u3800\030\u2000\030\u1800\u3609\u1800\u3609"+
    "\u3800\030\u6800\030\uE800\031\u6800\031\uE800\031\u6800\030\u6800\030\202"+
    "\u7FE1\202\u7FE1\202\u7FE1\202\u7FE1\uE800\025\u6800\030\uE800\026\u6800\033"+
    "\u6800\u5017\u6800\033\201\u7FE2\201\u7FE2\201\u7FE2\201\u7FE2\uE800\025\u6800"+
    "\031\uE800\026\u6800\031\u4800\u100F\u4800\u100F\u5000\u100F\u3800\014\u6800"+
    "\030\u2800\u601A\u2800\u601A\u6800\034\u6800\034\u6800\033\u6800\034\000\u7002"+
    "\uE800\035\u6800\031\u6800\024\u6800\034\u6800\033\u2800\034\u2800\031\u1800"+
    "\u060B\u1800\u060B\u6800\033\u07FD\u7002\u6800\034\u6800\030\u6800\033\u1800"+
    "\u050B\000\u7002\uE800\036\u6800\u080B\u6800\u080B\u6800\u080B\u6800\030\202"+
    "\u7001\202\u7001\202\u7001\u6800\031\202\u7001\u07FD\u7002\201\u7002\201\u7002"+
    "\201\u7002\u6800\031\201\u7002\u061D\u7002\006\u7001\005\u7002\u04E6\u7001"+
    "\u03A1\u7002\000\u7002\006\u7001\005\u7002\006\u7001\005\u7002\u07FD\u7002"+
    "\u061E\u7001\006\u7001\000\u7002\u034A\u7001\u033A\u7001\006\u7001\005\u7002"+
    "\u0336\u7001\u0336\u7001\006\u7001\005\u7002\000\u7002\u013E\u7001\u032A\u7001"+
    "\u032E\u7001\006\u7001\u033E\u7001\u067D\u7002\u034E\u7001\u0346\u7001\000"+
    "\u7002\000\u7002\u034E\u7001\u0356\u7001\000\u7002\u035A\u7001\u036A\u7001"+
    "\006\u7001\005\u7002\u036A\u7001\005\u7002\u0366\u7001\u0366\u7001\006\u7001"+
    "\005\u7002\u036E\u7001\000\u7002\000\u7005\000\u7002\u0721\u7002\000\u7005"+
    "\000\u7005\012\uF001\007\uF003\011\uF002\012\uF001\007\uF003\011\uF002\011"+
    "\uF002\006\u7001\005\u7002\u013D\u7002\u07FD\u7002\012\uF001\u067E\u7001\u0722"+
    "\u7001\u7800\000\u7800\000\000\u7002\u0349\u7002\u0339\u7002\000\u7002\u0335"+
    "\u7002\u0335\u7002\000\u7002\u0329\u7002\000\u7002\u032D\u7002\u0335\u7002"+
    "\000\u7002\000\u7002\u033D\u7002\u0345\u7002\u034D\u7002\000\u7002\u034D\u7002"+
    "\u0355\u7002\000\u7002\000\u7002\u0359\u7002\u0369\u7002\000\u7002\000\u7002"+
    "\u0369\u7002\u0365\u7002\u0365\u7002\u036D\u7002\000\u7002\000\u7004\000\u7004"+
    "\000\u7004\u6800\033\u6800\033\000\u7004\u6800\033\u6800\033\000\u7004\u7800"+
    "\000\u4000\u3006\u4000\u3006\u4000\u3006\u46B1\u3006\u4000\u3006\u7800\000"+
    "\u6800\030\u7800\000\232\u7001\u6800\030\226\u7001\226\u7001\226\u7001\u7800"+
    "\000\u0102\u7001\u7800\000\376\u7001\376\u7001\u07FD\u7002\202\u7001\u7800"+
    "\000\202\u7001\231\u7002\225\u7002\225\u7002\225\u7002\u07FD\u7002\201\u7002"+
    "\175\u7002\201\u7002\u0101\u7002\375\u7002\375\u7002\u7800\000\371\u7002\345"+
    "\u7002\000\u7001\000\u7001\000\u7001\275\u7002\331\u7002\000\u7002\u0159\u7002"+
    "\u0141\u7002\u013D\u7002\000\u7002\u0142\u7001\u0142\u7001\u0141\u7002\u0141"+
    "\u7002\000\034\u4000\u3006\u4000\007\u4000\007\000\u7001\006\u7001\005\u7002"+
    "\u7800\000\u7800\000\006\u7001\u7800\000\302\u7001\302\u7001\302\u7001\302"+
    "\u7001\u7800\000\u7800\000\000\u7004\000\030\000\030\u7800\000\301\u7002\301"+
    "\u7002\301\u7002\301\u7002\u07FD\u7002\u7800\000\000\030\u6800\024\u7800\000"+
    "\u7800\000\u4000\u3006\u0800\030\u4000\u3006\u4000\u3006\u0800\030\u0800\u7005"+
    "\u0800\u7005\u0800\u7005\u7800\000\u0800\u7005\u0800\030\u0800\030\u7800\000"+
    "\u3800\030\u7800\000\u7800\000\u1000\030\u7800\000\u1000\u7005\u1000\u7005"+
    "\u1000\u7005\u1000\u7005\u7800\000\u1000\u7004\u1000\u7005\u1000\u7005\u4000"+
    "\u3006\u3000\u3409\u3000\u3409\u2800\030\u3000\030\u3000\030\u1000\030\u4000"+
    "\u3006\u1000\u7005\u1000\030\u1000\u7005\u4000\u3006\u4000\007\u4000\007\u4000"+
    "\u3006\u4000\u3006\u1000\u7004\u1000\u7004\u4000\u3006\u4000\u3006\u6800\034"+
    "\u1000\u7005\u1000\034\u1000\034\u7800\000\u1000\030\u1000\030\u7800\000\u4800"+
    "\u1010\u4000\u3006\000\u3008\u7800\000\000\u7005\u4000\u3006\000\u7005\000"+
    "\u3008\000\u3008\000\u3008\u4000\u3006\000\u7005\u4000\u3006\000\u3749\000"+
    "\u3749\000\030\u7800\000\000\u7005\u7800\000\u7800\000\000\u3008\000\u3008"+
    "\u7800\000\000\u05AB\000\u05AB\000\013\000\u06EB\000\034\u7800\000\u7800\000"+
    "\000\u3749\000\u074B\000\u080B\000\u080B\u7800\000\u7800\000\u2800\u601A\000"+
    "\u7004\u4000\u3006\u4000\u3006\000\030\000\u3609\000\u3609\000\u7005\000\034"+
    "\000\034\000\034\000\030\000\034\000\u3409\000\u3409\000\013\000\013\u6800"+
    "\025\u6800\026\u4000\u3006\000\034\u7800\000\000\034\000\030\000\u3709\000"+
    "\u3709\000\u3709\000\u070B\000\u042B\000\u054B\000\u080B\000\u080B\000\u080B"+
    "\000\u7005\000\030\000\030\000\u7005\u6000\u400C\000\u7005\000\u7005\u6800"+
    "\025\u6800\026\u7800\000\000\u046B\000\u046B\000\u046B\u7800\000\000\030\u2800"+
    "\u601A\u6800\024\u6800\030\u6800\030\u4800\u1010\u4800\u1010\u4800\u1010\u4800"+
    "\u1010\u7800\000\000\u7005\000\u7004\u07FD\u7002\u07FD\u7002\u07FD\u7002\355"+
    "\u7002\u07E1\u7002\u07E1\u7002\u07E2\u7001\u07E2\u7001\u07FD\u7002\u07E1\u7002"+
    "\u7800\000\u07E2\u7001\u06D9\u7002\u06D9\u7002\u06A9\u7002\u06A9\u7002\u0671"+
    "\u7002\u0671\u7002\u0601\u7002\u0601\u7002\u0641\u7002\u0641\u7002\u0609\u7002"+
    "\u0609\u7002\u07FF\uF003\u07FF\uF003\u07FD\u7002\u7800\000\u06DA\u7001\u06DA"+
    "\u7001\u07FF\uF003\u6800\033\u07FD\u7002\u6800\033\u06AA\u7001\u06AA\u7001"+
    "\u0672\u7001\u0672\u7001\u7800\000\u6800\033\u07FD\u7002\u07E5\u7002\u0642"+
    "\u7001\u0642\u7001\u07E6\u7001\u6800\033\u0602\u7001\u0602\u7001\u060A\u7001"+
    "\u060A\u7001\u6800\033\u7800\000\u6000\u400C\u6000\u400C\u6000\u400C\u6000"+
    "\014\u6000\u400C\u4800\u400C\000\u1010\u0800\u1010\u6800\024\u6800\024\u6800"+
    "\035\u6800\036\u6800\025\u6800\035\u6000\u400D\u5000\u400E\u7800\u1010\u7800"+
    "\u1010\u7800\u1010\u6000\014\u2800\030\u2800\030\u2800\030\u6800\030\u6800"+
    "\030\uE800\035\uE800\036\u6800\030\u6800\030\u6800\u5017\u6800\u5017\u6800"+
    "\030\u6800\031\uE800\025\uE800\026\u7800\000\u1800\u060B\u7800\000\u2800\031"+
    "\u2800\031\uE800\026\000\u7002\u1800\u040B\u1800\u040B\000\u7001\u6800\034"+
    "\u6800\034\000\u7001\000\u7002\000\u7001\000\u7001\000\u7002\u07FE\u7001\u6800"+
    "\034\u07FE\u7001\u07FE\u7001\u2800\034\000\u7002\000\u7005\000\u7002\u6800"+
    "\034\u7800\000\u7800\000\u6800\u080B\102\u742A\102\u742A\102\u780A\102\u780A"+
    "\101\u762A\101\u762A\101\u780A\101\u780A\000\u780A\000\u780A\000\u780A\000"+
    "\u700A\u6800\031\u6800\031\u6800\031\u6800\034\u6800\034\u6800\031\u6800\031"+
    "\uE800\031\uE800\031\uE800\031\u6800\034\uE800\025\uE800\026\u6800\034\000"+
    "\034\u6800\034\u7800\000\u6800\034\u6800\034\000\034\u1800\u042B\u1800\u042B"+
    "\u1800\u05AB\u1800\u05AB\u1800\u072B\u1800\u072B\152\034\152\034\151\034\151"+
    "\034\u1800\u06CB\u7800\000\u6800\u056B\u6800\u056B\u6800\u042B\u6800\u042B"+
    "\u6800\u06EB\u6800\u06EB\u6800\034\000\u7004\000\u7005\000\u772A\u6800\024"+
    "\u6800\025\u6800\026\u6800\026\u6800\034\000\u740A\000\u740A\000\u740A\u6800"+
    "\024\000\u7004\000\u764A\000\u776A\000\u748A\u7800\000\u4000\u3006\u6800\033"+
    "\000\u7005\u6800\u5017\000\u042B\000\u042B\000\023\000\023\000\022\000\022"+
    "\u7800\000\u07FD\u7002\u7800\000\u0800\u7005\u4000\u3006\u0800\u7005\u0800"+
    "\u7005\u2800\031\u6800\030\u6800\024\u6800\024\u6800\u5017\u6800\u5017\u6800"+
    "\025\u6800\026\u6800\025\u7800\000\u6800\030\u6800\u5017\u6800\u5017\u6800"+
    "\030\u3800\030\u6800\026\u2800\030\u2800\031\u2800\024\u6800\031\u7800\000"+
    "\u6800\030\u2800\u601A\u6800\031\u6800\030\202\u7FE1\u6800\025\u6800\030\u6800"+
    "\026\201\u7FE2\u6800\025\u6800\031\u6800\026\000\u7004\000\u7005\u6800\031"+
    "\u6800\033\u6800\034\u2800\u601A\u2800\u601A\u7800\000").toCharArray();


// In all, the character property tables require 14520 bytes.

  static char charMap [][][] = new char[][][] {
        { {'\u00DF'}, {'\u0053', '\u0053', } },
        { {'\u0149'}, {'\u02BC', '\u004E', } },
        { {'\u01F0'}, {'\u004A', '\u030C', } },
        { {'\u0390'}, {'\u0399', '\u0308', '\u0301', } },
        { {'\u03B0'}, {'\u03A5', '\u0308', '\u0301', } },
        { {'\u0587'}, {'\u0535', '\u0552', } },
        { {'\u1E96'}, {'\u0048', '\u0331', } },
        { {'\u1E97'}, {'\u0054', '\u0308', } },
        { {'\u1E98'}, {'\u0057', '\u030A', } },
        { {'\u1E99'}, {'\u0059', '\u030A', } },
        { {'\u1E9A'}, {'\u0041', '\u02BE', } },
        { {'\u1F50'}, {'\u03A5', '\u0313', } },
        { {'\u1F52'}, {'\u03A5', '\u0313', '\u0300', } },
        { {'\u1F54'}, {'\u03A5', '\u0313', '\u0301', } },
        { {'\u1F56'}, {'\u03A5', '\u0313', '\u0342', } },
        { {'\u1F80'}, {'\u1F08', '\u0399', } },
        { {'\u1F81'}, {'\u1F09', '\u0399', } },
        { {'\u1F82'}, {'\u1F0A', '\u0399', } },
        { {'\u1F83'}, {'\u1F0B', '\u0399', } },
        { {'\u1F84'}, {'\u1F0C', '\u0399', } },
        { {'\u1F85'}, {'\u1F0D', '\u0399', } },
        { {'\u1F86'}, {'\u1F0E', '\u0399', } },
        { {'\u1F87'}, {'\u1F0F', '\u0399', } },
        { {'\u1F88'}, {'\u1F08', '\u0399', } },
        { {'\u1F89'}, {'\u1F09', '\u0399', } },
        { {'\u1F8A'}, {'\u1F0A', '\u0399', } },
        { {'\u1F8B'}, {'\u1F0B', '\u0399', } },
        { {'\u1F8C'}, {'\u1F0C', '\u0399', } },
        { {'\u1F8D'}, {'\u1F0D', '\u0399', } },
        { {'\u1F8E'}, {'\u1F0E', '\u0399', } },
        { {'\u1F8F'}, {'\u1F0F', '\u0399', } },
        { {'\u1F90'}, {'\u1F28', '\u0399', } },
        { {'\u1F91'}, {'\u1F29', '\u0399', } },
        { {'\u1F92'}, {'\u1F2A', '\u0399', } },
        { {'\u1F93'}, {'\u1F2B', '\u0399', } },
        { {'\u1F94'}, {'\u1F2C', '\u0399', } },
        { {'\u1F95'}, {'\u1F2D', '\u0399', } },
        { {'\u1F96'}, {'\u1F2E', '\u0399', } },
        { {'\u1F97'}, {'\u1F2F', '\u0399', } },
        { {'\u1F98'}, {'\u1F28', '\u0399', } },
        { {'\u1F99'}, {'\u1F29', '\u0399', } },
        { {'\u1F9A'}, {'\u1F2A', '\u0399', } },
        { {'\u1F9B'}, {'\u1F2B', '\u0399', } },
        { {'\u1F9C'}, {'\u1F2C', '\u0399', } },
        { {'\u1F9D'}, {'\u1F2D', '\u0399', } },
        { {'\u1F9E'}, {'\u1F2E', '\u0399', } },
        { {'\u1F9F'}, {'\u1F2F', '\u0399', } },
        { {'\u1FA0'}, {'\u1F68', '\u0399', } },
        { {'\u1FA1'}, {'\u1F69', '\u0399', } },
        { {'\u1FA2'}, {'\u1F6A', '\u0399', } },
        { {'\u1FA3'}, {'\u1F6B', '\u0399', } },
        { {'\u1FA4'}, {'\u1F6C', '\u0399', } },
        { {'\u1FA5'}, {'\u1F6D', '\u0399', } },
        { {'\u1FA6'}, {'\u1F6E', '\u0399', } },
        { {'\u1FA7'}, {'\u1F6F', '\u0399', } },
        { {'\u1FA8'}, {'\u1F68', '\u0399', } },
        { {'\u1FA9'}, {'\u1F69', '\u0399', } },
        { {'\u1FAA'}, {'\u1F6A', '\u0399', } },
        { {'\u1FAB'}, {'\u1F6B', '\u0399', } },
        { {'\u1FAC'}, {'\u1F6C', '\u0399', } },
        { {'\u1FAD'}, {'\u1F6D', '\u0399', } },
        { {'\u1FAE'}, {'\u1F6E', '\u0399', } },
        { {'\u1FAF'}, {'\u1F6F', '\u0399', } },
        { {'\u1FB2'}, {'\u1FBA', '\u0399', } },
        { {'\u1FB3'}, {'\u0391', '\u0399', } },
        { {'\u1FB4'}, {'\u0386', '\u0399', } },
        { {'\u1FB6'}, {'\u0391', '\u0342', } },
        { {'\u1FB7'}, {'\u0391', '\u0342', '\u0399', } },
        { {'\u1FBC'}, {'\u0391', '\u0399', } },
        { {'\u1FC2'}, {'\u1FCA', '\u0399', } },
        { {'\u1FC3'}, {'\u0397', '\u0399', } },
        { {'\u1FC4'}, {'\u0389', '\u0399', } },
        { {'\u1FC6'}, {'\u0397', '\u0342', } },
        { {'\u1FC7'}, {'\u0397', '\u0342', '\u0399', } },
        { {'\u1FCC'}, {'\u0397', '\u0399', } },
        { {'\u1FD2'}, {'\u0399', '\u0308', '\u0300', } },
        { {'\u1FD3'}, {'\u0399', '\u0308', '\u0301', } },
        { {'\u1FD6'}, {'\u0399', '\u0342', } },
        { {'\u1FD7'}, {'\u0399', '\u0308', '\u0342', } },
        { {'\u1FE2'}, {'\u03A5', '\u0308', '\u0300', } },
        { {'\u1FE3'}, {'\u03A5', '\u0308', '\u0301', } },
        { {'\u1FE4'}, {'\u03A1', '\u0313', } },
        { {'\u1FE6'}, {'\u03A5', '\u0342', } },
        { {'\u1FE7'}, {'\u03A5', '\u0308', '\u0342', } },
        { {'\u1FF2'}, {'\u1FFA', '\u0399', } },
        { {'\u1FF3'}, {'\u03A9', '\u0399', } },
        { {'\u1FF4'}, {'\u038F', '\u0399', } },
        { {'\u1FF6'}, {'\u03A9', '\u0342', } },
        { {'\u1FF7'}, {'\u03A9', '\u0342', '\u0399', } },
        { {'\u1FFC'}, {'\u03A9', '\u0399', } },
        { {'\uFB00'}, {'\u0046', '\u0046', } },
        { {'\uFB01'}, {'\u0046', '\u0049', } },
        { {'\uFB02'}, {'\u0046', '\u004C', } },
        { {'\uFB03'}, {'\u0046', '\u0046', '\u0049', } },
        { {'\uFB04'}, {'\u0046', '\u0046', '\u004C', } },
        { {'\uFB05'}, {'\u0053', '\u0054', } },
        { {'\uFB06'}, {'\u0053', '\u0054', } },
        { {'\uFB13'}, {'\u0544', '\u0546', } },
        { {'\uFB14'}, {'\u0544', '\u0535', } },
        { {'\uFB15'}, {'\u0544', '\u053B', } },
        { {'\uFB16'}, {'\u054E', '\u0546', } },
        { {'\uFB17'}, {'\u0544', '\u053D', } },
    };
    
    static void dumpCharacterData() {
        System.out.print("const ushort X[] = {");
            for (int i = 0; i < X.length; i ++) {
                if ((i & 0x7) == 0) {
                    System.out.println();
                    System.out.print('\t');
                }
                System.out.print("0x");
                String hexa = Integer.toHexString(X[i]);
                System.out.print("0000".substring(hexa.length()));
                System.out.print(hexa);
                System.out.print(", ");
            }
            System.out.println();
            System.out.println("};");
            System.out.println();
            System.out.println();

            System.out.print("const ushort Y[] = {");
            for (int i = 0; i < Y.length; i ++) {
                if ((i & 0x7) == 0) {
                    System.out.println();
                    System.out.print('\t');
                }

                System.out.print("0x");
                String hexa = Integer.toHexString(Y[i]);
                System.out.print("0000".substring(hexa.length()));
                System.out.print(hexa);
                System.out.print(", ");
            }

            System.out.println();
            System.out.println("};");
            System.out.println();
            System.out.println();

            System.out.print("const uint A[] = {");
            for (int i = 0; i < A.length;  i ++) {
                if ((i & 0x7) == 0) {
                    System.out.println();
                    System.out.print('\t');
                }

                System.out.print("0x");
                String hexa = Integer.toHexString(A[i]);
                System.out.print("0000".substring(hexa.length()));
                System.out.print(hexa);
                hexa = Integer.toHexString(A[++i]);
                System.out.print("0000".substring(hexa.length()));
                System.out.print(hexa);

				System.out.print(", ");
            }

            System.out.println();
            System.out.println("};");
            System.out.println();
            System.out.println();
    }
#endif
#endif